<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
        <meta name="verify-v1" content="Qq4cneB3rmao09eEEtLOJX2rw+5ZMdf8/CiGxO9IulU=">
        <meta name="y_key" content="79a87047956c2ff1">       
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="generator" content="WordPress 3.5.1">

        <title>Write a C program to print all permutations of a given string - GeeksforGeeks | GeeksforGeeks</title>
   
       <style type="text/css" media="screen">
          @import url('http://www.geeksforgeeks.org/wp-content/themes/minimoo/style.css');
    </style>
    <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.geeksforgeeks.org/feed/rss/">
    <link rel="alternate" type="application/rss+xml" title="RSS 0.92" href="http://www.geeksforgeeks.org/feed/">
    <link rel="alternate" type="application/rss+xml" title="Atom" href="http://www.geeksforgeeks.org/feed/atom/">
    <link rel="alternate" type="application/rss+xml" title="RSS 2.0 comments feed" href="http://www.geeksforgeeks.org/comments/feed/">   
    <link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php">
    <link href="http://www.geeksforgeeks.org/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon">      
     <script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/client.js" async="" type="text/javascript" id="LR1"></script><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/all.js" id="facebook-jssdk"></script><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/widgets.js" id="twitter-wjs"></script><script gapi_processed="true" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/plusone.js" async="" type="text/javascript"></script><script async="" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/cbgapi.loaded_0"></script><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/ga.js" async="" type="text/javascript"></script><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/mootools_core.js" type="text/javascript"></script>
     <script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/mootools_more.js" type="text/javascript"></script>
   
    <script type="text/javascript">
        //if (document.images) {
        //    var preload_image = new Image(32,32);
        //    preload_image.src = "http://www.geeksforgeeks.org/wp-content/themes/minimoo/js/ajax-loader.gif";
        //}   
       
        var comments_per_page = 50;
        var comment_order = 'desc';
        var default_comments_page = 'newest';
    </script>
   
     <script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/main.js" type="text/javascript"></script>
   
       
    	 <!--[if lte IE 8]>
<div id="fb-root" style="width: 90;"></div> 
 
<!--<![endif]-->

<!-- This site is optimized with the Yoast WordPress SEO plugin v1.4.7 - http://yoast.com/wordpress/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Write a C program to print all permutations of a given string - GeeksforGeeks">
<meta property="og:url" content="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">
<meta property="og:site_name" content="GeeksforGeeks">
<meta property="og:image" content="http://www.geeksforgeeks.org/wp-content/uploads/NewPermutation.gif">
<!-- / Yoast WordPress SEO plugin. -->


            <script type="text/javascript">//<![CDATA[
            // Google Analytics for WordPress by Yoast v4.3.3 | http://yoast.com/wordpress/google-analytics/
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-12148232-1']);
				            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
            //]]></script>
			<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks Â» Write a C program to print all permutations of a given string Comments Feed" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/feed/">
<link rel="stylesheet" id="bbp-default-bbpress-css" href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/bbpress.css" type="text/css" media="screen">
<link rel="stylesheet" id="jamie_social-css" href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/social.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-pagenavi-css" href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/pagenavi-css.css" type="text/css" media="all">
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/comment-reply.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/jquery.js"></script>
<script type="text/javascript">try{jQuery.noConflict();}catch(e){};</script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/all_002.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/googletracking.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/head_twitterlinkedin.js"></script><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/widgets.js" async="" type="text/javascript"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/wp-quicklatex-frontend.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.geeksforgeeks.org/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.geeksforgeeks.org/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 3.5.1">
<link rel="shortlink" href="http://www.geeksforgeeks.org/?p=767">

<!-- Bad Behavior 2.2.14 run time: 2.109 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1370108840 178.32.31.171';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		
		<script type="text/javascript">
			/* <![CDATA[ */
			
						jQuery(document).ready( function() {

				/* Use backticks instead of <code> for the Code button in the editor */
				if ( typeof( edButtons ) !== 'undefined' ) {
					edButtons[110] = new QTags.TagButton( 'code', 'code', '`', '`', 'c' );
					QTags._buttonsInit();
				}

				/* Tab from topic title */
				jQuery( '#bbp_topic_title' ).bind( 'keydown.editor-focus', function(e) {
					if ( e.which !== 9 )
						return;

					if ( !e.ctrlKey && !e.altKey && !e.shiftKey ) {
						if ( typeof( tinymce ) !== 'undefined' ) {
							if ( ! tinymce.activeEditor.isHidden() ) {
								var editor = tinymce.activeEditor.editorContainer;
								jQuery( '#' + editor + ' td.mceToolbar > a' ).focus();
							} else {
								jQuery( 'textarea.bbp-the-content' ).focus();
							}
						} else {
							jQuery( 'textarea.bbp-the-content' ).focus();
						}

						e.preventDefault();
					}
				});

				/* Shift + tab from topic tags */
				jQuery( '#bbp_topic_tags' ).bind( 'keydown.editor-focus', function(e) {
					if ( e.which !== 9 )
						return;

					if ( e.shiftKey && !e.ctrlKey && !e.altKey ) {
						if ( typeof( tinymce ) !== 'undefined' ) {
							if ( ! tinymce.activeEditor.isHidden() ) {
								var editor = tinymce.activeEditor.editorContainer;
								jQuery( '#' + editor + ' td.mceToolbar > a' ).focus();
							} else {
								jQuery( 'textarea.bbp-the-content' ).focus();
							}
						} else {
							jQuery( 'textarea.bbp-the-content' ).focus();
						}

						e.preventDefault();
					}
				});
			});
						/* ]]> */
		</script>

	<meta property="fb:app_id" content="308017392649785">
<meta property="fb:admins" content="100002858089465,678632134">
<style type="text/css">
	div.wpld_pr {
		font-size: 6pt;
		color: #000000;
		float: left;
		height: 30px;
		margin-right: 5px;
	}
	div.wpld_prg {
		width: 40px;
		border: 1px solid #999999;
		height: 3px;
		font-size: 1px;
	}
	div.wpld_prb {
		background: #5eaa5e;
		height: 3px;
		font-size: 1px;
	}
	.wpld_panel {
		padding:6px;
		background:#ddd;
		border:1px solid black;
	}
	/* All pages are, or will become, encloded in <span>s of this class */
	.wpld_page{
		/* background: #FDEEF4;
		border: 1px dashed #505050;
		font: 12px arial; */
	}
	/* The links including link title, description and pagerank icon */
	.wpld_links{
	}
	.wpld_premium_links{
		border: 1px dashed #000;
		background-color:#FFFF99;
		font: 14px arial;
	}
	/* The navbar which shows these links: Home | Add URL | Link To Us | Search */
	.wpld_navbar {
	}
</style><link rel="stylesheet" type="text/css" href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/recaptcha.css">	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><style type="text/css" id="syntaxhighlighteranchor"></style>
   
<style type="text/css">.recaptchatable td img{display:block}.recaptchatable .recaptcha_r1_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') 0 -63px no-repeat;width:318px;height:9px}.recaptchatable .recaptcha_r2_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -18px 0 no-repeat;width:9px;height:57px}.recaptchatable .recaptcha_r2_c2{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -27px 0 no-repeat;width:9px;height:57px}.recaptchatable .recaptcha_r3_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') 0 0 no-repeat;width:9px;height:63px}.recaptchatable .recaptcha_r3_c2{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -18px -57px no-repeat;width:300px;height:6px}.recaptchatable .recaptcha_r3_c3{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -9px 0 no-repeat;width:9px;height:63px}.recaptchatable .recaptcha_r4_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -43px 0 no-repeat;width:171px;height:49px}.recaptchatable .recaptcha_r4_c2{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -36px 0 no-repeat;width:7px;height:57px}.recaptchatable .recaptcha_r4_c4{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -214px 0 no-repeat;width:97px;height:57px}.recaptchatable .recaptcha_r7_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -43px -49px no-repeat;width:171px;height:8px}.recaptchatable .recaptcha_r8_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -43px -49px no-repeat;width:25px;height:8px}.recaptchatable .recaptcha_image_cell center img{height:57px}.recaptchatable .recaptcha_image_cell center{height:57px}.recaptchatable .recaptcha_image_cell{background-color:white;height:57px}#recaptcha_area,#recaptcha_table{width:318px!important}.recaptchatable,#recaptcha_area tr,#recaptcha_area td,#recaptcha_area th{margin:0!important;border:0!important;padding:0!important;border-collapse:collapse!important;vertical-align:middle!important}.recaptchatable *{margin:0;padding:0;border:0;font-family:helvetica,sans-serif;font-size:8pt;color:black;position:static;top:auto;left:auto;right:auto;bottom:auto}.recaptchatable #recaptcha_image{margin:auto}.recaptchatable img{border:0!important;margin:0!important;padding:0!important}.recaptchatable a,.recaptchatable a:hover{cursor:pointer;outline:none;border:0!important;padding:0!important;text-decoration:none;color:blue;background:none!important;font-weight:normal}.recaptcha_input_area{position:relative!important;width:153px!important;height:45px!important;margin-left:7px!important;margin-right:7px!important;background:none!important}.recaptchatable label.recaptcha_input_area_text{margin:0!important;padding:0!important;position:static!important;top:auto!important;left:auto!important;right:auto!important;bottom:auto!important;background:none!important;height:auto!important;width:auto!important}.recaptcha_theme_red label.recaptcha_input_area_text,.recaptcha_theme_white label.recaptcha_input_area_text{color:black!important}.recaptcha_theme_blackglass label.recaptcha_input_area_text{color:white!important}.recaptchatable #recaptcha_response_field{width:153px!important;position:relative!important;bottom:7px!important;padding:0!important;margin:15px 0 0 0!important;font-size:10pt}.recaptcha_theme_blackglass #recaptcha_response_field,.recaptcha_theme_white #recaptcha_response_field{border:1px solid gray}.recaptcha_theme_red #recaptcha_response_field{border:1px solid #cca940}.recaptcha_audio_cant_hear_link{font-size:7pt;color:black}#recaptcha_instructions_error{color:red!important}.recaptcha_only_if_privacy{float:right;text-align:right}

.recaptcha_is_showing_audio .recaptcha_only_if_image,.recaptcha_isnot_showing_audio .recaptcha_only_if_audio,.recaptcha_had_incorrect_sol .recaptcha_only_if_no_incorrect_sol,.recaptcha_nothad_incorrect_sol .recaptcha_only_if_incorrect_sol{display:none !important}</style><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/nonSecureAnonymousFramework"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}
.fb_invisible{display:none}
.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}
.fb_reset > div{overflow:hidden}
.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}
.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}
.fb_dialog_content{background:#fff;color:#333}
.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px;top:8px\9;right:7px\9}
.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}
.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}
.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_loader{background-color:#f2f2f2;border:1px solid #606060;font-size:24px;padding:20px}
.fb_dialog_top_left,
.fb_dialog_top_right,
.fb_dialog_bottom_left,
.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}
/* @noflip */
.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}
/* @noflip */
.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}
/* @noflip */
.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}
/* @noflip */
.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}
.fb_dialog_vert_left,
.fb_dialog_vert_right,
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}
.fb_dialog_vert_left,
.fb_dialog_vert_right{width:10px;height:100%}
.fb_dialog_vert_left{margin-left:-10px}
.fb_dialog_vert_right{right:0;margin-right:-10px}
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{width:100%;height:10px}
.fb_dialog_horiz_top{margin-top:-10px}
.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}
.fb_dialog_iframe{line-height:0}
.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3b5998;color:#fff;font-size:14px;font-weight:bold;margin:0}
.fb_dialog_content .dialog_title > span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif)
no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}
body.fb_hidden{-webkit-transform:none;height:100%;margin:0;left:-10000px;overflow:visible;position:absolute;top:-10000px;width:100%
}
.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif)
white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}
.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}
#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}
#fb-root #fb_dialog_ipad_overlay.hidden{display:none}
.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}
.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0 0, 0 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}
.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%
}
.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0 0, 0 100%, from(#4966A6),
color-stop(0.5, #355492), to(#2A4887));border:1px solid #29447e;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset,
rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}
.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}
.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}
.fb_dialog_content .dialog_footer{background:#f2f2f2;border:1px solid #555;border-top-color:#ccc;height:40px}
#fb_dialog_loader_close{float:left}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}
.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}
.fb_iframe_widget iframe{position:absolute}
.fb_iframe_widget_lift{z-index:1}
.fb_hide_iframes iframe{position:relative;left:-10000px}
.fb_iframe_widget_loader{position:relative;display:inline-block}
.fb_iframe_widget_fluid{display:inline}
.fb_iframe_widget_fluid span{width:100%}
.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}
.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_connect_bar_container div,
.fb_connect_bar_container span,
.fb_connect_bar_container a,
.fb_connect_bar_container img,
.fb_connect_bar_container strong{background:none;border-spacing:0;border:0;direction:ltr;font-style:normal;font-variant:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal;vertical-align:baseline}
.fb_connect_bar_container{position:fixed;left:0 !important;right:0 !important;height:42px !important;padding:0 25px !important;margin:0 !important;vertical-align:middle !important;border-bottom:1px solid #333 !important;background:#3b5998 !important;z-index:99999999 !important;overflow:hidden !important}
.fb_connect_bar_container_ie6{position:absolute;top:expression(document.compatMode=="CSS1Compat"? document.documentElement.scrollTop+"px":body.scrollTop+"px")}
.fb_connect_bar{position:relative;margin:auto;height:100%;width:100%;padding:6px 0 0 0 !important;background:none;color:#fff !important;font-family:"lucida grande", tahoma, verdana, arial, sans-serif !important;font-size:13px !important;font-style:normal !important;font-variant:normal !important;font-weight:normal !important;letter-spacing:normal !important;line-height:1 !important;text-decoration:none !important;text-indent:0 !important;text-shadow:none !important;text-transform:none !important;white-space:normal !important;word-spacing:normal !important}
.fb_connect_bar a:hover{color:#fff}
.fb_connect_bar .fb_profile img{height:30px;width:30px;vertical-align:middle;margin:0 6px 5px 0}
.fb_connect_bar div a,
.fb_connect_bar span,
.fb_connect_bar span a{color:#bac6da;font-size:11px;text-decoration:none}
.fb_connect_bar .fb_buttons{float:right;margin-top:7px}
.fb_edge_widget_with_comment{position:relative;*z-index:1000}
.fb_edge_widget_with_comment span.fb_edge_comment_widget{position:absolute}
.fb_edge_widget_with_comment span.fb_send_button_form_widget{z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget .FB_Loader{left:0;top:1px;margin-top:6px;margin-left:0;background-position:50% 50%;background-color:#fff;height:150px;width:394px;border:1px #666 solid;border-bottom:2px solid #283e6c;z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.dark .FB_Loader{background-color:#000;border-bottom:2px solid #ccc}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.siderender
.FB_Loader{margin-top:0}
.fbpluginrecommendationsbarleft,
.fbpluginrecommendationsbarright{position:fixed !important;bottom:0;z-index:999}
/* @noflip */
.fbpluginrecommendationsbarleft{left:10px}
/* @noflip */
.fbpluginrecommendationsbarright{right:10px}</style><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/a" type="text/javascript"></script><style type="text/css">.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsq_a{padding:0}.gscsep_a{display:none}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;user-select:none;-moz-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gssb_a{padding:0 7px}.gssb_e{border:0}.gssb_l{margin:5px 0}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/search.js" type="text/javascript"></script><style type="text/css">* html #li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link{height:1% !important;}#li_ui_li_gen_1370542646542_0{position:relative !important;overflow:visible !important;display:block !important;}#li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link{border:0 !important;height:20px !important;text-decoration:none !important;padding:0 !important;margin:0 !important;display:inline-block !important;}#li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link:link, #li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link:visited, #li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link:hover, #li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link:active{border:0 !important;text-decoration:none !important;}#li_ui_li_gen_1370542646542_0 a#li_ui_li_gen_1370542646542_0-link:after{content:"." !important;display:block !important;clear:both !important;visibility:hidden !important;line-height:0 !important;height:0 !important;}#li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-logo{background:url(http://static.licdn.com/scds/common/u/img/sprite/sprite_connect_v13.png) 0px -276px no-repeat !important;cursor:pointer !important;border:0 !important;text-indent:-9999em !important;overflow:hidden !important;padding:0 !important;margin:0 !important;position:absolute !important;left:0px !important;top:0px !important;display:block !important;width:20px !important;height:20px !important;float:right !important;}#li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-logo{background-position:-20px -276px !important;}#li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-logo, #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-logo{background-position:-40px -276px !important;}.IN-shadowed #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-logo{}#li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title{color:#333 !important;cursor:pointer !important;display:block !important;white-space:nowrap !important;float:left !important;margin-left:1px !important;vertical-align:top !important;overflow:hidden !important;text-align:center !important;height:18px !important;padding:0 4px 0 23px !important;border:1px solid #000 !important;border-top-color:#E2E2E2 !important;border-right-color:#BFBFBF !important;border-bottom-color:#B9B9B9 !important;border-left-color:#E2E2E2 !important;border-left:0 !important;text-shadow:#FFFFFF -1px 1px 0 !important;line-height:20px !important;border-radius:0 !important;-moz-border-radius:0 !important;border-top-right-radius:2px !important;border-bottom-right-radius:2px !important;-moz-border-radius-topright:2px !important;-moz-border-radius-bottomright:2px !important;background-color:#ECECEC !important;background-image:-moz-linear-gradient(top, #FEFEFE 0%, #ECECEC 100%) !important;}#li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title{border:1px solid #000 !important;border-top-color:#ABABAB !important;border-right-color:#9A9A9A !important;border-bottom-color:#787878 !important;border-left-color:#04568B !important;border-left:0 !important;background-color:#EDEDED !important;background-image:-moz-linear-gradient(top, #EDEDED 0%, #DEDEDE 100%) !important;}#li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title, #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title{color:#666 !important;border:1px solid #000 !important;border-top-color:#B6B6B6 !important;border-right-color:#B3B3B3 !important;border-bottom-color:#9D9D9D !important;border-left-color:#49627B !important;border-left:0 !important;background-color:#DEDEDE !important;background-image:-moz-linear-gradient(top, #E3E3E3 0%, #EDEDED 100%) !important;}.IN-shadowed #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title{}.IN-shadowed #li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title{}.IN-shadowed #li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title, .IN-shadowed #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title{}#li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title-text, #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title-text *{color:#333 !important;font-size:11px !important;font-family:Arial, sans-serif !important;font-weight:bold !important;font-style:normal !important;display:inline-block !important;background:transparent none !important;vertical-align:baseline !important;height:18px !important;line-height:20px !important;float:none !important;}#li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title-text strong{font-weight:bold !important;}#li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title-text em{font-style:italic !important;}#li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title-text, #li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title-text *{color:#000 !important;}#li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title-text, #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title-text, #li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title-text *, #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title-text *{color:#666 !important;}#li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title #li_ui_li_gen_1370542646542_0-mark{display:inline-block !important;width:0px !important;overflow:hidden !important;}.success #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title{color:#333 !important;border-top-color:#E2E2E2 !important;border-right-color:#BFBFBF !important;border-bottom-color:#B9B9B9 !important;border-left-color:#E2E2E2 !important;background-color:#ECECEC !important;background-image:-moz-linear-gradient(top, #FEFEFE 0%, #ECECEC 100%) !important;}.success #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title-text, .success #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title-text *{color:#333 !important;}.IN-shadowed .success #li_ui_li_gen_1370542646542_0 #li_ui_li_gen_1370542646542_0-title{}.success #li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title{color:#000 !important;border-top-color:#ABABAB !important;border-right-color:#9A9A9A !important;border-bottom-color:#787878 !important;border-left-color:#04568B !important;background-color:#EDEDED !important;background-image:-moz-linear-gradient(top, #EDEDED 0%, #DEDEDE 100%) !important;}.success #li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title-text, .success #li_ui_li_gen_1370542646542_0.hovered #li_ui_li_gen_1370542646542_0-title-text *{color:#000 !important;}.success #li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title, .success #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title{color:#666 !important;border-top-color:#B6B6B6 !important;border-right-color:#B3B3B3 !important;border-bottom-color:#9D9D9D !important;border-left-color:#49627B !important;background-color:#DEDEDE !important;background-image:-moz-linear-gradient(top, #E3E3E3 0%, #EDEDED 100%) !important;}.success #li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title-text, .success #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title-text, .success #li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title-text *, .success #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title-text *{color:#666 !important;}.IN-shadowed .success #li_ui_li_gen_1370542646542_0.clicked #li_ui_li_gen_1370542646542_0-title, .IN-shadowed .success #li_ui_li_gen_1370542646542_0.down #li_ui_li_gen_1370542646542_0-title{}#li_ui_li_gen_1370542646564_1-container.IN-right {display:inline-block !important;float:left !important;overflow:visible !important;position:relative !important;height:18px !important;padding-left:2px !important;line-height:1px !important;cursor:pointer !important;}#li_ui_li_gen_1370542646564_1.IN-right {display:block !important;float:left !important;height:18px !important;margin-right:4px !important;padding-right:4px !important;background:url(http://static.licdn.com/scds/common/u/img/sprite/sprite_connect_v13.png) right -100px no-repeat !important;}#li_ui_li_gen_1370542646564_1-inner.IN-right {display:block !important;float:left !important;padding-left:8px !important;text-align:center !important;background:url(http://static.licdn.com/scds/common/u/img/sprite/sprite_connect_v13.png) 0px -60px no-repeat !important;}#li_ui_li_gen_1370542646564_1-content.IN-right {display:inline !important;font-size:11px !important;color:#04558B !important;font-weight:bold !important;font-family:Arial, sans-serif !important;line-height:18px !important;padding:0 5px 0 5px !important;}#li_ui_li_gen_1370542646564_1-container.IN-hovered #li_ui_li_gen_1370542646564_1.IN-right, #li_ui_li_gen_1370542646564_1-container.IN-clicked #li_ui_li_gen_1370542646564_1.IN-right, #li_ui_li_gen_1370542646564_1-container.IN-down #li_ui_li_gen_1370542646564_1.IN-right {background-position-y:-120px !important;}#li_ui_li_gen_1370542646564_1-container.IN-hovered #li_ui_li_gen_1370542646564_1-inner.IN-right, #li_ui_li_gen_1370542646564_1-container.IN-clicked #li_ui_li_gen_1370542646564_1-inner.IN-right, #li_ui_li_gen_1370542646564_1-container.IN-down #li_ui_li_gen_1370542646564_1-inner.IN-right {background-position-y:-80px !important;}#li_ui_li_gen_1370542646564_1-container.IN-empty {display:none !important;}#li_ui_li_gen_1370542646564_1-container.IN-hidden #li_ui_li_gen_1370542646564_1 {display:none !important;}</style></head>

<body data-twttr-rendered="true"><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/hub.htm" style="position: absolute; top: -9999em; width: 10px; height: 10px;" name="twttrHubFrameSecure" tabindex="0" allowtransparency="true" id="twttrHubFrameSecure" frameborder="0" scrolling="no"></iframe><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/hub_002.htm" style="position: absolute; top: -9999em; width: 10px; height: 10px;" name="twttrHubFrame" tabindex="0" allowtransparency="true" id="twttrHubFrame" frameborder="0" scrolling="no"></iframe>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p> <br><br> <a rel="nofollow" href="http://www.geeksforgeeks.org/wp-login.php">Log in</a></p></b>  
           <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
                   <li><a href="http://www.geeksforgeeks.org/">
                              Home</a></li>
                               <li><a href="http://www.geeksforgeeks.org/forums/">Q&amp;A</a></li>
                               <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
                               <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a question</a></li>   
            </ul>

            <ul>
                <li class="page_item page-item-9830"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
<li class="page_item page-item-21638"><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
<li class="page_item page-item-24811"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
<li class="page_item page-item-24966"><a href="http://www.geeksforgeeks.org/c/">C</a></li>
<li class="page_item page-item-25749"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
<li class="page_item page-item-26089"><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
<li class="page_item page-item-2"><a href="http://www.geeksforgeeks.org/about/">About us</a></li>
                             </ul> 
                     
            <div class="rssfeed">
                <!--<a href="http://feeds.feedburner.com/limetouch" title="Subscribe to LimeTouch RSS Feed"><strong>Subscribe</strong></a>-->
                <!--<<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to GeeksforGeeks RSS Feed"><strong>Subscribe</strong></a>-->            
            </div>    
               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays" title="Questions regarding Arrays">Arrays</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles" title="View all posts filed under C/C++ Puzzles">C/C++ Puzzles</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list" title="Linked List problems">Linked Lists</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings" title="Questions related to strings">Strings</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree" title="View all posts filed under Trees">Trees</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	
	
	<div class="post" id="post">
	
		
			
				
			<div class="post-main" id="post-767">
		
				<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Write a C program to print all permutations of a given string</h2>
					</div>
					
					<div class="post-date">August 2, 2009</div>
					<div class="clear"></div>
				</div>
				  
				<div class="post-content" id="post-content">
					<p>A permutation, also called an âarrangement numberâ or âorder,â 
is a rearrangement of the elements of an ordered list S into a 
one-to-one correspondence with S itself. A string of length n has n! 
permutation.<span id="more-767"></span><br>
Source: Mathword(<a href="http://mathworld.wolfram.com/Permutation.html">http://mathworld.wolfram.com/Permutation.html</a>)</p>
<p>Below are the permutations of string ABC.<br>
ABC, ACB, BAC, BCA, CAB, CBA</p>
<p>Here is a solution using backtracking.</p>
<p><a href="http://www.geeksforgeeks.org/wp-content/uploads/NewPermutation.gif"><img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/NewPermutation.gif" alt="NewPermutation" class="aligncenter size-full wp-image-118925" height="231" width="565"></a></p>
<div><div id="highlighter_970775" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor"># include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp comments">/* Function to swap values at two pointers */</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">swap (</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*x, </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*y)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">temp;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">temp = *x;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*x = *y;</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*y = temp;</code></div><div class="line number10 index9 alt1"><code class="cpp plain">}</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number12 index11 alt1 highlighted"><code class="cpp comments">/* Function to print permutations of string</code></div><div class="line number13 index12 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">This function takes three parameters:</code></div><div class="line number14 index13 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">1. String</code></div><div class="line number15 index14 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">2. Starting index of the string</code></div><div class="line number16 index15 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">3. Ending index of the string. */</code></div><div class="line number17 index16 alt2 highlighted"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">n) </code></div><div class="line number18 index17 alt1 highlighted"><code class="cpp plain">{</code></div><div class="line number19 index18 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j; </code></div><div class="line number20 index19 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(i == n)</code></div><div class="line number21 index20 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">, a);</code></div><div class="line number22 index21 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number23 index22 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number24 index23 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(j = i; j &lt;= n; j++)</code></div><div class="line number25 index24 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number26 index25 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j));</code></div><div class="line number27 index26 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, i+1, n);</code></div><div class="line number28 index27 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j)); </code><code class="cpp comments">//backtrack</code></div><div class="line number29 index28 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number30 index29 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number31 index30 alt2 highlighted"><code class="cpp plain">} </code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="cpp comments">/* Driver program to test above functions */</code></div><div class="line number34 index33 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number35 index34 alt2"><code class="cpp plain">{</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">a[] = </code><code class="cpp string">"ABC"</code><code class="cpp plain">;&nbsp; </code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, 0, 2);</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">getchar</code><code class="cpp plain">();</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number40 index39 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Output:
</p><pre>ABC
ACB
BAC
BCA
CBA
CAB</pre>
<p><strong><br>
Algorithm Paradigm: </strong>Backtracking<br>
<strong>Time Complexity:  </strong>O(n*n!)</p>
<p>Please write comments if you find the above codes/algorithms incorrect, or find other ways to solve the same problem.</p>
		
 <span class="martiniboy_social_list">
<ul class="jamie_social martinileft">
  <li class="martinifb"><fb:like class="fb_edge_widget_with_comment fb_iframe_widget" fb-xfbml-state="rendered" send="false" layout="button_count" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/" show_faces="false" width="90"><span style="height: 19px; width: 70px;"><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/like.htm" class="fb_ltr" title="Like this content on Facebook." style="border: medium none; overflow: hidden; height: 19px; width: 70px;" name="f3ed48b5fb6ff5a" id="f20618eb17e0204" scrolling="no"></iframe></span></fb:like>   </li>


    <!--[if !lte IE 7]><!-->
  <li>
    <div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px;"><iframe title="+1" data-gapiattached="true" allowtransparency="true" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/fastbutton.htm" name="I0_1370542370674" id="I0_1370542370674" vspace="0" tabindex="0" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>
  </li>
  <!--<![endif]-->
    <li><iframe data-twttr-rendered="true" title="Twitter Tweet Button" style="width: 108px; height: 20px;" class="twitter-share-button twitter-count-horizontal" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/tweet_button.htm" allowtransparency="true" frameborder="0" scrolling="no"></iframe></li>
    <li><span class="IN-widget" style="line-height: 1; vertical-align: baseline; display: inline-block; text-align: center;"><span style="padding: 0px ! important; margin: 0px ! important; text-indent: 0px ! important; display: inline-block ! important; vertical-align: baseline ! important; font-size: 1px ! important;"><span id="li_ui_li_gen_1370542646542_0"><a id="li_ui_li_gen_1370542646542_0-link" href="javascript:void(0);"><span id="li_ui_li_gen_1370542646542_0-logo">in</span><span id="li_ui_li_gen_1370542646542_0-title"><span id="li_ui_li_gen_1370542646542_0-mark"></span><span id="li_ui_li_gen_1370542646542_0-title-text">Share</span></span></a></span></span><span style="padding: 0px ! important; margin: 0px ! important; text-indent: 0px ! important; display: inline-block ! important; vertical-align: baseline ! important; font-size: 1px ! important;"><span id="li_ui_li_gen_1370542646564_1-container" class="IN-right IN-hidden"><span id="li_ui_li_gen_1370542646564_1" class="IN-right"><span id="li_ui_li_gen_1370542646564_1-inner" class="IN-right"><span id="li_ui_li_gen_1370542646564_1-content" class="IN-right">0</span></span></span></span></span></span><script type="in/share+init" data-url="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/" data-counter="right" data-onsuccess="LinkedInShare"></script></li>
  </ul>
<br class="jamie_clear">
</span>
 
<script type="text/javascript"><!--
google_ad_client = "ca-pub-9465609616171866";
/* Big Rectangle Blog Bottom */
google_ad_slot = "4061219431";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="280" scrolling="no" width="336"></iframe></ins></ins>     			

<div class="yarpp-related">
<b>You may also like following posts</b><ol>
<li><a href="http://www.geeksforgeeks.org/remove-all-duplicates-from-the-input-string/" rel="bookmark" title="Remove all duplicates from the input string.">Remove all duplicates from the input string.</a></li>
<li><a href="http://www.geeksforgeeks.org/print-all-the-duplicates-in-the-input-string/" rel="bookmark" title="Print all the duplicates in the input string.">Print all the duplicates in the input string.</a></li>
<li><a href="http://www.geeksforgeeks.org/remove-characters-from-the-first-string-which-are-present-in-the-second-string/" rel="bookmark" title="Remove characters from the first string which are present in the second string">Remove characters from the first string which are present in the second string</a></li>
<li><a href="http://www.geeksforgeeks.org/a-program-to-check-if-strings-are-rotations-of-each-other-or-not/" rel="bookmark" title="A Program to check if strings are rotations of each other or not">A Program to check if strings are rotations of each other or not</a></li>
<li><a href="http://www.geeksforgeeks.org/reverse-a-string-using-recursion/" rel="bookmark" title="Print reverse of a string using recursion">Print reverse of a string using recursion</a></li>
</ol>
</div>
				</div>		  

<!-- Facebook Comments for WordPress: http://3doordigital.com/wordpress/plugins/facebook-comments/ --><h3>Facebook Comments</h3><p><fb:comments-count class="" fb-xfbml-state="rendered" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/"><span class="fb_comments_count">7</span></fb:comments-count> comments</p><div fb-xfbml-state="rendered" class="fb-comments fb_iframe_widget" data-href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/" data-num-posts="5" data-width="450" data-colorscheme="light"><span style="height: 941px; width: 450px;"><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/comments.htm" class="fb_ltr" title="Facebook Social Plugin" style="border: medium none; overflow: hidden; height: 941px; width: 450px;" name="f31cc038d85cfce" id="f3040d5742c7232" scrolling="no"></iframe></span></div>	
				  <!--
				  <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			xmlns:dc="http://purl.org/dc/elements/1.1/"
			xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
		<rdf:Description rdf:about="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/"
    dc:identifier="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/"
    dc:title="Write a C program to print all permutations of a given string"
    trackback:ping="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/trackback/" />
</rdf:RDF>				  -->           

			</div> <!-- end post main -->
					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>				

					
			
        
			 

			<div class="comments-main">			                     
					  <div class="comments" id="commentsdiv">
	  	<div id="commentsholder">
		                          
			<div class="list" id="comments">
				<h3 id="commentCount">141 comments so far</h3>
  
				<ol class="commentlist" id="commentlist">                            
							<li class="comment even thread-even depth-1 parent" id="comment-19017">
				<div id="div-comment-19017" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">mahesh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-19017">
			June 1, 2013 at 7:09 PM</a>		</div>

		<p>To get better understand of the code and map it to pictorial 
representation. Leaf nodes of the tree should also show ABC(because in 
the first case A is fixed and B is permuted with B itself and the B is 
permuted with C). This will be helpful in understanding the check.</p>
<p>If(i == n)<br>
   printf("");</p>
<div><div id="highlighter_451396" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=19017#respond" onclick='return addComment.moveForm("div-comment-19017", "19017", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="comment-19027">
				<div id="div-comment-19027" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">GeeksforGeeks</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-19027">
			June 1, 2013 at 11:14 PM</a>		</div>

		<p>@mahesh: Thanks for your inputs.  We have updated the diagram for recursion tree.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=19027#respond" onclick='return addComment.moveForm("div-comment-19027", "19027", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment byuser comment-author-abhishek08aug even thread-odd thread-alt depth-1 parent" id="comment-17945">
				<div id="div-comment-17945" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">abhishek08aug</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-17945">
			May 7, 2013 at 2:12 AM</a>		</div>

		<p>Important <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_biggrin.gif" alt=":D" class="wp-smiley"> </p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=17945#respond" onclick='return addComment.moveForm("div-comment-17945", "17945", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-abhishek08aug odd alt depth-2" id="comment-17946">
				<div id="div-comment-17946" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">abhishek08aug</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-17946">
			May 7, 2013 at 2:12 AM</a>		</div>

		<p>Intelligent <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_biggrin.gif" alt=":D" class="wp-smiley"> </p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=17946#respond" onclick='return addComment.moveForm("div-comment-17946", "17946", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-17915">
				<div id="div-comment-17915" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://code.scottshipp.com/" rel="external nofollow" class="url">Scott Shipp</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-17915">
			May 6, 2013 at 10:38 AM</a>		</div>

		<p>Please see my series on this for a solution in Java, plus 
generating sub-permutations (for string "abcd" - all permutations of 
abcd, all permutations of bcd, all permutations of cd, etc), plus 
solving when duplicate characters are part of the string as in the 
examples, "aabc," "dddd," etc.</p>
<p>http://code.scottshipp.com/2013/04/12/permutations-generator-part-1/</p>
<p>http://code.scottshipp.com/2013/04/16/permutation-generator-part-2/</p>
<p>http://code.scottshipp.com/2013/04/21/permutation-generator-part-3/</p>
<p>http://code.scottshipp.com/2013/04/29/permutation-generator-part-4/</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=17915#respond" onclick='return addComment.moveForm("div-comment-17915", "17915", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-18272">
				<div id="div-comment-18272" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Sreenivas Doosa</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-18272">
			May 16, 2013 at 10:01 PM</a>		</div>

		<p>Excellent Post duude <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=18272#respond" onclick='return addComment.moveForm("div-comment-18272", "18272", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-17861">
				<div id="div-comment-17861" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">radhika</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-17861">
			May 4, 2013 at 1:45 PM</a>		</div>

		<p>How to print all possible permutations of strings?<br>
eg. for ABC, we have<br>
AAA<br>
AAB<br>
AAC<br>
ABA<br>
ACA<br>
....<br>
CCC<br>
i am kind of stuck into it <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_sad.gif" alt=":(" class="wp-smiley">  !!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=17861#respond" onclick='return addComment.moveForm("div-comment-17861", "17861", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-17919">
				<div id="div-comment-17919" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Hammond</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-17919">
			May 6, 2013 at 2:02 PM</a>		</div>

		<div><div id="highlighter_918946" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&lt;iostream.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&lt;conio.h&gt;</code></div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include&lt;string.h&gt;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">int</code><code class="cpp plain">);</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp color1 bold">char</code> <code class="cpp plain">s[50], temp[50];</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number10 index9 alt1"><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;</code><code class="cpp string">"\nEnter String: "</code><code class="cpp plain">;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cin&gt;&gt;s;</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;</code><code class="cpp string">"\n==========PERMUTATIONS==========\n"</code><code class="cpp plain">;</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(0);</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getch();</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">(0);</code></div><div class="line number17 index16 alt2"><code class="cpp plain">} </code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n)</code></div><div class="line number20 index19 alt1"><code class="cpp plain">{</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;</code><code class="cpp functions bold">strlen</code><code class="cpp plain">(s); i++)</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(i == </code><code class="cpp functions bold">strchr</code><code class="cpp plain">(s, s[i]) - s)</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">temp[n] = s[i];</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(n == </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(s) - 1)</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;temp&lt;&lt;</code><code class="cpp string">"\n"</code><code class="cpp plain">;</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(n+1);</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">temp[n] = NULL;&nbsp;&nbsp;&nbsp; </code></div><div class="line number31 index30 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=17919#respond" onclick='return addComment.moveForm("div-comment-17919", "17919", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1" id="comment-17111">
				<div id="div-comment-17111" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Tunnu</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-17111">
			April 4, 2013 at 11:24 PM</a>		</div>

		<p>Can any one explain in detail how the complexity of the published program is n*n!??</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=17111#respond" onclick='return addComment.moveForm("div-comment-17111", "17111", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-16920">
				<div id="div-comment-16920" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Deepesh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-16920">
			March 31, 2013 at 11:36 AM</a>		</div>

		<p>A simple iterative function in java</p>
<div><div id="highlighter_571915" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">public</code> <code class="cpp keyword bold">static</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">permute(String s) {</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code><code class="cpp plain">[] ca = s.toCharArray();</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">l = ca.length;</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(l == 1) {</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">System.out.println(s);</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0;</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">start = 0;</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(start &lt; l) {</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j=i+1; j&lt;l-1 &amp;&amp; j+1 != l; j++) {</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(ca, j, j+1);</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">System.out.println(</code><code class="cpp keyword bold">new</code> <code class="cpp plain">String(ca));</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(ca, i, l-1);</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">System.out.println(</code><code class="cpp keyword bold">new</code> <code class="cpp plain">String(ca));</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">start++;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number20 index19 alt1"><code class="cpp plain">}</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="cpp keyword bold">public</code> <code class="cpp keyword bold">static</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">swap(</code><code class="cpp color1 bold">char</code><code class="cpp plain">[] arr, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">b) {</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">t = arr[a];</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">arr[a] = arr[b];</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">arr[b] = t;</code></div><div class="line number26 index25 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=16920#respond" onclick='return addComment.moveForm("div-comment-16920", "16920", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-16921">
				<div id="div-comment-16921" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Deepesh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-16921">
			March 31, 2013 at 11:56 AM</a>		</div>

		<p>realized it will not work for length&gt;3</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=16921#respond" onclick='return addComment.moveForm("div-comment-16921", "16921", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-16032">
				<div id="div-comment-16032" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shiv</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-16032">
			March 7, 2013 at 12:31 PM</a>		</div>

		<p>#include<br>
#include</p>
<p>void swap(char *n,int x,int y){<br>
   char temp;<br>
   temp = *(n+x);<br>
   *(n+x) = *(n+y);<br>
   *(n+y) = temp;<br>
}</p>
<p>int main () {</p>
<p>   char b[] = "abcd";<br>
   int size = strlen(b);<br>
   for(int k=0;k&lt;size;k++){<br>
        char *a = b;<br>
        swap(a,0,k);<br>
        for(int j=0;j1;i--){<br>
                swap(a,i-1,i);<br>
                printf("%s \n",a);<br>
           }<br>
        }<br>
   }</p>
<p>return 0;<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=16032#respond" onclick='return addComment.moveForm("div-comment-16032", "16032", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2 parent" id="comment-16033">
				<div id="div-comment-16033" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shiv</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-16033">
			March 7, 2013 at 12:38 PM</a>		</div>

		<p>int main () {</p>
<p>   char b[] = "abcd";<br>
   int size = strlen(b);<br>
   for(int k=0;k&lt;size;k++){<br>
        char *a = b;<br>
        swap(a,0,k);<br>
        for(int j=0;j1;i--){<br>
                swap(a,i-1,i);<br>
                printf("%s \n",a);<br>
           }<br>
        }<br>
   }</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=16033#respond" onclick='return addComment.moveForm("div-comment-16033", "16033", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3 parent" id="comment-16034">
				<div id="div-comment-16034" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shiv</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-16034">
			March 7, 2013 at 12:41 PM</a>		</div>

		<p>i have 2 time commented but another for-loop for increment i is not showing in the program <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_sad.gif" alt=":(" class="wp-smiley"> </p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=16034#respond" onclick='return addComment.moveForm("div-comment-16034", "16034", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-4" id="comment-16037">
				<div id="div-comment-16037" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">GeeksforGeeks</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-16037">
			March 7, 2013 at 2:18 PM</a>		</div>

		<p>@Shiv: Apologies for the inconvenience.  Please try posing your 
comment between sourcecode tags.  Without sourcecode tags, the comment 
is processed as normal html content and comparison operators may be 
considered as beginning of a html tag.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=16037#respond" onclick='return addComment.moveForm("div-comment-16037", "16037", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment byuser comment-author-sid_das odd alt thread-odd thread-alt depth-1" id="comment-15841">
				<div id="div-comment-15841" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">sid_das</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15841">
			March 3, 2013 at 3:14 AM</a>		</div>

		<p>Permutation Without Repetition</p>
<div><div id="highlighter_855953" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor"># include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;string.h&gt;</code></div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;assert.h&gt;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp comments">/* Function to swap values at two pointers */</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">swap (</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*x, </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*y)</code></div><div class="line number7 index6 alt2"><code class="cpp plain">{</code></div><div class="line number8 index7 alt1"><code class="cpp color1 bold">char</code> <code class="cpp plain">temp;</code></div><div class="line number9 index8 alt2"><code class="cpp plain">temp = *x;</code></div><div class="line number10 index9 alt1"><code class="cpp plain">*x = *y;</code></div><div class="line number11 index10 alt2"><code class="cpp plain">*y = temp;</code></div><div class="line number12 index11 alt1"><code class="cpp plain">}</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="cpp comments">/* Function to print permutations of string</code></div><div class="line number15 index14 alt2"><code class="cpp comments">This function takes three parameters:</code></div><div class="line number16 index15 alt1"><code class="cpp comments">1. String</code></div><div class="line number17 index16 alt2"><code class="cpp comments">2. Starting index of the string</code></div><div class="line number18 index17 alt1"><code class="cpp comments">3. Ending index of the string. */</code></div><div class="line number19 index18 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">n) </code></div><div class="line number20 index19 alt1"><code class="cpp plain">{</code></div><div class="line number21 index20 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">j; </code></div><div class="line number22 index21 alt1"><code class="cpp keyword bold">if</code> <code class="cpp plain">(i == n)</code></div><div class="line number23 index22 alt2"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">, a);</code></div><div class="line number24 index23 alt1"><code class="cpp keyword bold">else</code></div><div class="line number25 index24 alt2"><code class="cpp plain">{</code></div><div class="line number26 index25 alt1"><code class="cpp keyword bold">for</code> <code class="cpp plain">(j = i; j &lt;= n; j++)</code></div><div class="line number27 index26 alt2"><code class="cpp plain">{</code></div><div class="line number28 index27 alt1"><code class="cpp plain">swap((a+i), (a+j));</code></div><div class="line number29 index28 alt2"><code class="cpp plain">permute(a, i+1, n);</code></div><div class="line number30 index29 alt1"><code class="cpp plain">swap((a+i), (a+j)); </code><code class="cpp comments">//backtrack</code></div><div class="line number31 index30 alt2"><code class="cpp plain">}</code></div><div class="line number32 index31 alt1"><code class="cpp plain">}</code></div><div class="line number33 index32 alt2"><code class="cpp plain">} </code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="cpp comments">/* Driver program to test above functions */</code></div><div class="line number36 index35 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main( )</code></div><div class="line number37 index36 alt2"><code class="cpp plain">{</code></div><div class="line number38 index37 alt1"><code class="cpp color1 bold">char</code> <code class="cpp plain">a[] = </code><code class="cpp string">"AAABBBCCC"</code><code class="cpp plain">;</code></div><div class="line number39 index38 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number40 index39 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">size,cnt=0;</code></div><div class="line number41 index40 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">s = </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(a)-1;</code></div><div class="line number42 index41 alt1"><code class="cpp plain">size=s;</code></div><div class="line number43 index42 alt2"><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;=s;i++)</code></div><div class="line number44 index43 alt1"><code class="cpp plain">{</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=i+1;j&lt;=s;j++){</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(a[i]==a[j]) </code><code class="cpp comments">// AB_B</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[j]=</code><code class="cpp string">'-'</code><code class="cpp plain">;</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//remove a[j] and slide other element there</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number52 index51 alt1"><code class="cpp plain">}</code></div><div class="line number53 index52 alt2"><code class="cpp plain">j=s;</code></div><div class="line number54 index53 alt1">&nbsp;</div><div class="line number55 index54 alt2"><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0 ;i&lt;s;i++)</code></div><div class="line number56 index55 alt1"><code class="cpp plain">{</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(a[i]==</code><code class="cpp string">'-'</code><code class="cpp plain">)</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(a[j]==</code><code class="cpp string">'-'</code><code class="cpp plain">){</code></div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[j]=</code><code class="cpp string">' '</code><code class="cpp plain">;</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">j--; size--;</code></div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number63 index62 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(i&lt;j){</code></div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[i]=a[j];</code></div><div class="line number65 index64 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[j]=</code><code class="cpp string">'-'</code><code class="cpp plain">;</code></div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number68 index67 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number69 index68 alt2"><code class="cpp plain">}</code></div><div class="line number70 index69 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\nA is :"</code><code class="cpp plain">);</code></div><div class="line number71 index70 alt2"><code class="cpp functions bold">puts</code><code class="cpp plain">(a);</code></div><div class="line number72 index71 alt1"><code class="cpp plain">permute(a, 0, size);</code></div><div class="line number73 index72 alt2"><code class="cpp comments">// getchar();</code></div><div class="line number74 index73 alt1"><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number75 index74 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15841#respond" onclick='return addComment.moveForm("div-comment-15841", "15841", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-volodk even thread-even depth-1" id="comment-15736">
				<div id="div-comment-15736" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">volodk</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15736">
			February 27, 2013 at 9:07 PM</a>		</div>

		<p>Piece of code that collects all permutations into collection. Beware of long strings. It goes out of memory.</p>
<div><div id="highlighter_784036" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">void</code> <code class="java plain">permutate(String st, Queue&lt;String&gt; q) {</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(st.length() &gt; </code><code class="java value">1</code><code class="java plain">) {</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">char</code> <code class="java plain">el = st.charAt(</code><code class="java value">0</code><code class="java plain">);</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">st = st.substring(</code><code class="java value">1</code><code class="java plain">);</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">permutate(st, q);</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">while</code> <code class="java plain">(!q.isEmpty() &amp;&amp; q.peek().length() == st.length()) {</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">String _st = q.poll();</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(</code><code class="java keyword">int</code> <code class="java plain">i = </code><code class="java value">0</code><code class="java plain">; i &lt;= _st.length(); i++) {</code></div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">StringBuilder sb = </code><code class="java keyword">new</code> <code class="java plain">StringBuilder(_st);</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">sb.insert(i, el);</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">q.offer(sb.toString());</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">} </code><code class="java keyword">else</code> <code class="java plain">{</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">q.add(st);</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15736#respond" onclick='return addComment.moveForm("div-comment-15736", "15736", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-15448">
				<div id="div-comment-15448" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://www.groupme.in/" rel="external nofollow" class="url">Nikin</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15448">
			February 20, 2013 at 4:55 PM</a>		</div>

		<div><div id="highlighter_825180" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// printChars.cpp : Defines the entry point for the console application.</code></div><div class="line number2 index1 alt1"><code class="cpp comments">//</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp preprocessor">#include "stdafx.h"</code></div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></div><div class="line number6 index5 alt1"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">printChars(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*str, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">len, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*data, </code><code class="cpp color1 bold">bool</code> <code class="cpp plain">zeroFlag)</code></div><div class="line number9 index8 alt2"><code class="cpp plain">{</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(*(str+i) == </code><code class="cpp string">'*'</code> <code class="cpp plain">&amp;&amp; zeroFlag)</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(data+i) = </code><code class="cpp string">'0'</code><code class="cpp plain">;</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">i++;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(*(str+i) == </code><code class="cpp string">'*'</code> <code class="cpp plain">&amp;&amp; !zeroFlag)</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(data+i) = </code><code class="cpp string">'1'</code><code class="cpp plain">;</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">i++;</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(*(str+i) != </code><code class="cpp string">'*'</code> <code class="cpp plain">&amp;&amp; *(str+i) != </code><code class="cpp string">'\0'</code><code class="cpp plain">)</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(data+i) = *(str+i);</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">i++;</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(*(str+i) == </code><code class="cpp string">'*'</code> <code class="cpp plain">&amp;&amp; *(str+i) != </code><code class="cpp string">'\0'</code><code class="cpp plain">)</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = i; j&lt;len; j++)</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printChars(str, len, j, data, zeroFlag);</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printChars(str, len, j, data, !zeroFlag);</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(i &gt;= len)</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(data+i) = </code><code class="cpp string">'\0'</code><code class="cpp plain">;</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;data&lt;&lt;endl;</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number46 index45 alt1"><code class="cpp plain">}</code></div><div class="line number47 index46 alt2">&nbsp;</div><div class="line number48 index47 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">_tmain(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">argc, _TCHAR* argv[])</code></div><div class="line number49 index48 alt2"><code class="cpp plain">{</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*str = </code><code class="cpp string">"a*b*c*d*"</code><code class="cpp plain">;</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*data&nbsp; = (</code><code class="cpp color1 bold">char</code><code class="cpp plain">*)</code><code class="cpp functions bold">malloc</code><code class="cpp plain">(</code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(</code><code class="cpp color1 bold">char</code><code class="cpp plain">) * </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(str));</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printChars(str, </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(str), 0, data, </code><code class="cpp keyword bold">true</code><code class="cpp plain">);</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">getchar</code><code class="cpp plain">();</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number55 index54 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15448#respond" onclick='return addComment.moveForm("div-comment-15448", "15448", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1 parent" id="comment-15371">
				<div id="div-comment-15371" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Hammond</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15371">
			February 18, 2013 at 7:46 PM</a>		</div>

		<p>#include<br>
#include<br>
#include</p>
<p>void permute(int);<br>
int count(char[], char);</p>
<p>char s[50], temp[50];<br>
int perms = 0;</p>
<p>int main()<br>
{<br>
    cout&lt;&gt;s;<br>
    cout&lt;&lt;"\n==========PERMUTATIONS==========\n";<br>
    permute(0);<br>
    cout&lt;&lt;"\nFREQUENCY = "&lt;&lt;perms;<br>
    getch();<br>
    return(0);<br>
} </p>
<p>void permute(int n)<br>
{<br>
    for(int i=0; i count(temp, s[i])))<br>
        {<br>
            temp[n] = s[i];<br>
            if(n == strlen(s) - 1)<br>
            {<br>
                cout&lt;&lt;temp&lt;&lt;"\n";<br>
                perms++;<br>
            }<br>
            else<br>
                permute(n+1);<br>
        }<br>
    }<br>
    temp[n] = NULL;<br>
}        </p>
<p>int count(char x[], char c)<br>
{<br>
    int cnt = 0;<br>
    char *ptr = strchr(x, c);<br>
    while(ptr != NULL)<br>
    {<br>
        cnt++;<br>
        ptr = strchr(ptr+1, c);<br>
    }<br>
    return(cnt);<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15371#respond" onclick='return addComment.moveForm("div-comment-15371", "15371", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2 parent" id="comment-15372">
				<div id="div-comment-15372" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Hammond</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15372">
			February 18, 2013 at 7:53 PM</a>		</div>

		<p>permute(0);<br>
    cout&lt;&lt;"\nFREQUENCY = "&lt;&lt;perms;</p>
<p>void permute(int n)<br>
{<br>
    for(int i=0; i count(temp, s[i])))<br>
        {<br>
            temp[n] = s[i];<br>
            if(n == strlen(s) - 1)<br>
            {<br>
                cout&lt;&lt;temp&lt;&lt;"\n";<br>
                perms++;<br>
            }<br>
            else<br>
                permute(n+1);<br>
        }<br>
    }<br>
    temp[n] = NULL;<br>
}        </p>
<p>int count(char x[], char c)<br>
{<br>
    int cnt = 0;<br>
    char *ptr = strchr(x, c);<br>
    while(ptr != NULL)<br>
    {<br>
        cnt++;<br>
        ptr = strchr(ptr+1, c);<br>
    }<br>
    return(cnt);<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15372#respond" onclick='return addComment.moveForm("div-comment-15372", "15372", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3 parent" id="comment-15405">
				<div id="div-comment-15405" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Hammond</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15405">
			February 19, 2013 at 9:53 AM</a>		</div>

		<p>/* Following is the for loop that didn't get printed */</p>
<p>for(int i=0; i count(temp, s[i])))<br>
    {</p>
<p>/* works for all strings */</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15405#respond" onclick='return addComment.moveForm("div-comment-15405", "15405", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-4 parent" id="comment-15406">
				<div id="div-comment-15406" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Hammond</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15406">
			February 19, 2013 at 9:56 AM</a>		</div>

		<div><div id="highlighter_955161" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&lt;iostream.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&lt;conio.h&gt;</code></div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#include&lt;string.h&gt;</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">int</code><code class="cpp plain">);</code></div><div class="line number6 index5 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">count(</code><code class="cpp color1 bold">char</code><code class="cpp plain">[], </code><code class="cpp color1 bold">char</code><code class="cpp plain">);</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp color1 bold">char</code> <code class="cpp plain">s[50], temp[50];</code></div><div class="line number9 index8 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">perms = 0;</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number12 index11 alt1"><code class="cpp plain">{</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;</code><code class="cpp string">"\nEnter String: "</code><code class="cpp plain">;</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cin&gt;&gt;s;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;</code><code class="cpp string">"\n==========PERMUTATIONS==========\n"</code><code class="cpp plain">;</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(0);</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;</code><code class="cpp string">"\nFREQUENCY = "</code><code class="cpp plain">&lt;&lt;perms;</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getch();</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">(0);</code></div><div class="line number20 index19 alt1"><code class="cpp plain">} </code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n)</code></div><div class="line number23 index22 alt2"><code class="cpp plain">{</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=0; i&lt;</code><code class="cpp functions bold">strlen</code><code class="cpp plain">(s); i++)</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(</code><code class="cpp functions bold">strchr</code><code class="cpp plain">(temp, s[i]) == NULL || (i == </code><code class="cpp functions bold">strchr</code><code class="cpp plain">(s, s[i]) - s &amp;&amp; count(s, s[i]) &gt; count(temp, s[i])))</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">temp[n] = s[i];</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(n == </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(s) - 1)</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;temp&lt;&lt;</code><code class="cpp string">"\n"</code><code class="cpp plain">;</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">perms++;</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(n+1);</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">temp[n] = NULL;&nbsp;&nbsp;&nbsp; </code></div><div class="line number39 index38 alt2"><code class="cpp plain">}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number40 index39 alt1">&nbsp;</div><div class="line number41 index40 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">count(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">x[], </code><code class="cpp color1 bold">char</code> <code class="cpp plain">c)</code></div><div class="line number42 index41 alt1"><code class="cpp plain">{</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">cnt = 0;</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*ptr = </code><code class="cpp functions bold">strchr</code><code class="cpp plain">(x, c);</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(ptr != NULL)</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cnt++;</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ptr = </code><code class="cpp functions bold">strchr</code><code class="cpp plain">(ptr+1, c);</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}&nbsp;&nbsp;&nbsp; </code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">(cnt);&nbsp;&nbsp; </code></div><div class="line number51 index50 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15406#respond" onclick='return addComment.moveForm("div-comment-15406", "15406", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-5" id="comment-15859">
				<div id="div-comment-15859" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Hammond</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15859">
			March 3, 2013 at 12:41 PM</a>		</div>

		<div><div id="highlighter_3730" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Hey fellas, please try my code. It works for all strings. Let me know if otherwise. */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
				</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-15370">
				<div id="div-comment-15370" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">googlybhai</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15370">
			February 18, 2013 at 6:08 PM</a>		</div>

		<p>optimized code given by Venki</p>
<div><div id="highlighter_391342" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor"># include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp comments">/* Function to swap values at two pointers */</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">swap (</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*x, </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*y)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">temp;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">temp = *x;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*x = *y;</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*y = temp;</code></div><div class="line number10 index9 alt1"><code class="cpp plain">}</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code>&nbsp;</div><div class="line number12 index11 alt1"><code class="cpp comments">/* Function to print permutations of string</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">This function takes three parameters:</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">1. String</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">2. Starting index of the string</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">3. Ending index of the string. */</code></div><div class="line number17 index16 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">n) </code></div><div class="line number18 index17 alt1"><code class="cpp plain">{</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j; </code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(i == n)</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">, a);</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(j = i; j &lt;= n; j++)</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(i != j)&nbsp;&nbsp;&nbsp; </code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j));</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, i+1, n);</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(i != j)&nbsp;&nbsp;&nbsp; </code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j)); </code><code class="cpp comments">//backtrack</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number33 index32 alt2"><code class="cpp plain">} </code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number35 index34 alt2"><code class="cpp comments">/* Driver program to test above functions */</code></div><div class="line number36 index35 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number37 index36 alt2"><code class="cpp plain">{</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">a[] = </code><code class="cpp string">"ABC"</code><code class="cpp plain">;&nbsp; </code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, 0, 2);</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">getchar</code><code class="cpp plain">();</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number42 index41 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15370#respond" onclick='return addComment.moveForm("div-comment-15370", "15370", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1" id="comment-15030">
				<div id="div-comment-15030" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">bharatJ</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-15030">
			February 4, 2013 at 11:13 PM</a>		</div>

		<p>You can use Lexicographic ordering to find all permutations :</p>
<p>import java.util.ArrayList;<br>
import java.util.Iterator;</p>
<p>public class LexicographicPermutations {</p>
<p>	private static String token = "abc";<br>
	private static int indexI = 0;<br>
	private static int indexJ = 0;<br>
	public static String Reverse(String substring,int lowIndex,int highIndex){<br>
		String subs = "";<br>
		for(int i = highIndex -1 ;i&gt;lowIndex;i--){<br>
			subs = subs + substring.charAt(i);<br>
		}<br>
		return subs;<br>
	}</p>
<p>	public static String swap(int L, int H, String subs){<br>
		char var = subs.charAt(L);<br>
		subs = subs.substring(0, L) + subs.charAt(H) + subs.substring(L+1);<br>
		subs = subs.substring(0, H) + var + subs.substring(H+1);<br>
		return subs;<br>
	}</p>
<p>	public static void main(String args[]){<br>
		String perms = "";<br>
		String swapString = "";<br>
		String revString = "";<br>
		ArrayList permsArray = new ArrayList();<br>
		permsArray.add(token);<br>
		while(true){<br>
			for(int i=0;i&lt;token.length()-1;i++){<br>
				if(token.charAt(i) &lt; token.charAt(i+1)){<br>
					indexI = i;<br>
				}<br>
			}<br>
			for(int i=0;i&lt;token.length();i++){<br>
				if(token.charAt(indexI) &lt; token.charAt(i)){<br>
					indexJ = i;<br>
				}<br>
			}<br>
			if(indexI == indexJ){<br>
				break;<br>
			}<br>
			swapString = swap(indexI,indexJ,token);<br>
			revString = Reverse(swapString,indexI,token.length());<br>
			perms = swapString.substring(0,indexI + 1) + revString;<br>
			permsArray.add(perms);<br>
			indexI = 0;<br>
			indexJ = 0;<br>
			token = perms;<br>
		}<br>
		Iterator itr = permsArray.iterator();<br>
		while(itr.hasNext()){<br>
			System.out.print(itr.next() + " , ");<br>
		}<br>
	}<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=15030#respond" onclick='return addComment.moveForm("div-comment-15030", "15030", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-14834">
				<div id="div-comment-14834" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Dharmendra Singh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-14834">
			January 28, 2013 at 2:01 AM</a>		</div>

		<p>/**<br>
 *<br>
 * @author Dharmendra Singh<br>
 */<br>
public class PermutationOfStringCharsPassed {</p>
<p>    private void getPermutationOfStringCharsPassed(char[] keys){<br>
        int size = (int) Math.pow(2, keys.length);</p>
<p>        for(int i = 0 ; i &lt; size ; i++){<br>
            for(int k = 0; k &gt; k) &amp; 1) == 1){<br>
                    System.out.print(keys[k]);<br>
                }<br>
            }<br>
            System.out.println();<br>
        }<br>
    }</p>
<p>    public static void main(String[] args) {<br>
        char[] keys = {'a','b','c','d'};<br>
        PermutationOfStringCharsPassed p = new PermutationOfStringCharsPassed();<br>
        p.getPermutationOfStringCharsPassed(keys);<br>
    }<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=14834#respond" onclick='return addComment.moveForm("div-comment-14834", "14834", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-14835">
				<div id="div-comment-14835" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Dharmendra Singh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-14835">
			January 28, 2013 at 2:03 AM</a>		</div>

		<p>//Dont know how my program got changed after posting<br>
for(int i = 0 ; i &lt; size ; i++){<br>
            for(int k = 0; k &gt; k) &amp; 1) == 1){<br>
                    System.out.print(keys[k]);<br>
                }<br>
            }<br>
            System.out.println();<br>
        }</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=14835#respond" onclick='return addComment.moveForm("div-comment-14835", "14835", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-14833">
				<div id="div-comment-14833" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Dharmendra Singh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-14833">
			January 28, 2013 at 2:00 AM</a>		</div>

		<p>/* Paste your code here (You may delete these lines if not writing code) */<br>
/**<br>
 *<br>
 * @author Dharmendra Singh<br>
 */<br>
public class PermutationOfStringCharsPassed {</p>
<p>    private void getPermutationOfStringCharsPassed(char[] keys){<br>
        int size = (int) Math.pow(2, keys.length);</p>
<p>        for(int i = 0 ; i &lt; size ; i++){<br>
            for(int k = 0; k &gt; k) &amp; 1) == 1){<br>
                    System.out.print(keys[k]);<br>
                }<br>
            }<br>
            System.out.println();<br>
        }<br>
    }</p>
<p>    public static void main(String[] args) {<br>
        char[] keys = {'a','b','c','d'};<br>
        PermutationOfStringCharsPassed p = new PermutationOfStringCharsPassed();<br>
        p.getPermutationOfStringCharsPassed(keys);<br>
    }<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=14833#respond" onclick='return addComment.moveForm("div-comment-14833", "14833", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-13947">
				<div id="div-comment-13947" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">rahul732</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-13947">
			December 24, 2012 at 3:16 PM</a>		</div>

		<p>A program will such a bad complexity is never useful to learn. Just see the complexity. n*n! .</p>
<p>Isn'it ? There should be better thing available or if not then its not useful to use such an algorithm.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=13947#respond" onclick='return addComment.moveForm("div-comment-13947", "13947", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2 parent" id="comment-14368">
				<div id="div-comment-14368" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">geek</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-14368">
			January 11, 2013 at 12:45 AM</a>		</div>

		<p>jab permutations hi n! hain to, think before you comment.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=14368#respond" onclick='return addComment.moveForm("div-comment-14368", "14368", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3 parent" id="comment-14916">
				<div id="div-comment-14916" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Vikash</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-14916">
			January 30, 2013 at 11:55 PM</a>		</div>

		<p>exactly.....</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=14916#respond" onclick='return addComment.moveForm("div-comment-14916", "14916", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-4" id="comment-14917">
				<div id="div-comment-14917" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Vikash</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-14917">
			January 30, 2013 at 11:56 PM</a>		</div>

		<p>tell me one thing....<br>
will your code work for input 'AABBCC'??</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=14917#respond" onclick='return addComment.moveForm("div-comment-14917", "14917", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-11910">
				<div id="div-comment-11910" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Chirag</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11910">
			October 20, 2012 at 2:48 PM</a>		</div>

		<p>#include<br>
#include<br>
#include<br>
#include<br>
main()<br>
{<br>
char ch[10],temp;<br>
int i,k=1,b,f;<br>
clrscr();<br>
printf("enter the string");<br>
gets(ch);<br>
for(i=1;i&lt;=strlen(ch);i++)<br>
{<br>
k=k*i;<br>
}<br>
 for(i=0;i&lt;k;i++)<br>
 {<br>
 b=((i%(strlen(ch))-1));<br>
 printf("%d",b);<br>
 temp = ch[b+1];<br>
 ch[b+1]=ch[b];<br>
 ch[b]=temp;<br>
 printf("%s\n",ch);<br>
 }<br>
 getch();<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11910#respond" onclick='return addComment.moveForm("div-comment-11910", "11910", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-11911">
				<div id="div-comment-11911" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Chirag</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11911">
			October 20, 2012 at 2:49 PM</a>		</div>

		<p>without any function calling...very simple..</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11911#respond" onclick='return addComment.moveForm("div-comment-11911", "11911", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even depth-2" id="comment-11913">
				<div id="div-comment-11913" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Chirag</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11913">
			October 20, 2012 at 2:57 PM</a>		</div>

		<p>little bit changes<br>
---------------------------<br>
#include<br>
#include<br>
#include<br>
#include<br>
main()<br>
{<br>
char ch[10],temp;<br>
int i,k=1,b,f;<br>
clrscr();<br>
printf("enter the string");<br>
gets(ch);<br>
for(i=1;i&lt;=strlen(ch);i++)<br>
{<br>
k=k*i;<br>
}<br>
f=strlen(ch);<br>
for(i=0;i&lt;k;i++)<br>
{<br>
b=i%(f-1);<br>
temp = ch[b+1];<br>
ch[b+1]=ch[b];<br>
ch[b]=temp;<br>
printf("%s\n",ch);<br>
}<br>
getch();<br>
}</p>
<p>now it will work</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11913#respond" onclick='return addComment.moveForm("div-comment-11913", "11913", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-11909">
				<div id="div-comment-11909" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Chirag</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11909">
			October 20, 2012 at 2:45 PM</a>		</div>

		<p>it will work<br>
-------------------<br>
#include<br>
#include<br>
#include<br>
#include<br>
main()<br>
{<br>
char ch[10],temp;<br>
int i,k=1,b,f;<br>
clrscr();<br>
printf("enter the string");<br>
gets(ch);<br>
for(i=1;i&lt;=strlen(ch);i++)<br>
{<br>
k=k*i;<br>
}<br>
 for(i=0;i&lt;k;i++)<br>
 {<br>
 b=((i%(strlen(ch))-1));<br>
 printf("%d",b);<br>
 temp = ch[b+1];<br>
 ch[b+1]=ch[b];<br>
 ch[b]=temp;<br>
 printf("%s\n",ch);<br>
 }<br>
 getch();<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11909#respond" onclick='return addComment.moveForm("div-comment-11909", "11909", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1 parent" id="comment-11521">
				<div id="div-comment-11521" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">sreeram</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11521">
			October 8, 2012 at 10:33 AM</a>		</div>

		<p>simple check to avoid duplicates </p>
<p>/* Paste your code here (You may delete these lines if not writing code) */<br>
[# include </p>
<p>/* Function to swap values at two pointers */<br>
void swap (char *x, char *y)<br>
{<br>
    char temp;<br>
    temp = *x;<br>
    *x = *y;<br>
    *y = temp;<br>
}<br>
int check(char *arr,int i,int j)<br>
{<br>
if(i==j)<br>
return 1;<br>
for(;i&lt; j;i++)<br>
if(arr[i]==arr[j])<br>
return 0;<br>
return 1;<br>
}<br>
/* Function to print permutations of string<br>
   This function takes three parameters:<br>
   1. String<br>
   2. Starting index of the string<br>
   3. Ending index of the string. */<br>
void permute(char *a, int i, int n)<br>
{<br>
   int j;<br>
   if (i == n)<br>
     printf("%s\n", a);<br>
   else<br>
   {<br>
        for (j = i; j &lt;= n; j++)<br>
       {<br>
          if(check(a,i,j)){<br>
          swap((a+i), (a+j));<br>
          permute(a, i+1, n);<br>
          swap((a+i), (a+j));<br>
          } //backtrack}<br>
       }<br>
   }<br>
} </p>
<p>/* Driver program to test above functions */<br>
int main()<br>
{<br>
   char a[] = "APPLE";<br>
   permute(a, 0, 4);<br>
   getchar();<br>
   return 0;<br>
}]</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11521#respond" onclick='return addComment.moveForm("div-comment-11521", "11521", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-11885">
				<div id="div-comment-11885" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">ChangingNameEveryTime</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11885">
			October 19, 2012 at 12:32 PM</a>		</div>

		<p>The code is working awesome.</p>
<p>Very good!</p>
<p>Keep it up!</p>
<div><div id="highlighter_868940" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2">&nbsp;</div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11885#respond" onclick='return addComment.moveForm("div-comment-11885", "11885", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even depth-2" id="comment-11912">
				<div id="div-comment-11912" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Chirag</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11912">
			October 20, 2012 at 2:56 PM</a>		</div>

		<p>little bit changes<br>
---------------------------<br>
#include<br>
#include<br>
#include<br>
#include<br>
main()<br>
{<br>
char ch[10],temp;<br>
int i,k=1,b,f;<br>
clrscr();<br>
printf("enter the string");<br>
gets(ch);<br>
for(i=1;i&lt;=strlen(ch);i++)<br>
{<br>
k=k*i;<br>
}<br>
f=strlen(ch);<br>
 for(i=0;i&lt;k;i++)<br>
 {<br>
 b=i%(f-1);<br>
 temp = ch[b+1];<br>
 ch[b+1]=ch[b];<br>
 ch[b]=temp;<br>
 printf("%s\n",ch);<br>
 }<br>
 getch();<br>
}</p>
<p>now it will work</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11912#respond" onclick='return addComment.moveForm("div-comment-11912", "11912", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-11029">
				<div id="div-comment-11029" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">aaryan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-11029">
			September 20, 2012 at 8:04 PM</a>		</div>

		<div><div id="highlighter_779340" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">A
 better code.....generate all permutation of given string ...takes care 
of duplicacy....nd presents permutations in lexicographic order...</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#include&lt;time.h&gt;</code></div><div class="line number6 index5 alt1"><code class="cpp preprocessor">#include &lt;string.h&gt;</code></div><div class="line number7 index6 alt2"><code class="cpp preprocessor">#include&lt;conio.h&gt;</code></div><div class="line number8 index7 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">swap (</code><code class="cpp color1 bold">char</code><code class="cpp plain">* pArray, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j)</code></div><div class="line number9 index8 alt2"><code class="cpp plain">{</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">temp = pArray[i];</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pArray[i] = pArray[j];</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">pArray[j] = temp;</code></div><div class="line number13 index12 alt2"><code class="cpp plain">}</code></div><div class="line number14 index13 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">perm (</code><code class="cpp color1 bold">char</code><code class="cpp plain">* pArray, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">index)</code></div><div class="line number15 index14 alt2"><code class="cpp plain">{</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j,k;</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(index==size)</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">, pArray);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i = index; i &lt; size; i++)</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 </code><code class="cpp comments">// for duplicacy</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(pArray[i] == pArray[i+1])</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(pArray,i,index);</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=index+1;j&lt;=i;j++)</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(pArray[j]&gt;pArray[i])&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">// for lexicographic</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(pArray,j,i);</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number38 index37 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">perm(pArray,size,index+1);</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=i;j&gt;=index+1;j--)</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(pArray[j]&lt;pArray[i])</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(pArray,j,i);</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(pArray,i,index);</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number49 index48 alt2"><code class="cpp plain">}</code></div><div class="line number50 index49 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">main ()</code></div><div class="line number51 index50 alt2"><code class="cpp plain">{</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">array[100];</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">clock_t</code> <code class="cpp plain">start,end;</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">clrscr();</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">gets</code><code class="cpp plain">(array);</code></div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Permutations:\n"</code><code class="cpp plain">);</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">start=</code><code class="cpp functions bold">clock</code><code class="cpp plain">();</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">perm(array,</code><code class="cpp functions bold">strlen</code><code class="cpp plain">(array),0);</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">end=</code><code class="cpp functions bold">clock</code><code class="cpp plain">();</code></div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%f"</code><code class="cpp plain">,(end-start)/CLK_TCK);</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getch();</code></div><div class="line number62 index61 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=11029#respond" onclick='return addComment.moveForm("div-comment-11029", "11029", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-13193">
				<div id="div-comment-13193" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Satyarth</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-13193">
			December 5, 2012 at 9:57 PM</a>		</div>

		<p>U r assuming that char array is alphabetically sorted. BTW Nice Code!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=13193#respond" onclick='return addComment.moveForm("div-comment-13193", "13193", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-10403">
				<div id="div-comment-10403" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">sumit saha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-10403">
			August 25, 2012 at 8:45 PM</a>		</div>

		<p>this code can permutate strings of any length and is written only for strings without any repeatation.</p>
<p>how do i improve so as to incorporate the strings with repeatation......</p>
<p>/* Paste your code here (You may delete these lines if not writing code) */</p>
<p>//***************anagrams**************//</p>
<p>//************************************** this code works only when 
there are no repeatations in the original string*************//<br>
#include&lt;iostream&gt;<br>
using namespace std;</p>
<p>int counter=0;</p>
<p>void print(char empty[],int size)<br>
{</p>
<p>    for(int i=0;i&lt;size;i++)<br>
    {<br>
        cout&lt;&lt;empty[i];<br>
    }<br>
    cout&lt;&lt;endl;<br>
}</p>
<p>void makecombination(char original[],char empty[],char comb[],int k,int&amp; nc,int size)<br>
{<br>
    nc=0;</p>
<p>    int flag=0;<br>
    for(int i=0;i&lt;size;i++)<br>
    {<br>
        flag=0;                                                                   // {<br>
        for(int j=0;j&lt;k;j++)<br>
        {<br>
            if(empty[j]==original[i])                                   
                             // remove this code fragment<br>
            {                                                           
                             // to print permutations with repeatation<br>
                flag=1;<br>
                break;<br>
            }<br>
        }<br>
        if(flag==0)                                                                // }<br>
        {<br>
            comb[nc++]=original[i];<br>
        }<br>
    }<br>
   // cout&lt;&lt;"checks  ";<br>
    //    print(comb,nc);<br>
}</p>
<p>void recurse(char original[],char empty[],int k,int size)<br>
{<br>
    char *comb=new char[size];</p>
<p>    int nc;</p>
<p>    if(k==size)<br>
    {<br>
        counter++;<br>
        print(empty,size);</p>
<p>    }<br>
    else<br>
    {<br>
        makecombination(original,empty,comb,k,nc,size);<br>
        k=k+1;<br>
        for(int i=0;i&lt;nc;i++)<br>
        {<br>
            empty[k-1]=comb[i];<br>
            //cout&lt;&lt;"checks  ";<br>
            //print(empty,size);<br>
            recurse(original,empty,k,size);<br>
        }<br>
    }</p>
<p>}</p>
<p>int main()<br>
{<br>
    const int size=4;<br>
    int k=0;<br>
    char original[]="ABCD";</p>
<p>   char empty[size];<br>
    for(int f=0;f&lt;size;f++)<br>
    empty[f]='*';</p>
<p>    recurse(original,empty,k,size);</p>
<p>    cout&lt;&lt;endl&lt;&lt;counter&lt;&lt;endl;<br>
    return 0;<br>
}</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=10403#respond" onclick='return addComment.moveForm("div-comment-10403", "10403", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-9647">
				<div id="div-comment-9647" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">gaya</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-9647">
			July 17, 2012 at 6:49 PM</a>		</div>

		<p>code doesn't work</p>
<div><div id="highlighter_629118" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=9647#respond" onclick='return addComment.moveForm("div-comment-9647", "9647", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-9425">
				<div id="div-comment-9425" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">andrew</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-9425">
			July 4, 2012 at 4:14 PM</a>		</div>

		<p>missing case: string with repeat characters.<br>
such as: abcdmabc </p>
<div><div id="highlighter_496155" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">swap(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">str[], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j){</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">c;</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp plain">c = str[i];</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp plain">str[i] = str[j];</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp plain">str[j] = c;</code></div><div class="line number6 index5 alt1"><code class="cpp plain">}</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">printStr(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">str[], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">k, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">m){</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(k == m){</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">cout&lt;&lt;str&lt;&lt;endl;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;</code><code class="cpp plain">}</code><code class="cpp keyword bold">else</code><code class="cpp plain">{</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=k; i&lt;=m; i++){</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j=k;j&lt;i;j++) </code><code class="cpp comments">// remove the repeat characters</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(str[j]==str[i]) </code><code class="cpp keyword bold">goto</code> <code class="cpp plain">nextloop;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(str, i, k);</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printStr(str, k+1, m);</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(str, k, i);</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">nextloop:;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp plain">}</code></div><div class="line number21 index20 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=9425#respond" onclick='return addComment.moveForm("div-comment-9425", "9425", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-9218">
				<div id="div-comment-9218" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">arya</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-9218">
			June 21, 2012 at 10:35 AM</a>		</div>

		<p>/* Paste your code here (You may delete these lines if not writing code) */<br>
[/code to print all puarmutation of integer array?]</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=9218#respond" onclick='return addComment.moveForm("div-comment-9218", "9218", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-9197">
				<div id="div-comment-9197" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">user123</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-9197">
			June 20, 2012 at 9:25 AM</a>		</div>

		<p>how is this O(n*n!)?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=9197#respond" onclick='return addComment.moveForm("div-comment-9197", "9197", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-8604">
				<div id="div-comment-8604" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Guddu sharma</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-8604">
			May 24, 2012 at 2:42 PM</a>		</div>

		<p>Please help me in finding the time complexity of this approach.</p>
<div><div id="highlighter_932126" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">Anagram(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">depth,</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*Orig,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*track,</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*Permut)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(depth==SIZE)</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;SIZE;j++)</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%c"</code><code class="cpp plain">,Permut[j]);</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;SIZE;i++)</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">count++;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(!track[i])</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">track[i]=1;&nbsp;&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">//to indicate that ith character has been taken</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Permut[depth]=Orig[i];</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Anagram(depth+1,Orig,track,Permut);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">track[i]=0;</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number24 index23 alt1"><code class="cpp plain">}</code></div><div class="line number25 index24 alt2">&nbsp;</div><div class="line number26 index25 alt1"><code class="cpp plain">Please let me know </code><code class="cpp keyword bold">if</code> <code class="cpp keyword bold">this</code> <code class="cpp plain">is a better approach.</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=8604#respond" onclick='return addComment.moveForm("div-comment-8604", "8604", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-8316">
				<div id="div-comment-8316" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">charanjeet</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-8316">
			May 5, 2012 at 11:12 PM</a>		</div>

		<p>What is the need to call swap once again after the permute 
function. I tried removing it and it still generates all the 
permutations except that order differs!<br>
With 2nd Swap -&gt;<br>
ABC<br>
ACB<br>
BAC<br>
BCA<br>
CBA<br>
CAB<br>
Without 2nd Swap -&gt;<br>
ABC<br>
ACB<br>
CAB<br>
CBA<br>
ABC<br>
ACB</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=8316#respond" onclick='return addComment.moveForm("div-comment-8316", "8316", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-8319">
				<div id="div-comment-8319" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Venki</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-8319">
			May 6, 2012 at 1:28 PM</a>		</div>

		<p>@charanjeet, check your output (ABC repeated twice). It is 
backtracking step which restores the state once returned from previous 
explored node.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=8319#respond" onclick='return addComment.moveForm("div-comment-8319", "8319", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt depth-2" id="comment-9619">
				<div id="div-comment-9619" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Vinayaka Bhat</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-9619">
			July 16, 2012 at 11:10 AM</a>		</div>

		<p>Without the second swap, there are no strings that are generated with B</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=9619#respond" onclick='return addComment.moveForm("div-comment-9619", "9619", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-8315">
				<div id="div-comment-8315" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">charanjeet</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-8315">
			May 5, 2012 at 11:09 PM</a>		</div>

		<p>Whats the need for calling swap after calling permute function?<br>
I tried removing that, and its still generating all the permutations, only the order differs!</p>
<p>Please explain.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=8315#respond" onclick='return addComment.moveForm("div-comment-8315", "8315", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-13685">
				<div id="div-comment-13685" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">hARRY</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-13685">
			December 18, 2012 at 12:13 AM</a>		</div>

		<p>Not only order differs check carefully for input:abcd or inputs whose length greater than 3 there will be duplicates!!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=13685#respond" onclick='return addComment.moveForm("div-comment-13685", "13685", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1" id="comment-7767">
				<div id="div-comment-7767" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">kumar</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7767">
			March 9, 2012 at 10:38 PM</a>		</div>

		<p>plz give the program using loop in c and without any pointers or dynamic allocations... plz help</p>
<div><div id="highlighter_77340" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7767#respond" onclick='return addComment.moveForm("div-comment-7767", "7767", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-xushi odd alt thread-odd thread-alt depth-1" id="comment-7766">
				<div id="div-comment-7766" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">xushi</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7766">
			March 9, 2012 at 2:02 PM</a>		</div>

		<div><div id="highlighter_204575" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">Let's say given 9 cities. How should I permute them and split it into 3 vehicles, so that each vehicles take 3 cities?</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7766#respond" onclick='return addComment.moveForm("div-comment-7766", "7766", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-xushi even thread-even depth-1" id="comment-7765">
				<div id="div-comment-7765" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">xushi</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7765">
			March 9, 2012 at 1:24 PM</a>		</div>

		<p>Let's say given 9 cities. How should I permute them and split it into 3 vehicles, so that each vehicles take 3 cities?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7765#respond" onclick='return addComment.moveForm("div-comment-7765", "7765", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-7683">
				<div id="div-comment-7683" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Sourodeep Roy</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7683">
			February 28, 2012 at 9:15 PM</a>		</div>

		<p>This programme works only for three letters, if I am using more than 3 then whats the option???</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7683#respond" onclick='return addComment.moveForm("div-comment-7683", "7683", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-jalajb2k7 even depth-2" id="comment-7692">
				<div id="div-comment-7692" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">jalajb2k7</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7692">
			February 29, 2012 at 10:53 PM</a>		</div>

		<p>then just pass the length-1 instead of 2 in permute</p>
<div><div id="highlighter_499267" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7692#respond" onclick='return addComment.moveForm("div-comment-7692", "7692", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-7496">
				<div id="div-comment-7496" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Avinash</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7496">
			February 13, 2012 at 2:38 AM</a>		</div>

		<div><div id="highlighter_133701" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">permute(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">input[])</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n=size(input[]);</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">out[]=</code><code class="cpp functions bold">malloc</code><code class="cpp plain">(</code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(input[]));</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">used[]=</code><code class="cpp functions bold">malloc</code><code class="cpp plain">(</code><code class="cpp keyword bold">sizeof</code><code class="cpp plain">(input[]));</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=0;i&lt;size(used[]);i++)</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">used[i]=0;</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}&nbsp;&nbsp; </code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dopermute(input,0,n,out,used);</code></div><div class="line number11 index10 alt2"><code class="cpp plain">} </code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">dopermute(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">input[],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">level, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">out[],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">used[])</code></div><div class="line number14 index13 alt1"><code class="cpp plain">{</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">If(level&gt;=size)</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=0;i&lt;size(out);i++)</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%c"</code><code class="cpp plain">,out[i]);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;size;j++)</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">If used[i] </code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">used[j]=1</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">out[level]=arr[j];</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">dopermute(input,level+1,size,out,used);</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">used[j]=0;</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number32 index31 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7496#respond" onclick='return addComment.moveForm("div-comment-7496", "7496", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-7453">
				<div id="div-comment-7453" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">niak</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7453">
			February 11, 2012 at 11:31 AM</a>		</div>

		<p>number is {1,2,3,4,5,6}it will print as by rotating 1 place it will look likjs 6,1,2,3,4,5</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7453#respond" onclick='return addComment.moveForm("div-comment-7453", "7453", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-7400">
				<div id="div-comment-7400" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">guru</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7400">
			February 7, 2012 at 8:59 PM</a>		</div>

		<div><div id="highlighter_439188" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java plain">ArrayList&lt;String&gt; permutationsOf(String s) {</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ArrayList&lt;String&gt; result = </code><code class="java keyword">new</code> <code class="java plain">ArrayList&lt;String&gt;();</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(s.length() == </code><code class="java value">1</code><code class="java plain">) { </code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">result.add(s);</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">result;</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number9 index8 alt2"><code class="java keyword">else</code> <code class="java plain">{</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">char</code> <code class="java plain">first = s.charAt(</code><code class="java value">0</code><code class="java plain">);</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">String rest = s.substring(</code><code class="java value">1</code><code class="java plain">);</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ArrayList&lt;String&gt; simpler = permutationsOf(rest);&nbsp; </code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(String permutation : simpler) { </code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ArrayList additions = insertAtAllPositions(first, permutation);</code></div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">result.addAll(additions);</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number22 index21 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">result;</code></div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number24 index23 alt1"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7400#respond" onclick='return addComment.moveForm("div-comment-7400", "7400", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-ckernel even thread-odd thread-alt depth-1" id="comment-7382">
				<div id="div-comment-7382" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">ckernel</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7382">
			February 5, 2012 at 9:19 AM</a>		</div>

		<p>Hi Geeksforgeeks,</p>
<p>Neat Code. I just want to learn how you devised the backtracking algorithm for this problem?</p>
<p>//I mean I wanted to know the explanation of the tree given above.</p>
<p>-ckernel</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7382#respond" onclick='return addComment.moveForm("div-comment-7382", "7382", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-omairh odd alt thread-even depth-1 parent" id="comment-7332">
				<div id="div-comment-7332" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">omair hassan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7332">
			January 31, 2012 at 3:23 PM</a>		</div>

		<p>hi</p>
<p>can any one suggest me good tutorial on c programming, i m new in 
programming  , these days i m reading oop in c++ by lafore , please 
suggest me something that really helps me .. from the skretch ....</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7332#respond" onclick='return addComment.moveForm("div-comment-7332", "7332", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-7397">
				<div id="div-comment-7397" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">addy</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7397">
			February 7, 2012 at 3:01 PM</a>		</div>

		<p>You can use  use thinking in c++ Vol 1 By Bruce Eckel</p>
<p>http://www.digilife.be/quickreferences/books/thinking%20in%20c++,%20volume%201,%202nd%20edition.pdf</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7397#respond" onclick='return addComment.moveForm("div-comment-7397", "7397", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment byuser comment-author-omairh odd alt thread-odd thread-alt depth-1 parent" id="comment-7306">
				<div id="div-comment-7306" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">omair hassan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7306">
			January 30, 2012 at 1:41 AM</a>		</div>

		<p>hi\<br>
i copy the code in my complier but its not working<br>
its prompt the following errors<br>
1.  29 line , canno convert 'char * ', to 'char'<br>
2. 29 line. type mismatch in parameter 'a' in call to ' permute( char, int<br>
3, 32 line , 'a' is assigned a value that is never used</p>
<p>please help me i m new in programming</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7306#respond" onclick='return addComment.moveForm("div-comment-7306", "7306", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-2 parent" id="comment-7309">
				<div id="div-comment-7309" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">GeeksforGeeks</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7309">
			January 30, 2012 at 11:27 AM</a>		</div>

		<p>@omair hassan:  The program has been tested with more than compilers and it works fine.  See <a href="http://ideone.com/Nl8Ik" rel="nofollow">this</a> for a sample run that works.  Could you let us know the compiler you used and the exact code that you tried?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7309#respond" onclick='return addComment.moveForm("div-comment-7309", "7309", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3 parent" id="comment-7320">
				<div id="div-comment-7320" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">omair hassan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7320">
			January 30, 2012 at 5:42 PM</a>		</div>

		<p>i am using turbo c ++</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7320#respond" onclick='return addComment.moveForm("div-comment-7320", "7320", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-omairh even depth-4 parent" id="comment-7321">
				<div id="div-comment-7321" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">omair hassan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7321">
			January 30, 2012 at 6:50 PM</a>		</div>

		<p>thank you so much for the reply . the codes runs finally at char swap (*x, *y) i was using char swap (a,b)</p>
<p>can u tell me what was the mistake , although i didn't understand the code<br>
please help me .... <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_sad.gif" alt=":(" class="wp-smiley"> </p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7321#respond" onclick='return addComment.moveForm("div-comment-7321", "7321", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-geek4u odd alt depth-5" id="comment-7322">
				<div id="div-comment-7322" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">geek4u</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7322">
			January 30, 2012 at 8:52 PM</a>		</div>

		<p>Following tutorial on pointers and function may help.</p>
<p><a href="http://www.cs.cf.ac.uk/Dave/C/node10.html" rel="nofollow">http://www.cs.cf.ac.uk/Dave/C/node10.html</a></p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment byuser comment-author-omairh even depth-5" id="comment-7323">
				<div id="div-comment-7323" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">omair hassan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7323">
			January 30, 2012 at 8:55 PM</a>		</div>

		<p>that's so helpful thanks alot dude <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment byuser comment-author-sandeep odd alt depth-5" id="comment-7336">
				<div id="div-comment-7336" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://geeksforgeeks.org/forum/profile/sandeep/" rel="external nofollow" class="url">Sandeep</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7336">
			January 31, 2012 at 6:57 PM</a>		</div>

		<p>The C book (<a href="http://publications.gbdirect.co.uk/c_book/" rel="nofollow">http://publications.gbdirect.co.uk/c_book/</a>) seems to be a good resource for C.</p>

		<div class="reply">
				</div>
				</div>
		</li>
		<li class="comment byuser comment-author-omairh even depth-5" id="comment-7348">
				<div id="div-comment-7348" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">omair hassan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7348">
			February 1, 2012 at 9:11 PM</a>		</div>

		<p>@sandeep</p>
<p>thank u so much dude <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>

		<div class="reply">
				</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-7098">
				<div id="div-comment-7098" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://blackbox-iphone.com/" rel="external nofollow" class="url">Jailbreak and unlock your iPhone</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7098">
			January 15, 2012 at 1:40 PM</a>		</div>

		<div><div id="highlighter_452374" class="syntaxhighlighter nogutter  php"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="php plain">&lt;?php</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="php keyword">function</code> <code class="php plain">sort_string(</code><code class="php variable">$str</code><code class="php plain">){</code></div><div class="line number4 index3 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$arr</code> <code class="php plain">= NULL;</code></div><div class="line number5 index4 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$len</code> <code class="php plain">= </code><code class="php functions">strlen</code><code class="php plain">(</code><code class="php variable">$str</code><code class="php plain">);</code></div><div class="line number6 index5 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">for</code><code class="php plain">(</code><code class="php variable">$i</code><code class="php plain">=0; </code><code class="php variable">$i</code><code class="php plain">&lt;</code><code class="php variable">$len</code><code class="php plain">; </code><code class="php variable">$i</code><code class="php plain">++){</code></div><div class="line number7 index6 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$arr</code><code class="php plain">[] = </code><code class="php variable">$str</code><code class="php plain">[</code><code class="php variable">$i</code><code class="php plain">];</code></div><div class="line number8 index7 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number9 index8 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">sort(</code><code class="php variable">$arr</code><code class="php plain">);</code></div><div class="line number10 index9 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$str</code> <code class="php plain">= </code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number11 index10 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">for</code><code class="php plain">(</code><code class="php variable">$i</code><code class="php plain">=0; </code><code class="php variable">$i</code><code class="php plain">&lt;</code><code class="php variable">$len</code><code class="php plain">; </code><code class="php variable">$i</code><code class="php plain">++){</code></div><div class="line number12 index11 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$str</code> <code class="php plain">= </code><code class="php variable">$str</code> <code class="php plain">. </code><code class="php variable">$arr</code><code class="php plain">[</code><code class="php variable">$i</code><code class="php plain">];</code></div><div class="line number13 index12 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number14 index13 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$str</code><code class="php plain">;</code></div><div class="line number15 index14 alt2"><code class="php plain">}</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="php keyword">function</code> <code class="php plain">permute(</code><code class="php variable">$str</code><code class="php plain">){</code></div><div class="line number18 index17 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">//base cases</code></div><div class="line number19 index18 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code> <code class="php plain">(</code><code class="php variable">$str</code> <code class="php plain">== NULL){</code></div><div class="line number20 index19 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php string">""</code><code class="php plain">;</code></div><div class="line number21 index20 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number22 index21 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$len</code> <code class="php plain">= </code><code class="php functions">strlen</code><code class="php plain">(</code><code class="php variable">$str</code><code class="php plain">);</code></div><div class="line number23 index22 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">if</code> <code class="php plain">(</code><code class="php variable">$len</code> <code class="php plain">== 1){</code></div><div class="line number24 index23 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$str</code><code class="php plain">;</code></div><div class="line number25 index24 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number26 index25 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">else</code> <code class="php keyword">if</code> <code class="php plain">(</code><code class="php variable">$len</code> <code class="php plain">== 2){</code></div><div class="line number27 index26 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$str</code> <code class="php plain">.</code><code class="php string">","</code> <code class="php plain">. </code><code class="php variable">$str</code><code class="php plain">[1] . </code><code class="php variable">$str</code><code class="php plain">[0];</code></div><div class="line number28 index27 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number29 index28 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// the recursion</code></div><div class="line number30 index29 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">else</code> <code class="php plain">{</code></div><div class="line number31 index30 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$ans</code> <code class="php plain">= </code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number32 index31 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">for</code><code class="php plain">(</code><code class="php variable">$i</code><code class="php plain">=0; </code><code class="php variable">$i</code><code class="php plain">&lt;</code><code class="php variable">$len</code><code class="php plain">; </code><code class="php variable">$i</code><code class="php plain">++){</code></div><div class="line number33 index32 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// currenct char</code></div><div class="line number34 index33 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$char</code> <code class="php plain">= </code><code class="php variable">$str</code><code class="php plain">[</code><code class="php variable">$i</code><code class="php plain">];</code></div><div class="line number35 index34 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// the string without the selected char</code></div><div class="line number36 index35 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$str_b</code> <code class="php plain">= </code><code class="php functions">substr</code><code class="php plain">(</code><code class="php variable">$str</code><code class="php plain">,0,(</code><code class="php variable">$i</code><code class="php plain">-1 &lt; 0 ? 0 : </code><code class="php variable">$i</code><code class="php plain">)) . </code><code class="php functions">substr</code><code class="php plain">(</code><code class="php variable">$str</code><code class="php plain">,</code><code class="php variable">$i</code><code class="php plain">+1, </code><code class="php variable">$len</code><code class="php plain">-</code><code class="php variable">$i</code><code class="php plain">-1);</code></div><div class="line number37 index36 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">//build all the sub-permutations without char</code></div><div class="line number38 index37 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$sub_perm</code> <code class="php plain">= permute(</code><code class="php variable">$str_b</code><code class="php plain">);</code></div><div class="line number39 index38 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">//now add char</code></div><div class="line number40 index39 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$ans</code> <code class="php plain">= </code><code class="php variable">$ans</code> <code class="php plain">. add_first_char(</code><code class="php variable">$sub_perm</code><code class="php plain">, </code><code class="php variable">$char</code><code class="php plain">);</code></div><div class="line number41 index40 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number42 index41 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$ans</code><code class="php plain">;</code></div><div class="line number43 index42 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number44 index43 alt1"><code class="php plain">}</code></div><div class="line number45 index44 alt2">&nbsp;</div><div class="line number46 index45 alt1"><code class="php keyword">function</code> <code class="php plain">add_first_char(</code><code class="php variable">$str</code><code class="php plain">, </code><code class="php variable">$char</code><code class="php plain">){</code></div><div class="line number47 index46 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$ans</code> <code class="php plain">= </code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number48 index47 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$items</code> <code class="php plain">= </code><code class="php functions">explode</code> <code class="php plain">(</code><code class="php string">','</code><code class="php plain">,</code><code class="php variable">$str</code><code class="php plain">);</code></div><div class="line number49 index48 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$len</code> <code class="php plain">= sizeof(</code><code class="php variable">$items</code><code class="php plain">);&nbsp;&nbsp;&nbsp; </code></div><div class="line number50 index49 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">for</code><code class="php plain">(</code><code class="php variable">$i</code><code class="php plain">=0; </code><code class="php variable">$i</code><code class="php plain">&lt;</code><code class="php variable">$len</code><code class="php plain">; </code><code class="php variable">$i</code><code class="php plain">++){</code></div><div class="line number51 index50 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$ans</code> <code class="php plain">= </code><code class="php variable">$ans</code> <code class="php plain">. </code><code class="php string">","</code> <code class="php plain">.&nbsp; </code><code class="php variable">$char</code> <code class="php plain">. </code><code class="php variable">$items</code><code class="php plain">[</code><code class="php variable">$i</code><code class="php plain">];</code></div><div class="line number52 index51 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number53 index52 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">// remove the first ","</code></div><div class="line number54 index53 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php keyword">return</code> <code class="php variable">$ans</code><code class="php plain">;</code><code class="php comments">//</code></div><div class="line number55 index54 alt2"><code class="php plain">}</code></div><div class="line number56 index55 alt1">&nbsp;</div><div class="line number57 index56 alt2"><code class="php variable">$filename</code> <code class="php plain">= </code><code class="php variable">$argv</code><code class="php plain">[1];</code></div><div class="line number58 index57 alt1"><code class="php variable">$handle</code> <code class="php plain">= </code><code class="php functions">fopen</code><code class="php plain">(</code><code class="php variable">$filename</code><code class="php plain">, </code><code class="php string">"rb"</code><code class="php plain">);</code></div><div class="line number59 index58 alt2"><code class="php variable">$line</code> <code class="php plain">= </code><code class="php string">""</code><code class="php plain">;</code></div><div class="line number60 index59 alt1"><code class="php keyword">while</code> <code class="php plain">(!</code><code class="php functions">feof</code><code class="php plain">(</code><code class="php variable">$handle</code><code class="php plain">)) {</code></div><div class="line number61 index60 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$line</code> <code class="php plain">= </code><code class="php functions">fgets</code><code class="php plain">(</code><code class="php variable">$handle</code><code class="php plain">, 8192);</code></div><div class="line number62 index61 alt1"><code class="php spaces">&nbsp;&nbsp;</code><code class="php variable">$line</code> <code class="php plain">= trim(</code><code class="php variable">$line</code><code class="php plain">); </code></div><div class="line number63 index62 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php keyword">if</code> <code class="php plain">(</code><code class="php variable">$line</code> <code class="php plain">!= NULL) {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </code></div><div class="line number64 index63 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$line</code> <code class="php plain">= sort_string(</code><code class="php variable">$line</code><code class="php plain">);</code></div><div class="line number65 index64 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$ans</code> <code class="php plain">= permute(</code><code class="php variable">$line</code><code class="php plain">);</code></div><div class="line number66 index65 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php comments">//remove first "," from the final response</code></div><div class="line number67 index66 alt2"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php variable">$ans</code> <code class="php plain">= </code><code class="php functions">substr</code><code class="php plain">(</code><code class="php variable">$ans</code><code class="php plain">,1,</code><code class="php functions">strlen</code><code class="php plain">(</code><code class="php variable">$ans</code><code class="php plain">)-1);</code></div><div class="line number68 index67 alt1"><code class="php spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="php functions">echo</code> <code class="php plain">trim(</code><code class="php variable">$ans</code><code class="php plain">) . </code><code class="php string">"\n"</code><code class="php plain">;</code></div><div class="line number69 index68 alt2"><code class="php spaces">&nbsp;&nbsp;</code><code class="php plain">}</code></div><div class="line number70 index69 alt1"><code class="php plain">}</code></div><div class="line number71 index70 alt2"><code class="php plain">fclose(</code><code class="php variable">$handle</code><code class="php plain">);</code></div><div class="line number72 index71 alt1"><code class="php keyword">return</code> <code class="php plain">0;</code></div><div class="line number73 index72 alt2">&nbsp;</div><div class="line number74 index73 alt1"><code class="php plain">?&gt;</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7098#respond" onclick='return addComment.moveForm("div-comment-7098", "7098", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-7063">
				<div id="div-comment-7063" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Venkatesh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7063">
			January 12, 2012 at 1:43 PM</a>		</div>

		<p>http://www.programmerinterview.com/index.php/recursion/permutations-of-a-string/</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7063#respond" onclick='return addComment.moveForm("div-comment-7063", "7063", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-6759">
				<div id="div-comment-6759" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">amit</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6759">
			December 12, 2011 at 5:39 AM</a>		</div>

		<p>http://n1b-algo.blogspot.com/2009/01/string-permutations.html</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6759#respond" onclick='return addComment.moveForm("div-comment-6759", "6759", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-6714">
				<div id="div-comment-6714" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">pratik</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6714">
			December 7, 2011 at 11:46 AM</a>		</div>

		<p>Please explain how the time complexity is O(n!)??</p>
<div><div id="highlighter_569731" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6714#respond" onclick='return addComment.moveForm("div-comment-6714", "6714", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-6984">
				<div id="div-comment-6984" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">PRATEEK</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6984">
			December 29, 2011 at 1:27 AM</a>		</div>

		<p>see the for loop inside the func..permute where permute is called again and again 1 less than current n times<br>
ie, n*n-1*n-2*......*1=O(n!)<br>
or basically we could understand like this<br>
eg ankit, we have find all possible permutations of the name ankit<br>
as length of ankit is 5 thereforeforloop is called 5 times and then4 3 2
 1 and so on as maximum permutations of agiven word of length n is n! 
therefore we can simply say the complexity is O(n!)......</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6984#respond" onclick='return addComment.moveForm("div-comment-6984", "6984", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-6703">
				<div id="div-comment-6703" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">navyasree</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6703">
			December 6, 2011 at 10:16 PM</a>		</div>

		<p>hii..<br>
i want a program to print the first letter of given sentence of each 
word and at the end the last word of given sentence also printed..<br>
for ex:<br>
the given string is: hii hello how are you<br>
output:hhhayyou<br>
like this... pls anybody tel me the code...</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6703#respond" onclick='return addComment.moveForm("div-comment-6703", "6703", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-6716">
				<div id="div-comment-6716" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">coder</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6716">
			December 7, 2011 at 1:51 PM</a>		</div>

		<p>1.Read the line.<br>
2.Tokenize the string.<br>
3.For every token take the char at 0th position and store it in a another string or concatenate to your result string.<br>
4.Repeat step 3 till tokens are there.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6716#respond" onclick='return addComment.moveForm("div-comment-6716", "6716", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-arpit-211190 even depth-2" id="comment-6967">
				<div id="div-comment-6967" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Arpit Gupta</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6967">
			December 25, 2011 at 3:41 PM</a>		</div>

		<div><div id="highlighter_447163" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&lt;string.h&gt;</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">print(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*s)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">{&nbsp;&nbsp; </code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,word_start_index=0;</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%c"</code><code class="cpp plain">,s[0]);</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;s[i]!=</code><code class="cpp string">'\0'</code><code class="cpp plain">;i++)</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{&nbsp;&nbsp; </code><code class="cpp keyword bold">if</code><code class="cpp plain">(s[i]==32)&nbsp;&nbsp;&nbsp; </code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{&nbsp;&nbsp; </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%c"</code><code class="cpp plain">,s[i+1]);</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">word_start_index=i+1;</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\n"</code><code class="cpp plain">,s+word_start_index);</code></div><div class="line number13 index12 alt2"><code class="cpp plain">}</code></div><div class="line number14 index13 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number15 index14 alt2"><code class="cpp plain">{&nbsp;&nbsp; </code><code class="cpp color1 bold">char</code> <code class="cpp plain">*s=</code><code class="cpp string">"hii hello how are you"</code><code class="cpp plain">;</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">print(s);</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number18 index17 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6967#respond" onclick='return addComment.moveForm("div-comment-6967", "6967", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-6594">
				<div id="div-comment-6594" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">pinku</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6594">
			November 24, 2011 at 5:41 PM</a>		</div>

		<p>&amp; plzz give a flow chart also</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6594#respond" onclick='return addComment.moveForm("div-comment-6594", "6594", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1" id="comment-6593">
				<div id="div-comment-6593" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">pinku</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6593">
			November 24, 2011 at 5:38 PM</a>		</div>

		<p>plzz reply sharp..........write a program in c to print all posible permutations of abcde</p>
<div><div id="highlighter_538706" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6593#respond" onclick='return addComment.moveForm("div-comment-6593", "6593", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-6589">
				<div id="div-comment-6589" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">sandy880</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6589">
			November 24, 2011 at 2:09 PM</a>		</div>

		<div><div id="highlighter_305258" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#define SIZE 3</code></div><div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*argv[],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">argc)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">{</code></div><div class="line number5 index4 alt2"><code class="cpp color1 bold">char</code> <code class="cpp plain">list[3]={</code><code class="cpp string">'a'</code><code class="cpp plain">,</code><code class="cpp string">'b'</code><code class="cpp plain">,</code><code class="cpp string">'c'</code><code class="cpp plain">};</code></div><div class="line number6 index5 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j,k;</code></div><div class="line number7 index6 alt2"><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;SIZE;i++)</code></div><div class="line number8 index7 alt1"><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;SIZE;j++)</code></div><div class="line number9 index8 alt2"><code class="cpp keyword bold">for</code><code class="cpp plain">(k=0;k&lt;SIZE;k++)</code></div><div class="line number10 index9 alt1"><code class="cpp keyword bold">if</code><code class="cpp plain">(i!=j &amp;&amp; j!=k &amp;&amp; i!=k)</code></div><div class="line number11 index10 alt2"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%c%c%c\n"</code><code class="cpp plain">,list[i],list[j],list[k]);</code></div><div class="line number12 index11 alt1"><code class="cpp keyword bold">return</code><code class="cpp plain">(0);</code></div><div class="line number13 index12 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6589#respond" onclick='return addComment.moveForm("div-comment-6589", "6589", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-7776">
				<div id="div-comment-7776" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shaha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7776">
			March 10, 2012 at 11:07 PM</a>		</div>

		<p>lol sandy your code is so naive, you see it will work for three chars only, no less, no more. its got no flexibility</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7776#respond" onclick='return addComment.moveForm("div-comment-7776", "7776", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-5810">
				<div id="div-comment-5810" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">mahendhar rao</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5810">
			October 19, 2011 at 9:07 AM</a>		</div>

		<p>Awesome website!!!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5810#respond" onclick='return addComment.moveForm("div-comment-5810", "5810", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-5765">
				<div id="div-comment-5765" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">shantanu bhawre</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5765">
			October 15, 2011 at 11:31 PM</a>		</div>

		<p>All are correct but i want the otput like<br>
if the string is "abcd"<br>
then the combinatio will<br>
bcda<br>
cdab<br>
dabc<br>
abcd</p>
<p>like that can u tell me</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5765#respond" onclick='return addComment.moveForm("div-comment-5765", "5765", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-6874">
				<div id="div-comment-6874" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">sura</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6874">
			December 20, 2011 at 1:35 PM</a>		</div>

		<div><div id="highlighter_726361" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String[] args)</code></div><div class="line number2 index1 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number3 index2 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">char</code><code class="java plain">[] input = </code><code class="java string">"abcd"</code><code class="java plain">.toCharArray();</code></div><div class="line number4 index3 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">j=</code><code class="java value">0</code><code class="java plain">;</code></div><div class="line number5 index4 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code><code class="java plain">(</code><code class="java keyword">int</code> <code class="java plain">i=</code><code class="java value">0</code><code class="java plain">;i&lt;input.length;i++)</code></div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number8 index7 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">int</code> <code class="java plain">count=</code><code class="java value">0</code><code class="java plain">;</code></div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">j=i;</code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">while</code><code class="java plain">(count&lt;input.length)</code></div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">count++;</code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.print(input[j]);</code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">j=(j+</code><code class="java value">1</code><code class="java plain">)%input.length;</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println();</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number18 index17 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6874#respond" onclick='return addComment.moveForm("div-comment-6874", "6874", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1" id="comment-5756">
				<div id="div-comment-5756" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">pps</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5756">
			October 15, 2011 at 12:16 PM</a>		</div>

		<p>nice</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5756#respond" onclick='return addComment.moveForm("div-comment-5756", "5756", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-5372">
				<div id="div-comment-5372" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">ravi</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5372">
			September 17, 2011 at 8:22 AM</a>		</div>

		<p>really good site...for every question there is explanation</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5372#respond" onclick='return addComment.moveForm("div-comment-5372", "5372", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-5494">
				<div id="div-comment-5494" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">ror</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5494">
			September 28, 2011 at 3:59 AM</a>		</div>

		<p>but how about if a want a permutation list of something like 1238596?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5494#respond" onclick='return addComment.moveForm("div-comment-5494", "5494", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-5295">
				<div id="div-comment-5295" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Amitabh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5295">
			September 12, 2011 at 12:14 AM</a>		</div>

		<p>plz get me a program for this output</p>
<p>      1<br>
     121<br>
    12321<br>
     121<br>
    12121</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5295#respond" onclick='return addComment.moveForm("div-comment-5295", "5295", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-4913">
				<div id="div-comment-4913" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Ravinder Bishnoi &amp; Yugarsi Ghosh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4913">
			August 14, 2011 at 11:42 PM</a>		</div>

		<p>Guys,here is a very simple solution....</p>
<p>#include<br>
#include<br>
#include<br>
using namespace std;<br>
char a[10];<br>
void func(char *a,int j=0)<br>
{<br>
    if(j==strlen(a))<br>
    {<br>
        printf("%s\n",a);<br>
        }<br>
        char ch='';<br>
    for(int i=j;i&lt;strlen(a);i++)<br>
    {<br>
        char t;<br>
        if(ch==a[i])<br>
        continue;<br>
        else<br>
        {<br>
            ch=a[j];<br>
        t=a[i];<br>
        a[i]=a[j];<br>
        a[j]=t;<br>
    func(a,j+1);<br>
}<br>
    }<br>
}<br>
int main()<br>
{<br>
    char a[10];<br>
    printf("Enter a String\n");<br>
    scanf("%s",&amp;a);<br>
    printf("Permutations of string\n");<br>
    func(a);<br>
    getch();<br>
    return 0;<br>
    }</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4913#respond" onclick='return addComment.moveForm("div-comment-4913", "4913", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-4914">
				<div id="div-comment-4914" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Ravinder Bishnoi &amp; Yugarsi Ghosh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4914">
			August 15, 2011 at 12:25 AM</a>		</div>

		<p>above program was not posted correctly...<br>
use the new one...<br>
it works when all elements of string are distinct otherwise some permutations will be repeated.<br>
headers are iostream,string and conio.h.<br>
#include<br>
#include<br>
#include<br>
using namespace std;<br>
char a[10];<br>
void func(char *a,int j=0)<br>
{<br>
    if(j==strlen(a))<br>
    {<br>
        printf("%sn",a);<br>
        }<br>
    for(int i=j;i&lt;strlen(a);i++)<br>
    {<br>
        char t;<br>
        t=a[i];<br>
        a[i]=a[j];<br>
        a[j]=t;<br>
    func(a,j+1);<br>
    }<br>
}<br>
int main()<br>
{<br>
    char a[10];<br>
    printf("Enter a Stringn");<br>
    scanf("%s",&amp;a);<br>
    printf("Permutations of stringn");<br>
    func(a);<br>
    getch();<br>
    return 0;<br>
    }</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4914#respond" onclick='return addComment.moveForm("div-comment-4914", "4914", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-venki even depth-2 parent" id="comment-5303">
				<div id="div-comment-5303" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://geeksforgeeks.org/?page_id=2" rel="external nofollow" class="url">Venki</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-5303">
			September 12, 2011 at 10:32 PM</a>		</div>

		<p>@Ravinder &amp; @Yugarsi, Here is your logic. How is it better, could you explain your view?</p>
<div><div id="highlighter_326564" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;iostream&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">using</code> <code class="cpp keyword bold">namespace</code> <code class="cpp plain">std;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*a, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">j = 0)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">len = </code><code class="cpp functions bold">strlen</code><code class="cpp plain">(a);</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(j == len)</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">cout &lt;&lt; a &lt;&lt; endl;</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = j; i &lt; len; i++)</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">t = a[i];</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[i] = a[j];</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[j] = t;</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, j+1);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number21 index20 alt2"><code class="cpp plain">}</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number24 index23 alt1"><code class="cpp plain">{</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">a[] = </code><code class="cpp string">"ABCD"</code><code class="cpp plain">;</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a);</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number28 index27 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>This kind of programs runs like O(f(n) * n!) or O(f() * 2^n) where is
 f(n) is polynomial in n. Any algorithm must generate all possible 
permutations.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=5303#respond" onclick='return addComment.moveForm("div-comment-5303", "5303", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3" id="comment-7777">
				<div id="div-comment-7777" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shaha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7777">
			March 10, 2012 at 11:19 PM</a>		</div>

		<p>actually your code/logic is the almost the same as the one posted 
by admin, you only replaced the swap fuction call by actual function, 
which could have been done automatically if swipe function was inline. <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley"><br>
btw your program shows all permutations but the admins does not, or perhaps i made some glitch while copying.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7777#respond" onclick='return addComment.moveForm("div-comment-7777", "7777", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-4893">
				<div id="div-comment-4893" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">amit khoth</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4893">
			August 12, 2011 at 11:53 PM</a>		</div>

		<p>@geeksforgeeks correct this code.for same type of word it is not working.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4893#respond" onclick='return addComment.moveForm("div-comment-4893", "4893", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2 parent" id="comment-4895">
				<div id="div-comment-4895" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">GeeksforGeeks</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4895">
			August 13, 2011 at 2:20 AM</a>		</div>

		<p>@amit khoth:  Could you please provide a sample string for which it didn't work?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4895#respond" onclick='return addComment.moveForm("div-comment-4895", "4895", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3 parent" id="comment-4896">
				<div id="div-comment-4896" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">amit khoth</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4896">
			August 13, 2011 at 10:59 AM</a>		</div>

		<p>when two character are similar in a word.like aatif,aaaj etc,</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4896#respond" onclick='return addComment.moveForm("div-comment-4896", "4896", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-4" id="comment-7389">
				<div id="div-comment-7389" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Christian</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7389">
			February 6, 2012 at 1:52 PM</a>		</div>

		<p>Well, what do you think it should do? It's probably undefined for input like that.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7389#respond" onclick='return addComment.moveForm("div-comment-7389", "7389", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even depth-3" id="comment-7778">
				<div id="div-comment-7778" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shaha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-7778">
			March 10, 2012 at 11:26 PM</a>		</div>

		<p>actually it does not give all the permutations, for 3 chars there should be 3!   = 6, right?<br>
Btw Venki has given a correct code,<br>
And for those who want it to not show repeating ones, put a condition 
before swaping, if the chars to be swapped are same continue ( i mean 
skip the statement continue; instruction and go for next.<br>
Hey admin would you like my page on fb?? Its about coding too, ive made some awesome codes <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley">  wanted someone who could critique or provide suggestions, <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley">  thank you<br>
Page is 'C programming'<br>
facebook.com/CkCoders</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=7778#respond" onclick='return addComment.moveForm("div-comment-7778", "7778", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-4238">
				<div id="div-comment-4238" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Anand</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4238">
			June 7, 2011 at 9:23 AM</a>		</div>

		<p><a href="http://anandtechblog.blogspot.com/2011/05/arra-y-problem.html" rel="nofollow">http://anandtechblog.blogspot.com/2011/05/arra-y-problem.html</a></p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4238#respond" onclick='return addComment.moveForm("div-comment-4238", "4238", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-even depth-1" id="comment-4219">
				<div id="div-comment-4219" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Sam</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4219">
			June 5, 2011 at 7:12 PM</a>		</div>

		<p>Great post!</p>
<p>Nice solution here as well:<a href="http://www.programmerinterview.com/index.php/recursion/permutations-of-a-string/" rel="nofollow"></a></p><a href="http://www.programmerinterview.com/index.php/recursion/permutations-of-a-string/" rel="nofollow">
</a><p><a href="http://www.programmerinterview.com/index.php/recursion/permutations-of-a-string/" rel="nofollow">http://www.programmerinterview.com/index.php/recursion/permutations-of-a-string/</a></p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4219#respond" onclick='return addComment.moveForm("div-comment-4219", "4219", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-3602">
				<div id="div-comment-3602" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">rimu.nitrkl</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3602">
			March 19, 2011 at 1:23 AM</a>		</div>

		<p>The code mentioned above doesnt work correctly, if there are any 
repeated characters in the string, it would unncessarily print some 
strings multiple times ...</p>
<p>Working code for the same, which takes care of repeated chars as well:</p>
<div><div id="highlighter_384082" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor"># include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor"># include &lt;conio.h&gt;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">printPermutations(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">*str,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">size, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">pos)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">total=0;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(pos==(size-1))</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">puts</code><code class="cpp plain">(str);</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">total+=printPermutations(str,size,pos+1);</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=pos+1;i&lt;size;i++)</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j;&nbsp; </code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=pos;j&lt;i;j++)</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(*(str+j)==*(str+i))</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">break</code><code class="cpp plain">;</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(j==i)</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">tmp=*(str+pos);</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(str+pos)=*(str+i);</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(str+i)=tmp;</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">total+=printPermutations(str,size,pos+1);</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">tmp=*(str+pos);</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(str+pos)=*(str+i);</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*(str+i)=tmp;</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">total;</code></div><div class="line number38 index37 alt1"><code class="cpp plain">}</code></div><div class="line number39 index38 alt2">&nbsp;</div><div class="line number40 index39 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number41 index40 alt2"><code class="cpp plain">{</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">str[100];</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">size,total;</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Enter the string: "</code><code class="cpp plain">);</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">gets</code><code class="cpp plain">(str);</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">size=</code><code class="cpp functions bold">strlen</code><code class="cpp plain">(str);</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n\nAll permutations of the input string are:\n"</code><code class="cpp plain">);</code></div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">total=printPermutations(str,size,0);</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n\nThe total number of permutations of the given string is %d"</code><code class="cpp plain">,total);</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getch();</code></div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number57 index56 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3602#respond" onclick='return addComment.moveForm("div-comment-3602", "3602", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-3845">
				<div id="div-comment-3845" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">ricky</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3845">
			April 19, 2011 at 7:34 PM</a>		</div>

		<p>@rimu.nitrkl...Could You Please Through Some More Light ..I mean 
Can you write down the algorithm..step by step..its really nice way to 
programming that you have done..also..i think you TC is O(n^2)..isn't 
it..??</p>
<p>Waiting for your Explanation..??? Reply ASAP</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3845#respond" onclick='return addComment.moveForm("div-comment-3845", "3845", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-3420">
				<div id="div-comment-3420" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">crash</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3420">
			March 3, 2011 at 9:45 PM</a>		</div>

		<p>i want a all combos of 7 letters<br>
should i hav to use char</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3420#respond" onclick='return addComment.moveForm("div-comment-3420", "3420", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-3322">
				<div id="div-comment-3322" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Ahul</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3322">
			February 18, 2011 at 9:34 PM</a>		</div>

		<p>How the control again reaches to permute fn evenafter the i becomes 2</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3322#respond" onclick='return addComment.moveForm("div-comment-3322", "3322", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-3201">
				<div id="div-comment-3201" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Matrix</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3201">
			February 6, 2011 at 10:03 PM</a>		</div>

		<p>the first program gives repeated permutation in case of 122<br>
how to correct it<br>
plz help ??<br>
in case of 122,it gives<br>
122<br>
212<br>
221<br>
212  //repeated<br>
221  //repeated</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3201#respond" onclick='return addComment.moveForm("div-comment-3201", "3201", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-3116">
				<div id="div-comment-3116" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">world is round</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3116">
			February 2, 2011 at 7:33 PM</a>		</div>

		<p>Another way to do this : http://layerinside.blogspot.com/2011/02/permutation-of-string.html</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3116#respond" onclick='return addComment.moveForm("div-comment-3116", "3116", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-3068">
				<div id="div-comment-3068" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Shashank Mani Narayan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3068">
			January 30, 2011 at 7:50 PM</a>		</div>

		<p>Hey guys..I know Most of You Stuck with this Question..The 1st 
Backtracking approach..seems to typical..for understanding [points of 
view.....here i am posting a excellent so0lution fro problem hope this 
will help you ..lot..</p>
<p>Explanation </p>
<p>Letâs assume a given string S represented by the letters A1, A2, A3, ..., An<br>
To permute set S, we can select the first character, A1, permute the 
remainder of the string to get a new list. Then, with that new list, we 
can âpushâ A1 into each possible position.<br>
For example, if our string is âabcâ, we would do the following:<br>
1. Let first = âaâ and let remainder = âbcâ<br>
2. Let list = permute(bc) = {âbcâ, âcdâ}<br>
3. Push âaâ into each location of âbcâ (--&gt; âabcâ, âbacâ, âbcaâ) and âcbâ (--&gt; âacbâ, âcabâ, âcbaâ)<br>
4. Return our new list</p>
<div><div id="highlighter_133873" class="syntaxhighlighter nogutter  java"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="java keyword">import</code> <code class="java plain">java.util.*;</code></div><div class="line number2 index1 alt1"><code class="java keyword">class</code> <code class="java plain">Permutation</code></div><div class="line number3 index2 alt2"><code class="java plain">{&nbsp;&nbsp; </code></div><div class="line number4 index3 alt1"><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java plain">ArrayList getPerms(String s) </code></div><div class="line number5 index4 alt2"><code class="java plain">{</code></div><div class="line number6 index5 alt1"><code class="java spaces">&nbsp;</code>&nbsp;</div><div class="line number7 index6 alt2"><code class="java spaces">&nbsp;</code><code class="java plain">ArrayList permutations = </code><code class="java keyword">new</code> <code class="java plain">ArrayList();</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="java spaces">&nbsp;</code><code class="java keyword">if</code> <code class="java plain">(s == </code><code class="java keyword">null</code><code class="java plain">) </code></div><div class="line number10 index9 alt1"><code class="java spaces">&nbsp;</code><code class="java plain">{ </code><code class="java comments">// error case</code></div><div class="line number11 index10 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java keyword">null</code><code class="java plain">;</code></div><div class="line number12 index11 alt1"><code class="java spaces">&nbsp;</code><code class="java plain">} </code></div><div class="line number13 index12 alt2"><code class="java spaces">&nbsp;</code><code class="java keyword">else</code> <code class="java keyword">if</code> <code class="java plain">(s.length() == </code><code class="java value">0</code><code class="java plain">) </code></div><div class="line number14 index13 alt1"><code class="java spaces">&nbsp;</code><code class="java plain">{ </code><code class="java comments">// base case</code></div><div class="line number15 index14 alt2"><code class="java spaces">&nbsp;</code><code class="java plain">permutations.add(</code><code class="java string">""</code><code class="java plain">);</code></div><div class="line number16 index15 alt1"><code class="java spaces">&nbsp;</code><code class="java keyword">return</code> <code class="java plain">permutations;</code></div><div class="line number17 index16 alt2"><code class="java spaces">&nbsp;</code><code class="java plain">}</code></div><div class="line number18 index17 alt1">&nbsp;</div><div class="line number19 index18 alt2"><code class="java spaces">&nbsp;</code><code class="java keyword">char</code> <code class="java plain">first = s.charAt(</code><code class="java value">0</code><code class="java plain">); </code><code class="java comments">// get the first character</code></div><div class="line number20 index19 alt1"><code class="java spaces">&nbsp;</code><code class="java plain">String remainder = s.substring(</code><code class="java value">1</code><code class="java plain">); </code><code class="java comments">// remove the first character</code></div><div class="line number21 index20 alt2"><code class="java spaces">&nbsp;</code><code class="java plain">ArrayList words = getPerms(remainder);</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="java spaces">&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(String word : words) </code></div><div class="line number24 index23 alt1"><code class="java spaces">&nbsp;</code><code class="java plain">{</code></div><div class="line number25 index24 alt2"><code class="java spaces">&nbsp;</code>&nbsp;</div><div class="line number26 index25 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">for</code> <code class="java plain">(</code><code class="java keyword">int</code> <code class="java plain">j = </code><code class="java value">0</code><code class="java plain">; j &lt;= word.length(); j++) </code></div><div class="line number27 index26 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number28 index27 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">permutations.add(insertCharAt(word, first, j));</code></div><div class="line number29 index28 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number30 index29 alt1"><code class="java spaces">&nbsp;</code>&nbsp;</div><div class="line number31 index30 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number32 index31 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">permutations;</code></div><div class="line number33 index32 alt2"><code class="java spaces">&nbsp;</code>&nbsp;</div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number36 index35 alt1"><code class="java spaces">&nbsp;</code>&nbsp;</div><div class="line number37 index36 alt2">&nbsp;</div><div class="line number38 index37 alt1"><code class="java spaces">&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java plain">String insertCharAt(String word, </code><code class="java keyword">char</code> <code class="java plain">c, </code><code class="java keyword">int</code> <code class="java plain">i) </code></div><div class="line number39 index38 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number40 index39 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">String start = word.substring(</code><code class="java value">0</code><code class="java plain">, i);</code></div><div class="line number41 index40 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">String end = word.substring(i);</code></div><div class="line number42 index41 alt1">&nbsp;</div><div class="line number43 index42 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">System.out.println(</code><code class="java string">"start="</code> <code class="java plain">+ start&nbsp; + </code><code class="java string">"\t c="</code> <code class="java plain">+ c + </code><code class="java string">"\t end="</code> <code class="java plain">+ end );</code></div><div class="line number44 index43 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java keyword">return</code> <code class="java plain">start + c + end;</code></div><div class="line number45 index44 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java keyword">public</code> <code class="java keyword">static</code> <code class="java keyword">void</code> <code class="java plain">main(String a[])</code></div><div class="line number48 index47 alt1">&nbsp;</div><div class="line number49 index48 alt2"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">{</code></div><div class="line number50 index49 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">ArrayList perm = </code><code class="java keyword">new</code> <code class="java plain">ArrayList();</code></div><div class="line number51 index50 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number52 index51 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java plain">perm=getPerms(</code><code class="java string">"abc"</code><code class="java plain">);</code></div><div class="line number53 index52 alt2">&nbsp;</div><div class="line number54 index53 alt1"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//for(String ele:perm)</code></div><div class="line number55 index54 alt2"><code class="java spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="java comments">//System.out.println(ele);</code></div><div class="line number56 index55 alt1"><code class="java spaces">&nbsp;&nbsp;</code><code class="java plain">}</code></div><div class="line number57 index56 alt2"><code class="java plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Compile: javac Permutation.java<br>
Run: java Permutation</p>
<p>/*output analysis<br>
start=	 c=c	 end=<br>
start=	 c=b	 end=c<br>
start=c	 c=b	 end=<br>
start=	 c=a	 end=bc<br>
start=b	 c=a	 end=c<br>
start=bc	 c=a	 end=<br>
start=	 c=a	 end=cb<br>
start=c	 c=a	 end=b<br>
start=cb	 c=a	 end=<br>
*/</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3068#respond" onclick='return addComment.moveForm("div-comment-3068", "3068", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-10168">
				<div id="div-comment-10168" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">rahul</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-10168">
			August 12, 2012 at 4:06 AM</a>		</div>

		<p>@Shashank .. This is awesome solution , i was not aware of this , thanks for sharing <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<div><div id="highlighter_892741" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=10168#respond" onclick='return addComment.moveForm("div-comment-10168", "10168", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment byuser comment-author-saiganeshb odd alt thread-odd thread-alt depth-1 parent" id="comment-2606">
				<div id="div-comment-2606" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Sai Ganesh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2606">
			December 18, 2010 at 12:31 PM</a>		</div>

		<p>My solution:</p>
<div><div id="highlighter_751348" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">printer(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*a,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n){</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;n;i++)</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d"</code><code class="cpp plain">,a[i]);</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></div><div class="line number5 index4 alt2"><code class="cpp plain">}</code></div><div class="line number6 index5 alt1"><code class="cpp comments">/*recursive permute function </code></div><div class="line number7 index6 alt2"><code class="cpp comments">Semantics:</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">a - array which holds the present permutation of size n</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">k - present slot in the array a. we have a permutation when k==n</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">if k &lt; n , we are still building our permutation.</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">We can think of the permutation result as </code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">a row of n slots, holding a number between 1 and n </code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">(if we want permutations from another array b, we can think of </code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">it as holding b[1] to b[n] ..the logic is the same)</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">if we don't want them to repeat, we need to maintain </code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">state of our computations in the array called 'selected'.</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;</code><code class="cpp comments">*/</code></div><div class="line number23 index22 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*a,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">n,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">k,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*selected){</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(k==n){</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printer(a,n);</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;n;i++){</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(!selected[i]){</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a[k]=i+1; </code><code class="cpp comments">//alternately, a[k]=f(i) , here f(i)=i+1.</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">//essentially, the i'th value from a list.</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">selected[i]=1;</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a,n,k+1,selected); </code><code class="cpp comments">//fill up from the next index</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">selected[i]=0; </code><code class="cpp comments">//backtrack</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number38 index37 alt1"><code class="cpp plain">}</code></div><div class="line number39 index38 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main(</code><code class="cpp keyword bold">void</code><code class="cpp plain">){</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a[10]={0};</code></div><div class="line number41 index40 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">selected[10]={0};</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a,5,0,selected);</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number45 index44 alt2"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Advantages:<br>
1. code is clear and the printer() function can be replaced by<br>
a process() function which is 'streamed' one permutation at a time</p>
<p>2. It can also be used to permute values from a function.<br>
we are just storing the indices.</p>
<p>3. Can be extended to print permutations with repetition:<br>
make the if condition always evaluate to true <img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_wink.gif" alt=";)" class="wp-smiley"><br>
like (if(1 || !selected[i] ) ) ...</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2606#respond" onclick='return addComment.moveForm("div-comment-2606", "2606", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-3757">
				<div id="div-comment-3757" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Emran</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3757">
			April 8, 2011 at 3:28 PM</a>		</div>

		<p>this is a really clean implementation, and i like that it lists in lexicographic order. </p>
<p>question: what if i had an application where i could reduce run time by avoiding some permutations...<br>
like if i wanted to enumerate every other permutation, or only the first (n!)/2 permutations? </p>
<p>in particular, ive reached a case in a problem im solving where 1,2,3,4 is the effective equivalent of 4,3,2,1...<br>
so i want to remove those from being evaluated; but im not sure how to group out such subsets...</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3757#respond" onclick='return addComment.moveForm("div-comment-3757", "3757", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt depth-2" id="comment-3804">
				<div id="div-comment-3804" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">seeker7</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3804">
			April 16, 2011 at 10:32 AM</a>		</div>

		<p>This code is plagiarised from Programming interview exposed<br>
 I do not intend to Offend you ,but you should have mentioned the source of your code .</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3804#respond" onclick='return addComment.moveForm("div-comment-3804", "3804", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1" id="comment-2382">
				<div id="div-comment-2382" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Phani Deepak</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2382">
			October 25, 2010 at 8:13 PM</a>		</div>

		<p>Just another improvement.<br>
The function prototype can be just permute(char *a, int size);</p>
<p>Modification would be:<br>
instead of swapping every element in loop with first element,<br>
we can swap it with last element and call permute(a, size-1);</p>
<p>what do you say?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2382#respond" onclick='return addComment.moveForm("div-comment-2382", "2382", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-2230">
				<div id="div-comment-2230" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">cod3r</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2230">
			September 22, 2010 at 6:06 AM</a>		</div>

		<p>Hey,<br>
how would do it for strings with repeated string</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2230#respond" onclick='return addComment.moveForm("div-comment-2230", "2230", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2 parent" id="comment-2231">
				<div id="div-comment-2231" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">cod3r</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2231">
			September 22, 2010 at 6:06 AM</a>		</div>

		<p>Hey,<br>
how would do it for strings with repeated <strong>char</strong></p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2231#respond" onclick='return addComment.moveForm("div-comment-2231", "2231", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-3" id="comment-4731">
				<div id="div-comment-4731" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://www.divye.in/" rel="external nofollow" class="url">Divye</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4731">
			July 27, 2011 at 7:29 PM</a>		</div>

		<p>See this post to understand the logic behind printing all 
permutations without duplicates (even when duplicate characters are 
present in the input).</p>
<p>http://www.divye.in/2011/06/printing-all-permutations-of-string.html</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4731#respond" onclick='return addComment.moveForm("div-comment-4731", "4731", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-2064">
				<div id="div-comment-2064" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Anshul</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2064">
			August 23, 2010 at 5:59 PM</a>		</div>

		<p>I think this will work. I ran this and its working:</p>
<div><div id="highlighter_765436" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">private</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">swap(ref </code><code class="cpp color1 bold">char</code> <code class="cpp plain">a, ref </code><code class="cpp color1 bold">char</code> <code class="cpp plain">b)</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(a == b) </code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a ^= b;</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">b ^= a;</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">a ^= b;</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">private</code> <code class="cpp keyword bold">void</code> <code class="cpp plain">go(</code><code class="cpp color1 bold">char</code><code class="cpp plain">[] list, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">k, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">m)</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(k == m)</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Console.Write(list);</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">Console.WriteLine(</code><code class="cpp string">" "</code><code class="cpp plain">);</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(i = k; i &lt;= m; i++)</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(list[k] == list[i] &amp;&amp; k != i) </code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(ref list[k], ref list[i]);</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">go(list, k + 1, m);</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap(ref list[k], ref list[i]);</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Only difference is in Swap function, So swap is also checking if swapping characters are equivalent.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2064#respond" onclick='return addComment.moveForm("div-comment-2064", "2064", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2" id="comment-3008">
				<div id="div-comment-3008" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">stackoverflow</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3008">
			January 27, 2011 at 12:36 PM</a>		</div>

		<p>copied well from stack overflow ....... nice!!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3008#respond" onclick='return addComment.moveForm("div-comment-3008", "3008", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-2063">
				<div id="div-comment-2063" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Anshul</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2063">
			August 23, 2010 at 5:59 PM</a>		</div>

		<p>For the main code given on this page, I think for string = âaaaâ it
 will print âaaaâ several times instead of just once. To remove this 
error, do the following modification:</p>
<div><div id="highlighter_927177" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">for</code> <code class="cpp plain">(j = i; j &lt;= n; j++)</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(A[i] == A[j] &amp;&amp; i != j) </code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j));</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, i+1, n);</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j)); </code><code class="cpp comments">//backtrack</code></div><div class="line number8 index7 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>The highlighted line is not preventing print of same "AAA". I think 
we need to check for same string and should not execute in case of same 
string.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2063#respond" onclick='return addComment.moveForm("div-comment-2063", "2063", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-1980">
				<div id="div-comment-1980" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Ankul</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-1980">
			August 13, 2010 at 1:58 AM</a>		</div>

		<p>For the main code given on this page, I think for string = "aaa" it
 will print "aaa" several times instead of just once. To remove this 
error, do the following modification:</p>
<div><div id="highlighter_616090" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">for</code> <code class="cpp plain">(j = i; j &lt;= n; j++)</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(A[i] == A[j] &amp;&amp; i != j) </code><code class="cpp keyword bold">continue</code><code class="cpp plain">;</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j));</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, i+1, n);</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j)); </code><code class="cpp comments">//backtrack</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=1980#respond" onclick='return addComment.moveForm("div-comment-1980", "1980", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-cracker even depth-2 parent" id="comment-6514">
				<div id="div-comment-6514" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://algods-cracker.blogspot.com/" rel="external nofollow" class="url">Cracker</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6514">
			November 17, 2011 at 1:40 AM</a>		</div>

		<p>not working for string "agra"</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6514#respond" onclick='return addComment.moveForm("div-comment-6514", "6514", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-cracker odd alt depth-3" id="comment-6515">
				<div id="div-comment-6515" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://algods-cracker.blogspot.com/" rel="external nofollow" class="url">Cracker</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-6515">
			November 17, 2011 at 1:55 AM</a>		</div>

		<p>output is --</p>
<p>agra<br>
agar<br>
arga<br>
arag<br>
aarg<br>
aagr<br>
gara<br>
gaar<br>
graa<br>
rgaa<br>
raga<br>
raag<br>
raag<br>
raga</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=6515#respond" onclick='return addComment.moveForm("div-comment-6515", "6515", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-1831">
				<div id="div-comment-1831" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">seeker7</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-1831">
			July 31, 2010 at 9:00 AM</a>		</div>

		<p>hw abt this:<br>
rotate the given array n-1 times<br>
then reverse the intial array and again rotate it n-1 times!</p>
<p>woud'nt it be better than using recursion?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=1831#respond" onclick='return addComment.moveForm("div-comment-1831", "1831", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-ravi odd alt depth-2" id="comment-2489">
				<div id="div-comment-2489" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Ravinder</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2489">
			November 24, 2010 at 1:03 PM</a>		</div>

		<p>It doesn't provide all solutions!!?<br>
instead of n! permutations, it just gives 2n</p>
<p>correct me in case of misinterpretation</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2489#respond" onclick='return addComment.moveForm("div-comment-2489", "2489", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1" id="comment-1613">
				<div id="div-comment-1613" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Anshu Bansal</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-1613">
			July 12, 2010 at 10:23 PM</a>		</div>

		<p>Would this work for 'N' number of characters in String?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=1613#respond" onclick='return addComment.moveForm("div-comment-1613", "1613", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-rscrbv odd alt thread-odd thread-alt depth-1 parent" id="comment-1547">
				<div id="div-comment-1547" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">rscrbv</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-1547">
			July 4, 2010 at 2:10 AM</a>		</div>

		<p>here is my code, if anybody likes</p>
<div><div id="highlighter_441162" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include&lt;string.h&gt;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">ror(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">str1[],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">b)</code></div><div class="line number5 index4 alt2"><code class="cpp plain">{</code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">temp=str1[a];</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=a;j&lt;b;j++)</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">str1[j]=str1[j+1];</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">str1[b]=temp;</code></div><div class="line number13 index12 alt2"><code class="cpp plain">}</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">perm(</code><code class="cpp color1 bold">char</code> <code class="cpp plain">str[],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">f,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">l)</code></div><div class="line number16 index15 alt1"><code class="cpp plain">{</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">char</code> <code class="cpp plain">str1[5];</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">strcpy</code><code class="cpp plain">(str1,str);</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(f==l)</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s\t"</code><code class="cpp plain">,str1);</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code><code class="cpp plain">;</code></div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number25 index24 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=f;i&lt;=l;i++)</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number27 index26 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">perm(str1,f+1,l);</code></div><div class="line number28 index27 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">ror(str1,f,l);</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number30 index29 alt1"><code class="cpp plain">}</code></div><div class="line number31 index30 alt2">&nbsp;</div><div class="line number32 index31 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number33 index32 alt2"><code class="cpp plain">{</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">perm(</code><code class="cpp string">"vikas"</code><code class="cpp plain">,0,4);</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">getchar</code><code class="cpp plain">();</code></div><div class="line number36 index35 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=1547#respond" onclick='return addComment.moveForm("div-comment-1547", "1547", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2 parent" id="comment-2681">
				<div id="div-comment-2681" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">shashank</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2681">
			January 3, 2011 at 11:47 AM</a>		</div>

		<p>@rscrbv<br>
@geeksforgeek<br>
..could plz tell me how ur code is working..plz  help le out that how 
the control is tranferring..take string abc  &amp; plz show ur flow 
control at for every combination...i really need help in 
dis..program...reply asap.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2681#respond" onclick='return addComment.moveForm("div-comment-2681", "2681", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-wgpshashank odd alt depth-3" id="comment-2716">
				<div id="div-comment-2716" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://www.wgpshashank.co.cc/" rel="external nofollow" class="url">wgpshashank</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2716">
			January 6, 2011 at 8:31 PM</a>		</div>

		<p>@rscrbv<br>
@geeksforgeek<br>
..could plz tell me how ur code is working..take string abc &amp; plz 
show ur flow control at for every combinationâ¦i really need help in 
dis..programâ¦reply asap.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2716#respond" onclick='return addComment.moveForm("div-comment-2716", "2716", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even depth-2" id="comment-3803">
				<div id="div-comment-3803" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">seeker7</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-3803">
			April 16, 2011 at 10:27 AM</a>		</div>

		<p>why does not any one explain this well-loved code<br>
thanks!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=3803#respond" onclick='return addComment.moveForm("div-comment-3803", "3803", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt depth-2" id="comment-4057">
				<div id="div-comment-4057" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">vivek singh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-4057">
			May 13, 2011 at 6:40 PM</a>		</div>

		<p>well done</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=4057#respond" onclick='return addComment.moveForm("div-comment-4057", "4057", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even thread-even depth-1" id="comment-1177">
				<div id="div-comment-1177" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">remo</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-1177">
			May 22, 2010 at 4:22 PM</a>		</div>

		<p>what will done when call Function permute(a, i+1, n);</p>
<div><div id="highlighter_658540" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">for</code> <code class="cpp plain">(j = i; j &amp;lt;= n; j++)&nbsp; </code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{&nbsp; </code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j));&nbsp; </code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(a, i+1, n);&nbsp; </code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">swap((a+i), (a+j)); </code><code class="cpp comments">//backtrack&nbsp; </code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=1177#respond" onclick='return addComment.moveForm("div-comment-1177", "1177", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-697">
				<div id="div-comment-697" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://voxels.blogspot.com/" rel="external nofollow" class="url">Sven Forstmann</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-697">
			April 8, 2010 at 2:40 PM</a>		</div>

		<p>Simple and non-recursive, lexically correct output.</p>
<div><div id="highlighter_655945" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">std::string </code><code class="cpp keyword bold">default</code> <code class="cpp plain">= </code><code class="cpp string">"Hallo"</code><code class="cpp plain">;</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">perm=1, digits=</code><code class="cpp keyword bold">default</code><code class="cpp plain">.size();</code></div><div class="line number4 index3 alt1"><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=1;i&lt;=digits;perm*=i++);</code></div><div class="line number5 index4 alt2"><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">a=0;a&lt;perm;a++)</code></div><div class="line number6 index5 alt1"><code class="cpp plain">{</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">std::string avail=</code><code class="cpp keyword bold">default</code><code class="cpp plain">;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">b=digits,</code><code class="cpp functions bold">div</code><code class="cpp plain">=perm;b&gt;0; b--) </code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">div</code><code class="cpp plain">/=b;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">index = (a/</code><code class="cpp functions bold">div</code><code class="cpp plain">)%b;</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%c"</code><code class="cpp plain">, avail[index] );</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">avail.erase(index,1) ;</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></div><div class="line number17 index16 alt2"><code class="cpp plain">}</code></div><div class="line number18 index17 alt1"><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"permutations:%d\n"</code><code class="cpp plain">,perm);</code></div></div></td></tr></tbody></table></div></div>
<p>(c) Sven Forstmann</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=697#respond" onclick='return addComment.moveForm("div-comment-697", "697", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-kartik even depth-2 parent" id="comment-720">
				<div id="div-comment-720" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">kartik</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-720">
			April 10, 2010 at 8:27 PM</a>		</div>

		<p>@Sven Forstmann: Can you please write algorithm for the above code?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=720#respond" onclick='return addComment.moveForm("div-comment-720", "720", "respond", "767")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-soundbalaji odd alt depth-3" id="comment-2698">
				<div id="div-comment-2698" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">bala</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2698">
			January 5, 2011 at 8:46 AM</a>		</div>

		<p>This code does not work for non-unique set of characters. But works for unique set of characters.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2698#respond" onclick='return addComment.moveForm("div-comment-2698", "2698", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment even depth-2" id="comment-2907">
				<div id="div-comment-2907" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">anom</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-2907">
			January 22, 2011 at 11:18 AM</a>		</div>

		<p>You are assuming the string contains no dup chars. However, your sample string has two 'l's. Your own sample doesn't work.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=2907#respond" onclick='return addComment.moveForm("div-comment-2907", "2907", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment byuser comment-author-sandeep odd alt thread-even depth-1" id="comment-571">
				<div id="div-comment-571" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Sandeep</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-571">
			March 21, 2010 at 10:34 PM</a>		</div>

		<p>@amit: The diagram shows recursive execution of permute().</p>
<p><strong>For i = 0 and j = 0</strong><br>
A is fixed at first place using below line
</p><div><div id="highlighter_754582" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">swap((a+i), (a+j)) </code><code class="cpp comments">/*A is swapped with A*/</code></div></div></td></tr></tbody></table></div></div>
<p>Then all the permutations of BC (sub-string after A) are printed
</p><div><div id="highlighter_988829" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">permute(a, i+1, n);&nbsp; </code><code class="cpp comments">/*Call permute for BC&nbsp; with i = 1&nbsp; */</code></div></div></td></tr></tbody></table></div></div>
<p>Finally swap the characters back
</p><div><div id="highlighter_536277" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">swap((a+i), (a+j)) </code><code class="cpp comments">/*A is swapped with A*/</code></div></div></td></tr></tbody></table></div></div>
<p><strong><br>
For i = 0 and j = 1</strong><br>
B is fixed at first place using below line
</p><div><div id="highlighter_749711" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">swap((a+i), (a+j)) </code><code class="cpp comments">/*A is swapped with B*/</code></div></div></td></tr></tbody></table></div></div>
<p>Then all the permutations of BC (sub-string after A) are printed
</p><div><div id="highlighter_458212" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">permute(a, i+1, n);&nbsp; </code><code class="cpp comments">/*Call permute for AC&nbsp; with i = 1 */</code></div></div></td></tr></tbody></table></div></div>
<p>Finally, swap the characters back
</p><div><div id="highlighter_313006" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">swap((a+i), (a+j)) </code><code class="cpp comments">/*B is swapped with A*/</code></div></div></td></tr></tbody></table></div></div>
<p><strong><br>
For i = 0 and j = 2</strong><br>
C is fixed at first place using below line
</p><div><div id="highlighter_638039" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">swap((a+i), (a+j)) </code><code class="cpp comments">/*A is swapped with C*/</code></div></div></td></tr></tbody></table></div></div>
<p>Then all the permutations of BC (sub-string after A) are printed
</p><div><div id="highlighter_473912" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">permute(a, i+1, n);&nbsp; </code><code class="cpp comments">/*Call permute for BA with i = 1 */</code></div></div></td></tr></tbody></table></div></div>
<p>Finally, swap the characters back
</p><div><div id="highlighter_195077" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp plain">swap((a+i), (a+j)) </code><code class="cpp comments">/*C is swapped with A*/</code></div></div></td></tr></tbody></table></div></div>
<p>For  i  = 1, second character is swapped one by one with the other 
characters (after second character).  Same way is continued for i = 2, 
3..</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=571#respond" onclick='return addComment.moveForm("div-comment-571", "571", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-566">
				<div id="div-comment-566" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">amit</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-566">
			March 20, 2010 at 7:17 PM</a>		</div>

		<p>@geeksforgeeks<br>
can u explan how this code works.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=566#respond" onclick='return addComment.moveForm("div-comment-566", "566", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-even depth-1" id="comment-398">
				<div id="div-comment-398" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Ved</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-398">
			January 26, 2010 at 7:15 PM</a>		</div>

		<p>The complete code is at :<br>
http://techpuzzl.wordpress.com/2010/01/11/string-permutation/</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=398#respond" onclick='return addComment.moveForm("div-comment-398", "398", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-219">
				<div id="div-comment-219" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://srini156.blogspot.com/" rel="external nofollow" class="url">Srinivas Iyengar</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-219">
			November 15, 2009 at 11:17 PM</a>		</div>

		<p>Ok.<br>
We can call this function like perm("",s) where s is the string which has to be permuted.<br>
I am not sure how to highlight the code in the Comment Section. I hope the code is readable enough.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=219#respond" onclick='return addComment.moveForm("div-comment-219", "219", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt thread-even depth-1" id="comment-218">
				<div id="div-comment-218" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">geeksforgeeks</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-218">
			November 15, 2009 at 11:11 PM</a>		</div>

		<p>@Srinivas Iyengar: Could you add more colors to the code given 
below, please?  What should be prefix and suffix for the first call of 
permute() in main()?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=218#respond" onclick='return addComment.moveForm("div-comment-218", "218", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1" id="comment-100">
				<div id="div-comment-100" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://srini156.blogspot.com/" rel="external nofollow" class="url">Srinivas Iyengar</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-100">
			September 8, 2009 at 11:07 AM</a>		</div>

		<div><div id="highlighter_141617" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/*Similar Recursive Code for Permutation of a String keeping track of </code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">prefix and suffix*/</code></div><div class="line number3 index2 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">permute(string prefix,string suffix)</code></div><div class="line number4 index3 alt1"><code class="cpp plain">{</code></div><div class="line number5 index4 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* We can print prefix here for generating power set and simply </code></div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">write return in the following if case.*/</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(suffix.size()==0)</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%s \n"</code><code class="cpp plain">, prefix);</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=0;i &lt; suffix.size();i++)</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">permute(</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">prefix+suffix[i],</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">suffix.substr(0,i)+suffix.</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">substr(i+1, suffix.size())</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">);</code></div><div class="line number16 index15 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/?replytocom=100#respond" onclick='return addComment.moveForm("div-comment-100", "100", "respond", "767")'>Reply</a>		</div>
				</div>
		</li>
				</ol>						
				
				<span class="left"></span>
				<span class="right"></span>
				<div class="clear"></div>
			</div>
				</div>
		
				
		<div class="form" id="respond">

			<h3 class="respond">Comment</h3>
			<div id="cancel-comment-reply"><a rel="nofollow" id="cancel-comment-reply-link" href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#respond" style="display:none;">Click here to cancel reply.</a></div>

			
		    <form action="http://www.geeksforgeeks.org/wp-comments-post.php" method="post" id="commentform">
				
									
					<div>
						<label for="author">Name (<em>Required</em>)</label>	
						<input name="author" id="author" tabindex="1" type="text">			
				
						<label for="email">Email (<em>Required</em>)</label> 
						<input name="email" id="email" tabindex="2" type="text">
	
						<label for="url">Website URI</label>
						<input name="url" id="url" tabindex="3" type="text">
		<label for="comment"> <b>Your Comment (Writing code? please paste your code between sourcecode tags)</b></label>
						<textarea id="comment" name="comment" tabindex="4" rows="10" cols="50">


[sourcecode language="C"]
/* Paste your code here (You may delete these lines if not writing code) */
[/sourcecode]</textarea>
					</div>

				
				<div class="clear"></div>

			<!-- BEGIN: subscribe to comments reloaded --><p><label for="subscribe-reloaded"><input style="width:30px" name="subscribe-reloaded" id="subscribe-reloaded" value="yes" checked="checked" type="checkbox"> Notify me of followup comments via e-mail. You can also <a href="http://www.geeksforgeeks.org/comment-subscriptions?srp=767&amp;sra=s">subscribe</a> without commenting.</label></p><!-- END: subscribe to comments reloaded -->				<div class="submit">
					<div></div>
					<div><input name="comment_post_ID" value="767" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">
</div>
				</div>

				<div class="ajax">
					<div id="postStatus"></div>				
					<div id="commentStatus"></div>				
				<!--<div><input type="hidden" name="comment_post_ID" value="" /></div>-->
				</div>

				<div class="clear"></div>
				<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="29e3ab3b9a" type="hidden"></p>                <script type="text/javascript">
                    var RecaptchaOptions = { theme : 'red', lang : 'en' , tabindex : 5 };
                </script><script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/challenge"></script><script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/recaptcha_1-4b27fabf_9cc6f81f_8eda0965_32d566a6_105bdf84.js"></script><div class=" recaptcha_nothad_incorrect_sol recaptcha_isnot_showing_audio" id="recaptcha_widget_div" style=""></div><script>Recaptcha.widget = Recaptcha.$("recaptcha_widget_div"); Recaptcha.challenge_callback();</script>

	<noscript>
  		<iframe src="http://www.google.com/recaptcha/api/noscript?k=6Ld-1LoSAAAAANFVCVn56wWBdJTPsADwnMKI6rMi" height="300" width="500" frameborder="0"></iframe><br/>
  		<textarea name="recaptcha_challenge_field" rows="3" cols="40"></textarea>
  		<input type="hidden" name="recaptcha_response_field" value="manual_challenge"/>
	</noscript>                        <div id="recaptcha-submit-btn-area">&nbsp;<input name="submit" id="submit" tabindex="6" value="Have Your Say" type="submit"></div>
                        <noscript>
                         <style type='text/css'>#submit {display:none;}</style>
                         <input name="submit" type="submit" id="submit-alt" tabindex="6" value="Submit Comment"/> 
                        </noscript>
			<input value="1370108840 178.32.31.171" name="bb2_screener_" type="hidden"></form>

		</div> <!-- end form -->
		
				    	  </div> <!-- end comments -->			</div>
	
					
			
			

		</div> <!-- end post -->	

<br><br>
	
				

</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><div id="cse" style="width: 100%;"><div class="gsc-control-cse gsc-control-cse-en"><div dir="ltr" class="gsc-control-wrapper-cse"><form accept-charset="utf-8" class="gsc-search-box"><table class="gsc-search-box" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-input"><input style="outline: medium none; background: url(&quot;http://www.google.com/cse/intl/en/images/google_custom_search_watermark.gif&quot;) no-repeat scroll left center rgb(255, 255, 255);" spellcheck="false" dir="ltr" id="gsc-i-id1" title="search" name="search" class=" gsc-input" size="10" autocomplete="off" type="text"></td><td class="gsc-search-button"><input title="search" class="gsc-search-button" value="Search" type="button"></td><td class="gsc-clear-button"><div title="clear results" class="gsc-clear-button">&nbsp;</div></td></tr></tbody></table><table class="gsc-branding" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-branding-user-defined"></td><td class="gsc-branding-text"><div class="gsc-branding-text">powered by</div></td><td class="gsc-branding-img"><img class="gsc-branding-img" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/small-logo.png"></td></tr></tbody></table></form><div class="gsc-results-wrapper-nooverlay"><div class="gsc-tabsAreaInvisible"><div class="gsc-tabHeader gsc-inline-block gsc-tabhActive">Custom Search</div><span class="gs-spacer"> </span></div><div class="gsc-tabsAreaInvisible"></div><div class="gsc-above-wrapper-area-invisible"><table class="gsc-above-wrapper-area-container" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-result-info-container"><div class="gsc-result-info-invisible"></div></td></tr></tbody></table></div><div class="gsc-adBlockInvisible"></div><div class="gsc-wrapper"><div class="gsc-adBlockInvisible"></div><div class="gsc-resultsbox-invisible"><div class="gsc-resultsRoot gsc-tabData gsc-tabdActive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Web</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div></div></div></div></div></div></div>
<script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/jsapi" type="text/javascript"></script>
<script type="text/javascript">
  google.load('search', '1', {language : 'en', style : google.loader.themes.GREENSKY});
  google.setOnLoadCallback(function() {
    var customSearchControl = new google.search.CustomSearchControl('010463773075615557214:qy5dkn-osd8');
    customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);
    customSearchControl.draw('cse');
  }, true);
</script><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/a_002" type="text/javascript"></script><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/defaulten.css" type="text/css" rel="stylesheet"><link href="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/greensky.css" type="text/css" rel="stylesheet"><script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/defaulten.js" type="text/javascript"></script>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    

</div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/tag/interview-experience">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide &amp; Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/graph">Graph</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Java">Java</a></li>
</ul>
</div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/likebox.htm" style="border:none; overflow:hidden; width:240px; height:200px;" allowtransparency="true" frameborder="0" scrolling="no"></iframe></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "ca-pub-9465609616171866";
/* Mediam Rectange */
google_ad_slot = "7922198189";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><ins id="aswift_1_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;" frameborder="0" height="250" scrolling="no" width="300"></iframe></ins></ins></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/archives/767">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/archives/14268"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/840"> Understanding âexternâ keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/2105">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/6358"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/archives/9705"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/2405"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/1029"> Lowest Common Ancestor in a BST.</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/3042"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/17063"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "ca-pub-9465609616171866";
/* Wide Skyscrapper Sidebar */
google_ad_slot = "8695472116";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><ins id="aswift_2_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;" frameborder="0" height="600" scrolling="no" width="160"></iframe></ins></ins></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><!-- TWITTER BUTTON-->
<iframe data-twttr-rendered="true" title="Twitter Follow Button" style="width: 253px; height: 20px;" class="twitter-follow-button twitter-follow-button" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/follow_button.htm" allowtransparency="true" frameborder="0" scrolling="no"></iframe>
<script src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/widgets.js" type="text/javascript"></script>

         <!-- Place this tag in your head or just before your close body tag -->
         <script gapi_processed="true" type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/plusone.js"></script>
         <!-- Place this tag where you want the +1 button to render -->
         <div id="___plusone_1" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 106px; height: 24px;"><iframe title="+1" data-gapiattached="true" allowtransparency="true" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/fastbutton_002.htm" name="I0_1370542391388" id="I0_1370542391388" vspace="0" tabindex="0" style="position: static; top: 0px; width: 106px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 24px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/feed-icon32x32.png" alt="" style="border:0"></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="recent-comments-2" class="widget widget_recent_comments"><h2 class="widgettitle">Recent Comments</h2>
<ul id="recentcomments"><li class="recentcomments">GeeksforGeeks on <a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-19027">Write a C program to print all permutations of a given string</a></li><li class="recentcomments">Arulmozhi on <a href="http://www.geeksforgeeks.org/sort-elements-by-frequency-set-2/#comment-19025">Sort elements by frequency | Set 2</a></li><li class="recentcomments">me.abhinav on <a href="http://www.geeksforgeeks.org/dynamic-programming-set-31-optimal-strategy-for-a-game/#comment-19024">Dynamic Programming | Set 31 (Optimal Strategy for a Game)</a></li><li class="recentcomments">GeeksforGeeks on <a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/#comment-19023">Median of two sorted arrays</a></li><li class="recentcomments">GeeksforGeeks on <a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/#comment-19022">Median of two sorted arrays</a></li><li class="recentcomments">coder on <a href="http://www.geeksforgeeks.org/adobe-interview-experience/#comment-19021">Adobe Interview Experience</a></li><li class="recentcomments">Soumya on <a href="http://www.geeksforgeeks.org/median-of-two-sorted-arrays/#comment-19018">Median of two sorted arrays</a></li><li class="recentcomments">mahesh on <a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/#comment-19017">Write a C program to print all permutations of a given string</a></li></ul></li>

</ul>	
				  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org/">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		<!--[if !lte IE 8]><!--> 
<!--<![endif]--> 
                <script type="text/javascript">
                var sub = document.getElementById('submit');
                document.getElementById('recaptcha-submit-btn-area').appendChild (sub);
                document.getElementById('submit').tabIndex = 6;
                if ( typeof _recaptcha_wordpress_savedcomment != 'undefined') {
                        document.getElementById('comment').value = _recaptcha_wordpress_savedcomment;
                }
                document.getElementById('recaptcha_table').style.direction = 'ltr';
                </script><script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shBrushCpp.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shBrushJava.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shBrushPhp.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/social.js"></script>
<script type="text/javascript" src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/in.js"></script>
<!-- Facebook Comments for WordPress: http://3doordigital.com/wordpress/plugins/facebook-comments/ -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=308017392649785";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
				  
		</div> <!--end wrapper-->
        
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
	




<div class=" fb_reset" id="fb-root"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/xd_arbiter.htm" style="border: medium none;" tab-index="-1" title="Facebook Cross Domain Communication Frame" aria-hidden="true" id="fb_xdm_frame_http" allowtransparency="true" name="fb_xdm_frame_http" frameborder="0" scrolling="no"></iframe><iframe src="Write%20a%20C%20program%20to%20print%20all%20permutations%20of%20a%20given%20string%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/xd_arbiter_002.htm" style="border: medium none;" tab-index="-1" title="Facebook Cross Domain Communication Frame" aria-hidden="true" id="fb_xdm_frame_https" allowtransparency="true" name="fb_xdm_frame_https" frameborder="0" scrolling="no"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div><table class="gstl_0 gssb_c" style="width: 215px; display: none; top: 171px; left: 702px; position: absolute;" cellpadding="0" cellspacing="0"><tbody><tr><td class="gssb_f"></td><td style="width: 100%;" class="gssb_e"></td></tr></tbody></table></body></html>
<!-- Dynamic page generated in 2.657 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2013-06-01 23:17:22 -->
<!-- super cache -->