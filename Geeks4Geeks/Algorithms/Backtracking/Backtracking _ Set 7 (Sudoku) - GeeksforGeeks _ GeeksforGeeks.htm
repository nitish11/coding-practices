<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head>
        <meta name="verify-v1" content="Qq4cneB3rmao09eEEtLOJX2rw+5ZMdf8/CiGxO9IulU=">
        <meta name="y_key" content="79a87047956c2ff1">       
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="generator" content="WordPress 3.5.1">

        <title>Backtracking | Set 7 (Sudoku) - GeeksforGeeks | GeeksforGeeks</title>
   
       <style type="text/css" media="screen">
          @import url('http://www.geeksforgeeks.org/wp-content/themes/minimoo/style.css');
    </style>
    <link rel="alternate" type="application/rss+xml" title="RSS 2.0" href="http://www.geeksforgeeks.org/feed/rss/">
    <link rel="alternate" type="application/rss+xml" title="RSS 0.92" href="http://www.geeksforgeeks.org/feed/">
    <link rel="alternate" type="application/rss+xml" title="Atom" href="http://www.geeksforgeeks.org/feed/atom/">
    <link rel="alternate" type="application/rss+xml" title="RSS 2.0 comments feed" href="http://www.geeksforgeeks.org/comments/feed/">   
    <link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php">
    <link href="http://www.geeksforgeeks.org/wp-content/themes/minimoo/favicon.ico" rel="shortcut icon">      
     <script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/client.js" async="" type="text/javascript" id="LR1"></script><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/all.js" id="facebook-jssdk"></script><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/widgets.js" id="twitter-wjs"></script><script gapi_processed="true" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/plusone.js" async="" type="text/javascript"></script><script async="" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/cbgapi.loaded_0"></script><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/ga.js" async="" type="text/javascript"></script><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/mootools_core.js" type="text/javascript"></script>
     <script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/mootools_more.js" type="text/javascript"></script>
   
    <script type="text/javascript">
        //if (document.images) {
        //    var preload_image = new Image(32,32);
        //    preload_image.src = "http://www.geeksforgeeks.org/wp-content/themes/minimoo/js/ajax-loader.gif";
        //}   
       
        var comments_per_page = 50;
        var comment_order = 'desc';
        var default_comments_page = 'newest';
    </script>
   
     <script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/main.js" type="text/javascript"></script>
   
       
    	 <!--[if lte IE 8]>
<div id="fb-root" style="width: 90;"></div> 
 
<!--<![endif]-->

<!-- This site is optimized with the Yoast WordPress SEO plugin v1.4.7 - http://yoast.com/wordpress/seo/ -->
<link rel="canonical" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Backtracking | Set 7 (Sudoku) - GeeksforGeeks">
<meta property="og:url" content="http://www.geeksforgeeks.org/backtracking-set-7-suduku/">
<meta property="og:site_name" content="GeeksforGeeks">
<meta property="og:image" content="http://www.geeksforgeeks.org/wp-content/uploads/suduku.png">
<!-- / Yoast WordPress SEO plugin. -->


            <script type="text/javascript">//<![CDATA[
            // Google Analytics for WordPress by Yoast v4.3.3 | http://yoast.com/wordpress/google-analytics/
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', 'UA-12148232-1']);
				            _gaq.push(['_trackPageview']);
            (function () {
                var ga = document.createElement('script');
                ga.type = 'text/javascript';
                ga.async = true;
                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';

                var s = document.getElementsByTagName('script')[0];
                s.parentNode.insertBefore(ga, s);
            })();
            //]]></script>
			<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks Â» Backtracking | Set 7 (Sudoku) Comments Feed" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/feed/">
<link rel="stylesheet" id="bbp-default-bbpress-css" href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/bbpress.css" type="text/css" media="screen">
<link rel="stylesheet" id="jamie_social-css" href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/social.css" type="text/css" media="all">
<link rel="stylesheet" id="wp-pagenavi-css" href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/pagenavi-css.css" type="text/css" media="all">
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/comment-reply.js"></script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/jquery.js"></script>
<script type="text/javascript">try{jQuery.noConflict();}catch(e){};</script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/all_002.js"></script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/googletracking.js"></script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/head_twitterlinkedin.js"></script><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/widgets.js" async="" type="text/javascript"></script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/wp-quicklatex-frontend.js"></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.geeksforgeeks.org/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.geeksforgeeks.org/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 3.5.1">
<link rel="shortlink" href="http://www.geeksforgeeks.org/?p=13779">

<!-- Bad Behavior 2.2.14 run time: 2.406 ms -->
<script type="text/javascript">
<!--
function bb2_addLoadEvent(func) {
	var oldonload = window.onload;
	if (typeof window.onload != 'function') {
		window.onload = func;
	} else {
		window.onload = function() {
			oldonload();
			func();
		}
	}
}

bb2_addLoadEvent(function() {
	for ( i=0; i < document.forms.length; i++ ) {
		if (document.forms[i].method == 'post') {
			var myElement = document.createElement('input');
			myElement.setAttribute('type', 'hidden');
			myElement.name = 'bb2_screener_';
			myElement.value = '1370017715 107.197.172.155';
			document.forms[i].appendChild(myElement);
		}
	}
});
// --></script>
		
		<script type="text/javascript">
			/* <![CDATA[ */
			
						jQuery(document).ready( function() {

				/* Use backticks instead of <code> for the Code button in the editor */
				if ( typeof( edButtons ) !== 'undefined' ) {
					edButtons[110] = new QTags.TagButton( 'code', 'code', '`', '`', 'c' );
					QTags._buttonsInit();
				}

				/* Tab from topic title */
				jQuery( '#bbp_topic_title' ).bind( 'keydown.editor-focus', function(e) {
					if ( e.which !== 9 )
						return;

					if ( !e.ctrlKey && !e.altKey && !e.shiftKey ) {
						if ( typeof( tinymce ) !== 'undefined' ) {
							if ( ! tinymce.activeEditor.isHidden() ) {
								var editor = tinymce.activeEditor.editorContainer;
								jQuery( '#' + editor + ' td.mceToolbar > a' ).focus();
							} else {
								jQuery( 'textarea.bbp-the-content' ).focus();
							}
						} else {
							jQuery( 'textarea.bbp-the-content' ).focus();
						}

						e.preventDefault();
					}
				});

				/* Shift + tab from topic tags */
				jQuery( '#bbp_topic_tags' ).bind( 'keydown.editor-focus', function(e) {
					if ( e.which !== 9 )
						return;

					if ( e.shiftKey && !e.ctrlKey && !e.altKey ) {
						if ( typeof( tinymce ) !== 'undefined' ) {
							if ( ! tinymce.activeEditor.isHidden() ) {
								var editor = tinymce.activeEditor.editorContainer;
								jQuery( '#' + editor + ' td.mceToolbar > a' ).focus();
							} else {
								jQuery( 'textarea.bbp-the-content' ).focus();
							}
						} else {
							jQuery( 'textarea.bbp-the-content' ).focus();
						}

						e.preventDefault();
					}
				});
			});
						/* ]]> */
		</script>

	<meta property="fb:app_id" content="308017392649785">
<meta property="fb:admins" content="100002858089465,678632134">
<style type="text/css">
	div.wpld_pr {
		font-size: 6pt;
		color: #000000;
		float: left;
		height: 30px;
		margin-right: 5px;
	}
	div.wpld_prg {
		width: 40px;
		border: 1px solid #999999;
		height: 3px;
		font-size: 1px;
	}
	div.wpld_prb {
		background: #5eaa5e;
		height: 3px;
		font-size: 1px;
	}
	.wpld_panel {
		padding:6px;
		background:#ddd;
		border:1px solid black;
	}
	/* All pages are, or will become, encloded in <span>s of this class */
	.wpld_page{
		/* background: #FDEEF4;
		border: 1px dashed #505050;
		font: 12px arial; */
	}
	/* The links including link title, description and pagerank icon */
	.wpld_links{
	}
	.wpld_premium_links{
		border: 1px dashed #000;
		background-color:#FFFF99;
		font: 14px arial;
	}
	/* The navbar which shows these links: Home | Add URL | Link To Us | Search */
	.wpld_navbar {
	}
</style><link rel="stylesheet" type="text/css" href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/recaptcha.css">	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
<link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shThemeDefault.css" type="text/css" rel="stylesheet"><style type="text/css" id="syntaxhighlighteranchor"></style>
   
<style type="text/css">.recaptchatable td img{display:block}.recaptchatable .recaptcha_r1_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') 0 -63px no-repeat;width:318px;height:9px}.recaptchatable .recaptcha_r2_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -18px 0 no-repeat;width:9px;height:57px}.recaptchatable .recaptcha_r2_c2{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -27px 0 no-repeat;width:9px;height:57px}.recaptchatable .recaptcha_r3_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') 0 0 no-repeat;width:9px;height:63px}.recaptchatable .recaptcha_r3_c2{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -18px -57px no-repeat;width:300px;height:6px}.recaptchatable .recaptcha_r3_c3{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -9px 0 no-repeat;width:9px;height:63px}.recaptchatable .recaptcha_r4_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -43px 0 no-repeat;width:171px;height:49px}.recaptchatable .recaptcha_r4_c2{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -36px 0 no-repeat;width:7px;height:57px}.recaptchatable .recaptcha_r4_c4{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -214px 0 no-repeat;width:97px;height:57px}.recaptchatable .recaptcha_r7_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -43px -49px no-repeat;width:171px;height:8px}.recaptchatable .recaptcha_r8_c1{background:url('http://www.google.com/recaptcha/api/img/red/sprite.png') -43px -49px no-repeat;width:25px;height:8px}.recaptchatable .recaptcha_image_cell center img{height:57px}.recaptchatable .recaptcha_image_cell center{height:57px}.recaptchatable .recaptcha_image_cell{background-color:white;height:57px}#recaptcha_area,#recaptcha_table{width:318px!important}.recaptchatable,#recaptcha_area tr,#recaptcha_area td,#recaptcha_area th{margin:0!important;border:0!important;padding:0!important;border-collapse:collapse!important;vertical-align:middle!important}.recaptchatable *{margin:0;padding:0;border:0;font-family:helvetica,sans-serif;font-size:8pt;color:black;position:static;top:auto;left:auto;right:auto;bottom:auto}.recaptchatable #recaptcha_image{margin:auto}.recaptchatable img{border:0!important;margin:0!important;padding:0!important}.recaptchatable a,.recaptchatable a:hover{cursor:pointer;outline:none;border:0!important;padding:0!important;text-decoration:none;color:blue;background:none!important;font-weight:normal}.recaptcha_input_area{position:relative!important;width:153px!important;height:45px!important;margin-left:7px!important;margin-right:7px!important;background:none!important}.recaptchatable label.recaptcha_input_area_text{margin:0!important;padding:0!important;position:static!important;top:auto!important;left:auto!important;right:auto!important;bottom:auto!important;background:none!important;height:auto!important;width:auto!important}.recaptcha_theme_red label.recaptcha_input_area_text,.recaptcha_theme_white label.recaptcha_input_area_text{color:black!important}.recaptcha_theme_blackglass label.recaptcha_input_area_text{color:white!important}.recaptchatable #recaptcha_response_field{width:153px!important;position:relative!important;bottom:7px!important;padding:0!important;margin:15px 0 0 0!important;font-size:10pt}.recaptcha_theme_blackglass #recaptcha_response_field,.recaptcha_theme_white #recaptcha_response_field{border:1px solid gray}.recaptcha_theme_red #recaptcha_response_field{border:1px solid #cca940}.recaptcha_audio_cant_hear_link{font-size:7pt;color:black}#recaptcha_instructions_error{color:red!important}.recaptcha_only_if_privacy{float:right;text-align:right}

.recaptcha_is_showing_audio .recaptcha_only_if_image,.recaptcha_isnot_showing_audio .recaptcha_only_if_audio,.recaptcha_had_incorrect_sol .recaptcha_only_if_no_incorrect_sol,.recaptcha_nothad_incorrect_sol .recaptcha_only_if_incorrect_sol{display:none !important}</style><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/nonSecureAnonymousFramework"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}
.fb_invisible{display:none}
.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}
.fb_reset > div{overflow:hidden}
.fb_link img{border:none}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}
.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}
.fb_dialog_content{background:#fff;color:#333}
.fb_dialog_close_icon{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px;top:8px\9;right:7px\9}
.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}
.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}
.fb_dialog_close_icon:hover{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_close_icon:active{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(http://static.ak.fbcdn.net/rsrc.php/v2/yL/r/s816eWC-2sl.gif)}
.fb_dialog_loader{background-color:#f2f2f2;border:1px solid #606060;font-size:24px;padding:20px}
.fb_dialog_top_left,
.fb_dialog_top_right,
.fb_dialog_bottom_left,
.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}
/* @noflip */
.fb_dialog_top_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}
/* @noflip */
.fb_dialog_top_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}
/* @noflip */
.fb_dialog_bottom_left{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}
/* @noflip */
.fb_dialog_bottom_right{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}
.fb_dialog_vert_left,
.fb_dialog_vert_right,
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}
.fb_dialog_vert_left,
.fb_dialog_vert_right{width:10px;height:100%}
.fb_dialog_vert_left{margin-left:-10px}
.fb_dialog_vert_right{right:0;margin-right:-10px}
.fb_dialog_horiz_top,
.fb_dialog_horiz_bottom{width:100%;height:10px}
.fb_dialog_horiz_top{margin-top:-10px}
.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}
.fb_dialog_iframe{line-height:0}
.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #3b5998;color:#fff;font-size:14px;font-weight:bold;margin:0}
.fb_dialog_content .dialog_title > span{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/yd/r/Cou7n-nqK52.gif)
no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}
body.fb_hidden{-webkit-transform:none;height:100%;margin:0;left:-10000px;overflow:visible;position:absolute;top:-10000px;width:100%
}
.fb_dialog.fb_dialog_mobile.loading{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/ya/r/3rhSv5V8j3o.gif)
white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}
.fb_dialog.fb_dialog_mobile.loading.centered{max-height:590px;min-height:590px;max-width:500px;min-width:500px}
#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;left:0;top:0;width:100%;min-height:100%;z-index:10000}
#fb-root #fb_dialog_ipad_overlay.hidden{display:none}
.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}
.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0 0, 0 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}
.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%
}
.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px
}
.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0 0, 0 100%, from(#4966A6),
color-stop(0.5, #355492), to(#2A4887));border:1px solid #29447e;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset,
rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}
.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}
.fb_dialog_content .dialog_content{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}
.fb_dialog_content .dialog_footer{background:#f2f2f2;border:1px solid #555;border-top-color:#ccc;height:40px}
#fb_dialog_loader_close{float:left}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}
.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}
.fb_iframe_widget{display:inline-block;position:relative}
.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}
.fb_iframe_widget iframe{position:absolute}
.fb_iframe_widget_lift{z-index:1}
.fb_hide_iframes iframe{position:relative;left:-10000px}
.fb_iframe_widget_loader{position:relative;display:inline-block}
.fb_iframe_widget_fluid{display:inline}
.fb_iframe_widget_fluid span{width:100%}
.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}
.fb_iframe_widget_loader .FB_Loader{background:url(http://static.ak.fbcdn.net/rsrc.php/v2/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}
.fb_connect_bar_container div,
.fb_connect_bar_container span,
.fb_connect_bar_container a,
.fb_connect_bar_container img,
.fb_connect_bar_container strong{background:none;border-spacing:0;border:0;direction:ltr;font-style:normal;font-variant:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal;vertical-align:baseline}
.fb_connect_bar_container{position:fixed;left:0 !important;right:0 !important;height:42px !important;padding:0 25px !important;margin:0 !important;vertical-align:middle !important;border-bottom:1px solid #333 !important;background:#3b5998 !important;z-index:99999999 !important;overflow:hidden !important}
.fb_connect_bar_container_ie6{position:absolute;top:expression(document.compatMode=="CSS1Compat"? document.documentElement.scrollTop+"px":body.scrollTop+"px")}
.fb_connect_bar{position:relative;margin:auto;height:100%;width:100%;padding:6px 0 0 0 !important;background:none;color:#fff !important;font-family:"lucida grande", tahoma, verdana, arial, sans-serif !important;font-size:13px !important;font-style:normal !important;font-variant:normal !important;font-weight:normal !important;letter-spacing:normal !important;line-height:1 !important;text-decoration:none !important;text-indent:0 !important;text-shadow:none !important;text-transform:none !important;white-space:normal !important;word-spacing:normal !important}
.fb_connect_bar a:hover{color:#fff}
.fb_connect_bar .fb_profile img{height:30px;width:30px;vertical-align:middle;margin:0 6px 5px 0}
.fb_connect_bar div a,
.fb_connect_bar span,
.fb_connect_bar span a{color:#bac6da;font-size:11px;text-decoration:none}
.fb_connect_bar .fb_buttons{float:right;margin-top:7px}
.fb_edge_widget_with_comment{position:relative;*z-index:1000}
.fb_edge_widget_with_comment span.fb_edge_comment_widget{position:absolute}
.fb_edge_widget_with_comment span.fb_send_button_form_widget{z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget .FB_Loader{left:0;top:1px;margin-top:6px;margin-left:0;background-position:50% 50%;background-color:#fff;height:150px;width:394px;border:1px #666 solid;border-bottom:2px solid #283e6c;z-index:1}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.dark .FB_Loader{background-color:#000;border-bottom:2px solid #ccc}
.fb_edge_widget_with_comment span.fb_send_button_form_widget.siderender
.FB_Loader{margin-top:0}
.fbpluginrecommendationsbarleft,
.fbpluginrecommendationsbarright{position:fixed !important;bottom:0;z-index:999}
/* @noflip */
.fbpluginrecommendationsbarleft{left:10px}
/* @noflip */
.fbpluginrecommendationsbarright{right:10px}</style><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/a" type="text/javascript"></script><style type="text/css">.gssb_c{border:0;position:absolute;z-index:989}.gssb_e{border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);cursor:default}.gssb_f{visibility:hidden;white-space:nowrap}.gssb_k{border:0;display:block;position:absolute;top:0;z-index:988}.gsdd_a{border:none!important}.gsib_a{width:100%;padding:4px 6px 0}.gsib_a,.gsib_b{vertical-align:top}.gssb_a{padding:0 7px}.gssb_a,.gssb_a td{white-space:nowrap;overflow:hidden;line-height:22px}#gssb_b{font-size:11px;color:#36c;text-decoration:none}#gssb_b:hover{font-size:11px;color:#36c;text-decoration:underline}.gssb_g{text-align:center;padding:8px 0 7px;position:relative}.gssb_h{font-size:15px;height:28px;margin:0.2em}.gssb_i{background:#eee}.gss_ifl{visibility:hidden;padding-left:5px}.gssb_i .gss_ifl{visibility:visible}a.gssb_j{font-size:13px;color:#36c;text-decoration:none;line-height:100%}a.gssb_j:hover{text-decoration:underline}.gssb_l{height:1px;background-color:#e5e5e5}.gssb_m{color:#000;background:#fff}.gsq_a{padding:0}.gscsep_a{display:none}.gsfe_a{border:1px solid #b9b9b9;border-top-color:#a0a0a0;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.1);}.gsfe_b{border:1px solid #4d90fe;outline:none;box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-moz-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0px 1px 2px rgba(0,0,0,0.3);}.gscb_a{display:inline-block;font:27px/13px arial,sans-serif}.gsst_a .gscb_a{color:#a1b9ed;cursor:pointer}.gsst_a:hover .gscb_a,.gsst_a:focus .gscb_a{color:#36c}.gsst_a{display:inline-block}.gsst_a{cursor:pointer;padding:0 4px}.gsst_a:hover{text-decoration:none!important}.gsst_b{font-size:16px;padding:0 2px;user-select:none;-moz-user-select:none;white-space:nowrap}.gsst_e{opacity:0.55;}.gsst_a:hover .gsst_e,.gsst_a:focus .gsst_e{opacity:0.72;}.gsst_a:active .gsst_e{opacity:1;}.gsst_f{background:white;text-align:left}.gsst_g{background-color:white;border:1px solid #ccc;border-top-color:#d9d9d9;box-shadow:0 2px 4px rgba(0,0,0,0.2);-moz-box-shadow:0 2px 4px rgba(0,0,0,0.2);margin:-1px -3px;padding:0 6px}.gsst_h{background-color:white;height:1px;margin-bottom:-1px;position:relative;top:-1px}.gssb_a{padding:0 7px}.gssb_e{border:0}.gssb_l{margin:5px 0}.gssb_c .gsc-completion-container{position:static}.gssb_c{z-index:5000}.gsc-completion-container table{background:transparent;font-size:inherit;font-family:inherit}.gssb_c > tbody > tr,.gssb_c > tbody > tr > td,.gssb_d,.gssb_d > tbody > tr,.gssb_d > tbody > tr > td,.gssb_e,.gssb_e > tbody > tr,.gssb_e > tbody > tr > td{padding:0;margin:0;border:0}.gssb_a table,.gssb_a table tr,.gssb_a table tr td{padding:0;margin:0;border:0}</style><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/search.js" type="text/javascript"></script><style type="text/css">* html #li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link{height:1% !important;}#li_ui_li_gen_1370542696321_0{position:relative !important;overflow:visible !important;display:block !important;}#li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link{border:0 !important;height:20px !important;text-decoration:none !important;padding:0 !important;margin:0 !important;display:inline-block !important;}#li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link:link, #li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link:visited, #li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link:hover, #li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link:active{border:0 !important;text-decoration:none !important;}#li_ui_li_gen_1370542696321_0 a#li_ui_li_gen_1370542696321_0-link:after{content:"." !important;display:block !important;clear:both !important;visibility:hidden !important;line-height:0 !important;height:0 !important;}#li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-logo{background:url(http://static.licdn.com/scds/common/u/img/sprite/sprite_connect_v13.png) 0px -276px no-repeat !important;cursor:pointer !important;border:0 !important;text-indent:-9999em !important;overflow:hidden !important;padding:0 !important;margin:0 !important;position:absolute !important;left:0px !important;top:0px !important;display:block !important;width:20px !important;height:20px !important;float:right !important;}#li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-logo{background-position:-20px -276px !important;}#li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-logo, #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-logo{background-position:-40px -276px !important;}.IN-shadowed #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-logo{}#li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title{color:#333 !important;cursor:pointer !important;display:block !important;white-space:nowrap !important;float:left !important;margin-left:1px !important;vertical-align:top !important;overflow:hidden !important;text-align:center !important;height:18px !important;padding:0 4px 0 23px !important;border:1px solid #000 !important;border-top-color:#E2E2E2 !important;border-right-color:#BFBFBF !important;border-bottom-color:#B9B9B9 !important;border-left-color:#E2E2E2 !important;border-left:0 !important;text-shadow:#FFFFFF -1px 1px 0 !important;line-height:20px !important;border-radius:0 !important;-moz-border-radius:0 !important;border-top-right-radius:2px !important;border-bottom-right-radius:2px !important;-moz-border-radius-topright:2px !important;-moz-border-radius-bottomright:2px !important;background-color:#ECECEC !important;background-image:-moz-linear-gradient(top, #FEFEFE 0%, #ECECEC 100%) !important;}#li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title{border:1px solid #000 !important;border-top-color:#ABABAB !important;border-right-color:#9A9A9A !important;border-bottom-color:#787878 !important;border-left-color:#04568B !important;border-left:0 !important;background-color:#EDEDED !important;background-image:-moz-linear-gradient(top, #EDEDED 0%, #DEDEDE 100%) !important;}#li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title, #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title{color:#666 !important;border:1px solid #000 !important;border-top-color:#B6B6B6 !important;border-right-color:#B3B3B3 !important;border-bottom-color:#9D9D9D !important;border-left-color:#49627B !important;border-left:0 !important;background-color:#DEDEDE !important;background-image:-moz-linear-gradient(top, #E3E3E3 0%, #EDEDED 100%) !important;}.IN-shadowed #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title{}.IN-shadowed #li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title{}.IN-shadowed #li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title, .IN-shadowed #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title{}#li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title-text, #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title-text *{color:#333 !important;font-size:11px !important;font-family:Arial, sans-serif !important;font-weight:bold !important;font-style:normal !important;display:inline-block !important;background:transparent none !important;vertical-align:baseline !important;height:18px !important;line-height:20px !important;float:none !important;}#li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title-text strong{font-weight:bold !important;}#li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title-text em{font-style:italic !important;}#li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title-text, #li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title-text *{color:#000 !important;}#li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title-text, #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title-text, #li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title-text *, #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title-text *{color:#666 !important;}#li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title #li_ui_li_gen_1370542696321_0-mark{display:inline-block !important;width:0px !important;overflow:hidden !important;}.success #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title{color:#333 !important;border-top-color:#E2E2E2 !important;border-right-color:#BFBFBF !important;border-bottom-color:#B9B9B9 !important;border-left-color:#E2E2E2 !important;background-color:#ECECEC !important;background-image:-moz-linear-gradient(top, #FEFEFE 0%, #ECECEC 100%) !important;}.success #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title-text, .success #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title-text *{color:#333 !important;}.IN-shadowed .success #li_ui_li_gen_1370542696321_0 #li_ui_li_gen_1370542696321_0-title{}.success #li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title{color:#000 !important;border-top-color:#ABABAB !important;border-right-color:#9A9A9A !important;border-bottom-color:#787878 !important;border-left-color:#04568B !important;background-color:#EDEDED !important;background-image:-moz-linear-gradient(top, #EDEDED 0%, #DEDEDE 100%) !important;}.success #li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title-text, .success #li_ui_li_gen_1370542696321_0.hovered #li_ui_li_gen_1370542696321_0-title-text *{color:#000 !important;}.success #li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title, .success #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title{color:#666 !important;border-top-color:#B6B6B6 !important;border-right-color:#B3B3B3 !important;border-bottom-color:#9D9D9D !important;border-left-color:#49627B !important;background-color:#DEDEDE !important;background-image:-moz-linear-gradient(top, #E3E3E3 0%, #EDEDED 100%) !important;}.success #li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title-text, .success #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title-text, .success #li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title-text *, .success #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title-text *{color:#666 !important;}.IN-shadowed .success #li_ui_li_gen_1370542696321_0.clicked #li_ui_li_gen_1370542696321_0-title, .IN-shadowed .success #li_ui_li_gen_1370542696321_0.down #li_ui_li_gen_1370542696321_0-title{}#li_ui_li_gen_1370542696344_1-container.IN-right {display:inline-block !important;float:left !important;overflow:visible !important;position:relative !important;height:18px !important;padding-left:2px !important;line-height:1px !important;cursor:pointer !important;}#li_ui_li_gen_1370542696344_1.IN-right {display:block !important;float:left !important;height:18px !important;margin-right:4px !important;padding-right:4px !important;background:url(http://static.licdn.com/scds/common/u/img/sprite/sprite_connect_v13.png) right -100px no-repeat !important;}#li_ui_li_gen_1370542696344_1-inner.IN-right {display:block !important;float:left !important;padding-left:8px !important;text-align:center !important;background:url(http://static.licdn.com/scds/common/u/img/sprite/sprite_connect_v13.png) 0px -60px no-repeat !important;}#li_ui_li_gen_1370542696344_1-content.IN-right {display:inline !important;font-size:11px !important;color:#04558B !important;font-weight:bold !important;font-family:Arial, sans-serif !important;line-height:18px !important;padding:0 5px 0 5px !important;}#li_ui_li_gen_1370542696344_1-container.IN-hovered #li_ui_li_gen_1370542696344_1.IN-right, #li_ui_li_gen_1370542696344_1-container.IN-clicked #li_ui_li_gen_1370542696344_1.IN-right, #li_ui_li_gen_1370542696344_1-container.IN-down #li_ui_li_gen_1370542696344_1.IN-right {background-position-y:-120px !important;}#li_ui_li_gen_1370542696344_1-container.IN-hovered #li_ui_li_gen_1370542696344_1-inner.IN-right, #li_ui_li_gen_1370542696344_1-container.IN-clicked #li_ui_li_gen_1370542696344_1-inner.IN-right, #li_ui_li_gen_1370542696344_1-container.IN-down #li_ui_li_gen_1370542696344_1-inner.IN-right {background-position-y:-80px !important;}#li_ui_li_gen_1370542696344_1-container.IN-empty {display:none !important;}#li_ui_li_gen_1370542696344_1-container.IN-hidden #li_ui_li_gen_1370542696344_1 {display:none !important;}</style></head>

<body data-twttr-rendered="true"><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/hub.htm" style="position: absolute; top: -9999em; width: 10px; height: 10px;" name="twttrHubFrameSecure" tabindex="0" allowtransparency="true" id="twttrHubFrameSecure" frameborder="0" scrolling="no"></iframe><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/hub_002.htm" style="position: absolute; top: -9999em; width: 10px; height: 10px;" name="twttrHubFrame" tabindex="0" allowtransparency="true" id="twttrHubFrame" frameborder="0" scrolling="no"></iframe>
<!-- o4dI0sCXUgoSONabbd8mbZ4SA3E -->    
    <div id="wrapper">
        <div class="blog-info">
                <h1 class="blog-title">
                <a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks">GeeksforGeeks</a>
            </h1>
       
            <div class="blog-description">
                A computer science portal for geeks            </div>
        </div>
        <b><p> <br><br> <a rel="nofollow" href="http://www.geeksforgeeks.org/wp-login.php">Log in</a></p></b>  
           <div class="clear"></div>         
              
                     
            <div id="menu">   
                 <ul>
                   <li><a href="http://www.geeksforgeeks.org/">
                              Home</a></li>
                               <li><a href="http://www.geeksforgeeks.org/forums/">Q&amp;A</a></li>
                               <li><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Corner</a></li>
                               <li><a href="http://www.geeksforgeeks.org/contribute/ask-a-question/">Ask a question</a></li>   
            </ul>

            <ul>
                <li class="page_item page-item-9830"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>
<li class="page_item page-item-21638"><a href="http://www.geeksforgeeks.org/gate-corner/">GATE</a></li>
<li class="page_item page-item-24811"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></li>
<li class="page_item page-item-24966"><a href="http://www.geeksforgeeks.org/c/">C</a></li>
<li class="page_item page-item-25749"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>
<li class="page_item page-item-26089"><a href="http://www.geeksforgeeks.org/books/">Books</a></li>
<li class="page_item page-item-2"><a href="http://www.geeksforgeeks.org/about/">About us</a></li>
                             </ul> 
                     
            <div class="rssfeed">
                <!--<a href="http://feeds.feedburner.com/limetouch" title="Subscribe to LimeTouch RSS Feed"><strong>Subscribe</strong></a>-->
                <!--<<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to GeeksforGeeks RSS Feed"><strong>Subscribe</strong></a>-->            
            </div>    
               
            <div class="clear"></div>     
        </div>
             <div id="navmenu">
				<ul id="menu" style="padding:0; margin:0;">
						<li class="cat-item cat-item-3"><a href="http://www.geeksforgeeks.org/category/c-arrays" title="Questions regarding Arrays">Arrays</a>
</li>	

	<li class="cat-item cat-item-17"><a href="http://www.geeksforgeeks.org/category/bit-magic" title="View all posts filed under Bit Magic">Bit Magic</a>
</li>
	<li class="cat-item cat-item-14"><a href="http://www.geeksforgeeks.org/category/c-puzzles" title="View all posts filed under C/C++ Puzzles">C/C++ Puzzles</a>
</li>

<li class="cat-item cat-item-18"><a href="http://www.geeksforgeeks.org/category/articles" title="View all posts filed under Articles">Articles</a>
</li>

	<li class="cat-item cat-item-67"><a href="http://www.geeksforgeeks.org/category/gfact" title="View all posts filed under GFacts">GFacts</a>
</li>
	<li class="cat-item cat-item-8"><a href="http://www.geeksforgeeks.org/category/linked-list" title="Linked List problems">Linked Lists</a>
</li>
	<li class="cat-item cat-item-66"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question" title="View all posts filed under MCQ">MCQ</a>

</li>
	<li class="cat-item cat-item-4"><a href="http://www.geeksforgeeks.org/category/c-programs" title="Miscellaneous">Misc</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://www.geeksforgeeks.org/category/program-output" title="View all posts filed under Output">Output</a>
</li>
	<li class="cat-item cat-item-7"><a href="http://www.geeksforgeeks.org/category/c-strings" title="Questions related to strings">Strings</a>
</li>
	<li class="cat-item cat-item-19"><a href="http://www.geeksforgeeks.org/category/tree" title="View all posts filed under Trees">Trees</a>
</li>
</ul>
        </div>
             <div id="content">	   	
	
	
	<div class="post" id="post">
	
		
			
				
			<div class="post-main" id="post-13779">
		
				<div class="post-info">			
					<div class="post-title-info">
						<h2 class="post-title">Backtracking | Set 7 (Sudoku)</h2>
					</div>
					
					<div class="post-date">July 14, 2012</div>
					<div class="clear"></div>
				</div>
				  
				<div class="post-content" id="post-content">
					<p>Given a partially filled 9Ã9 2D array âgrid[9][9]â, the goal is 
to assign digits (from 1 to 9) to the empty cells so that every row, 
column, and subgrid of size 3Ã3 contains exactly one instance of the 
digits from 1 to 9.  <span id="more-13779"></span></p>
<p><a href="http://www.geeksforgeeks.org/wp-content/uploads/suduku.png"><img src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/suduku.png" alt="" title="suduku" class="aligncenter size-full wp-image-21866" height="230" width="240"></a></p>
<p><strong>Naive Algorithm</strong><br>
The Naive Algorithm is to generate all possible configurations of 
numbers from 1 to 9 to fill the empty cells. Try every configuration one
 by one until the correct configuration is found.</p>
<p><strong>Backtracking Algorithm</strong><br>
Like all other <a href="http://www.geeksforgeeks.org/archives/tag/backtracking">Backtracking problems</a>,
 we can solve Sudoku by one by one assigning numbers to empty cells. 
Before assigning a number, we check whether it is safe to assign. We 
basically check that the same number is not present in current row, 
current column and current 3X3 subgrid. After checking for safety, we 
assign the number, and recursively check whether this assignment leads 
to a solution or not.  If the assignment doesnât lead to a solution, 
then we try next number for current empty cell. And if none of number (1
 to 9) lead to solution, we return false.</p>
<pre>  Find row, col of an unassigned cell
  If there is none, return true
  For digits from 1 to 9
    a) If there is no conflict for digit at row,col
        assign digit to row,col and recursively try fill in rest of grid
    b) If recursion successful, return true
    c) Else, remove digit and try another
  If all digits have been tried and nothing worked, return false
</pre>
<p>Following is C++ implementation for Sudoku problem. It prints the completely filled grid as output.</p>
<div><div id="highlighter_313064" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">// A Backtracking program&nbsp; in C++ to solve Sudoku problem</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="cpp comments">// UNASSIGNED is used for empty cells in sudoku grid</code></div><div class="line number5 index4 alt2"><code class="cpp preprocessor">#define UNASSIGNED 0</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="cpp comments">// N is used for size of Sudoku grid. Size will be NxN</code></div><div class="line number8 index7 alt1"><code class="cpp preprocessor">#define N 9</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="cpp comments">// This function finds an entry in grid that is still unassigned</code></div><div class="line number11 index10 alt2"><code class="cpp color1 bold">bool</code> <code class="cpp plain">FindUnassignedLocation(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">&amp;row, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">&amp;col);</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp comments">// Checks whether it will be legal to assign num to the given row,col</code></div><div class="line number14 index13 alt1"><code class="cpp color1 bold">bool</code> <code class="cpp plain">isSafe(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">row, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">col, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num);</code></div><div class="line number15 index14 alt2">&nbsp;</div><div class="line number16 index15 alt1 highlighted"><code class="cpp comments">/* Takes a partially filled-in grid and attempts to assign values to</code></div><div class="line number17 index16 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">all unassigned locations in such a way to meet the requirements</code></div><div class="line number18 index17 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;</code><code class="cpp comments">for Sudoku solution (non-duplication across rows, columns, and boxes) */</code></div><div class="line number19 index18 alt2 highlighted"><code class="cpp color1 bold">bool</code> <code class="cpp plain">SolveSudoku(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N])</code></div><div class="line number20 index19 alt1 highlighted"><code class="cpp plain">{</code></div><div class="line number21 index20 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row, col;</code></div><div class="line number22 index21 alt1 highlighted">&nbsp;</div><div class="line number23 index22 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// If there is no unassigned location, we are done</code></div><div class="line number24 index23 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(!FindUnassignedLocation(grid, row, col))</code></div><div class="line number25 index24 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">; </code><code class="cpp comments">// success!</code></div><div class="line number26 index25 alt1 highlighted">&nbsp;</div><div class="line number27 index26 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// consider digits 1 to 9</code></div><div class="line number28 index27 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">num = 1; num &lt;= 9; num++)</code></div><div class="line number29 index28 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number30 index29 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// if looks promising</code></div><div class="line number31 index30 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(isSafe(grid, row, col, num))</code></div><div class="line number32 index31 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number33 index32 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// make tentative assignment</code></div><div class="line number34 index33 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">grid[row][col] = num;</code></div><div class="line number35 index34 alt2 highlighted">&nbsp;</div><div class="line number36 index35 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// return, if success, yay!</code></div><div class="line number37 index36 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(SolveSudoku(grid))</code></div><div class="line number38 index37 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number39 index38 alt2 highlighted">&nbsp;</div><div class="line number40 index39 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// failure, unmake &amp; try again</code></div><div class="line number41 index40 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">grid[row][col] = UNASSIGNED;</code></div><div class="line number42 index41 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number43 index42 alt2 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number44 index43 alt1 highlighted"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">; </code><code class="cpp comments">// this triggers backtracking</code></div><div class="line number45 index44 alt2 highlighted"><code class="cpp plain">}</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2"><code class="cpp comments">/* Searches the grid to find an entry that is still unassigned. If</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">found, the reference parameters row, col will be set the location</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">that is unassigned, and true is returned. If no unassigned entries</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">remain, false is returned. */</code></div><div class="line number51 index50 alt2"><code class="cpp color1 bold">bool</code> <code class="cpp plain">FindUnassignedLocation(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">&amp;row, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">&amp;col)</code></div><div class="line number52 index51 alt1"><code class="cpp plain">{</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(row = 0; row &lt; N; row++)</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(col = 0; col &lt; N; col++)</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(grid[row][col] == UNASSIGNED)</code></div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">;</code></div><div class="line number58 index57 alt1"><code class="cpp plain">}</code></div><div class="line number59 index58 alt2">&nbsp;</div><div class="line number60 index59 alt1"><code class="cpp comments">/* Returns a boolean which indicates whether any assigned entry</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">in the specified row matches the given number. */</code></div><div class="line number62 index61 alt1"><code class="cpp color1 bold">bool</code> <code class="cpp plain">UsedInRow(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">row, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num)</code></div><div class="line number63 index62 alt2"><code class="cpp plain">{</code></div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">col = 0; col &lt; N; col++)</code></div><div class="line number65 index64 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(grid[row][col] == num)</code></div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">;</code></div><div class="line number68 index67 alt1"><code class="cpp plain">}</code></div><div class="line number69 index68 alt2">&nbsp;</div><div class="line number70 index69 alt1"><code class="cpp comments">/* Returns a boolean which indicates whether any assigned entry</code></div><div class="line number71 index70 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">in the specified column matches the given number. */</code></div><div class="line number72 index71 alt1"><code class="cpp color1 bold">bool</code> <code class="cpp plain">UsedInCol(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">col, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num)</code></div><div class="line number73 index72 alt2"><code class="cpp plain">{</code></div><div class="line number74 index73 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row = 0; row &lt; N; row++)</code></div><div class="line number75 index74 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(grid[row][col] == num)</code></div><div class="line number76 index75 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number77 index76 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">;</code></div><div class="line number78 index77 alt1"><code class="cpp plain">}</code></div><div class="line number79 index78 alt2">&nbsp;</div><div class="line number80 index79 alt1"><code class="cpp comments">/* Returns a boolean which indicates whether any assigned entry</code></div><div class="line number81 index80 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">within the specified 3x3 box matches the given number. */</code></div><div class="line number82 index81 alt1"><code class="cpp color1 bold">bool</code> <code class="cpp plain">UsedInBox(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">boxStartRow, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">boxStartCol, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num)</code></div><div class="line number83 index82 alt2"><code class="cpp plain">{</code></div><div class="line number84 index83 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row = 0; row &lt; 3; row++)</code></div><div class="line number85 index84 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">col = 0; col &lt; 3; col++)</code></div><div class="line number86 index85 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(grid[row+boxStartRow][col+boxStartCol] == num)</code></div><div class="line number87 index86 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">true</code><code class="cpp plain">;</code></div><div class="line number88 index87 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp keyword bold">false</code><code class="cpp plain">;</code></div><div class="line number89 index88 alt2"><code class="cpp plain">}</code></div><div class="line number90 index89 alt1">&nbsp;</div><div class="line number91 index90 alt2"><code class="cpp comments">/* Returns a boolean which indicates whether it will be legal to assign</code></div><div class="line number92 index91 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">num to the given row,col location. */</code></div><div class="line number93 index92 alt2"><code class="cpp color1 bold">bool</code> <code class="cpp plain">isSafe(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">row, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">col, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">num)</code></div><div class="line number94 index93 alt1"><code class="cpp plain">{</code></div><div class="line number95 index94 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">/* Check if 'num' is not already placed in current row,</code></div><div class="line number96 index95 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">current column and current 3x3 box */</code></div><div class="line number97 index96 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">!UsedInRow(grid, row, num) &amp;&amp;</code></div><div class="line number98 index97 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">!UsedInCol(grid, col, num) &amp;&amp;</code></div><div class="line number99 index98 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">!UsedInBox(grid, row - row%3 , col - col%3, num);</code></div><div class="line number100 index99 alt1"><code class="cpp plain">}</code></div><div class="line number101 index100 alt2">&nbsp;</div><div class="line number102 index101 alt1"><code class="cpp comments">/* A utility function to print grid&nbsp; */</code></div><div class="line number103 index102 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">printGrid(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N])</code></div><div class="line number104 index103 alt1"><code class="cpp plain">{</code></div><div class="line number105 index104 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row = 0; row &lt; N; row++)</code></div><div class="line number106 index105 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number107 index106 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">col = 0; col &lt; N; col++)</code></div><div class="line number108 index107 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%2d"</code><code class="cpp plain">, grid[row][col]);</code></div><div class="line number109 index108 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></div><div class="line number110 index109 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number111 index110 alt2"><code class="cpp plain">}</code></div><div class="line number112 index111 alt1">&nbsp;</div><div class="line number113 index112 alt2"><code class="cpp comments">/* Driver Program to test above functions */</code></div><div class="line number114 index113 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number115 index114 alt2"><code class="cpp plain">{</code></div><div class="line number116 index115 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// 0 means unassigned cells</code></div><div class="line number117 index116 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N] = {{3, 0, 6, 5, 0, 8, 4, 0, 0},</code></div><div class="line number118 index117 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{5, 2, 0, 0, 0, 0, 0, 0, 0},</code></div><div class="line number119 index118 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 8, 7, 0, 0, 0, 0, 3, 1},</code></div><div class="line number120 index119 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 0, 3, 0, 1, 0, 0, 8, 0},</code></div><div class="line number121 index120 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{9, 0, 0, 8, 6, 3, 0, 0, 5},</code></div><div class="line number122 index121 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 5, 0, 0, 9, 0, 6, 0, 0},</code></div><div class="line number123 index122 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{1, 3, 0, 0, 0, 0, 2, 5, 0},</code></div><div class="line number124 index123 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 0, 0, 0, 0, 0, 0, 7, 4},</code></div><div class="line number125 index124 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 0, 5, 2, 0, 6, 3, 0, 0}};</code></div><div class="line number126 index125 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code> <code class="cpp plain">(SolveSudoku(grid) == </code><code class="cpp keyword bold">true</code><code class="cpp plain">)</code></div><div class="line number127 index126 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printGrid(grid);</code></div><div class="line number128 index127 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number129 index128 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"No solution exists"</code><code class="cpp plain">);</code></div><div class="line number130 index129 alt1">&nbsp;</div><div class="line number131 index130 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number132 index131 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>Output:</p>
<pre>  3 1 6 5 7 8 4 9 2
  5 2 9 1 3 4 7 6 8
  4 8 7 6 2 9 5 3 1
  2 6 3 4 1 5 9 8 7
  9 7 4 8 6 3 1 2 5
  8 5 1 7 9 2 6 4 3
  1 3 8 9 4 7 2 5 6
  6 9 2 3 5 1 8 7 4
  7 4 5 2 8 6 3 1 9
</pre>
<p>References:<br>
<a href="http://see.stanford.edu/materials/icspacs106b/H19-RecBacktrackExamples.pdf">http://see.stanford.edu/materials/icspacs106b/H19-RecBacktrackExamples.pdf</a></p>
<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>
		
 <span class="martiniboy_social_list">
<ul class="jamie_social martinileft">
  <li class="martinifb"><fb:like class=" fb_edge_widget_with_comment fb_iframe_widget" fb-xfbml-state="rendered" send="false" layout="button_count" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" show_faces="false" width="90"><span style="height: 21px; width: 90px;"><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/like.htm" class="fb_ltr" title="Like this content on Facebook." style="border: medium none; overflow: hidden; height: 21px; width: 90px;" name="fa51a92cfb999a" id="f23e52b44bc7838" scrolling="no"></iframe></span></fb:like>   </li>


    <!--[if !lte IE 7]><!-->
  <li>
    <div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px;"><iframe title="+1" data-gapiattached="true" allowtransparency="true" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/fastbutton.htm" name="I0_1370542598664" id="I0_1370542598664" vspace="0" tabindex="0" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>
  </li>
  <!--<![endif]-->
    <li><iframe data-twttr-rendered="true" title="Twitter Tweet Button" style="width: 108px; height: 20px;" class="twitter-share-button twitter-count-horizontal" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/tweet_button.htm" allowtransparency="true" frameborder="0" scrolling="no"></iframe></li>
    <li><span class="IN-widget" style="line-height: 1; vertical-align: baseline; display: inline-block; text-align: center;"><span style="padding: 0px ! important; margin: 0px ! important; text-indent: 0px ! important; display: inline-block ! important; vertical-align: baseline ! important; font-size: 1px ! important;"><span id="li_ui_li_gen_1370542696321_0"><a id="li_ui_li_gen_1370542696321_0-link" href="javascript:void(0);"><span id="li_ui_li_gen_1370542696321_0-logo">in</span><span id="li_ui_li_gen_1370542696321_0-title"><span id="li_ui_li_gen_1370542696321_0-mark"></span><span id="li_ui_li_gen_1370542696321_0-title-text">Share</span></span></a></span></span><span style="padding: 0px ! important; margin: 0px ! important; text-indent: 0px ! important; display: inline-block ! important; vertical-align: baseline ! important; font-size: 1px ! important;"><span id="li_ui_li_gen_1370542696344_1-container" class="IN-right IN-hidden"><span id="li_ui_li_gen_1370542696344_1" class="IN-right"><span id="li_ui_li_gen_1370542696344_1-inner" class="IN-right"><span id="li_ui_li_gen_1370542696344_1-content" class="IN-right">0</span></span></span></span></span></span><script type="in/share+init" data-url="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" data-counter="right" data-onsuccess="LinkedInShare"></script></li>
  </ul>
<br class="jamie_clear">
</span>
 
<script type="text/javascript"><!--
google_ad_client = "ca-pub-9465609616171866";
/* Big Rectangle Blog Bottom */
google_ad_slot = "4061219431";
google_ad_width = 336;
google_ad_height = 280;
//-->
</script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><ins id="aswift_0_anchor" style="display:block;border:none;height:280px;margin:0;padding:0;position:relative;visibility:visible;width:336px"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="280" scrolling="no" width="336"></iframe></ins></ins>     			

<div class="yarpp-related">
<b>You may also like following posts</b><ol>
<li><a href="http://www.geeksforgeeks.org/backtracking-set-1-the-knights-tour-problem/" rel="bookmark" title="Backtracking | Set 1 (The Knightâs tour problem)">Backtracking | Set 1 (The Knightâs tour problem)</a></li>
<li><a href="http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/" rel="bookmark" title="Backtracking | Set 2 (Rat in a Maze)">Backtracking | Set 2 (Rat in a Maze)</a></li>
<li><a href="http://www.geeksforgeeks.org/backtracking-set-3-n-queen-problem/" rel="bookmark" title="Backtracking | Set 3 (N Queen Problem)">Backtracking | Set 3 (N Queen Problem)</a></li>
<li><a href="http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/" rel="bookmark" title="Backtracking | Set 5 (m Coloring Problem)">Backtracking | Set 5 (m Coloring Problem)</a></li>
<li><a href="http://www.geeksforgeeks.org/backtracking-set-7-hamiltonian-cycle/" rel="bookmark" title="Backtracking | Set 6 (Hamiltonian Cycle)">Backtracking | Set 6 (Hamiltonian Cycle)</a></li>
</ol>
</div>
				</div>		  

<!-- Facebook Comments for WordPress: http://3doordigital.com/wordpress/plugins/facebook-comments/ --><h3>Facebook Comments</h3><p><fb:comments-count class=" fb_comments_count_zero" fb-xfbml-state="rendered" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/"><span class="fb_comments_count">0</span></fb:comments-count> comments</p><div fb-xfbml-state="rendered" class="fb-comments fb_iframe_widget" data-href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" data-num-posts="5" data-width="450" data-colorscheme="light"><span style="height: 160px; width: 450px;"><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/comments.htm" class="fb_ltr" title="Facebook Social Plugin" style="border: medium none; overflow: hidden; height: 160px; width: 450px;" name="f25cd46ecab40e8" id="f2fe91a97ddf3c" scrolling="no"></iframe></span></div>	
				  <!--
				  <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			xmlns:dc="http://purl.org/dc/elements/1.1/"
			xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
		<rdf:Description rdf:about="http://www.geeksforgeeks.org/backtracking-set-7-suduku/"
    dc:identifier="http://www.geeksforgeeks.org/backtracking-set-7-suduku/"
    dc:title="Backtracking | Set 7 (Sudoku)"
    trackback:ping="http://www.geeksforgeeks.org/backtracking-set-7-suduku/trackback/" />
</rdf:RDF>				  -->           

			</div> <!-- end post main -->
					
			<div class="post-meta">
				<div class="left"></div>				
				<div class="clear"></div>
			</div>				

					
			
        
			 

			<div class="comments-main">			                     
					  <div class="comments" id="commentsdiv">
	  	<div id="commentsholder">
		                          
			<div class="list" id="comments">
				<h3 id="commentCount">20 comments so far</h3>
  
				<ol class="commentlist" id="commentlist">                            
							<li class="comment byuser comment-author-hitesh-dholaria even thread-even depth-1" id="comment-18669">
				<div id="div-comment-18669" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn"><a href="http://in.linkedin.com/in/hiteshdholaria" rel="external nofollow" class="url">Hitesh</a></cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-18669">
			May 26, 2013 at 6:18 PM</a>		</div>

		<div><div id="highlighter_539796" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/*</code></div><div class="line number2 index1 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">Title&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # SUDOKU solver in C language</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">Author&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Hitesh Dholaria</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">Email&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # hitesh.dholaria@gmail.com</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">Input&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
 # Following is a sample SUDOKU problem stored in the file named 
"problem.txt"</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments"># Here, 0 represents empty place</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments"># So, our overall goal is to replace such 0-places by some appropriate numbers</code></div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments"># There are total of 9 rows, 9 columns and 9 blocks of size (3x3)</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">008000050</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">370009010</code></div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">000140007</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">050020600</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">001908300</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">003060020</code></div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">700084000</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">080200063</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">090000400</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">Time Complexity # O(rows^2) OR O(columns^2)</code></div><div class="line number22 index21 alt1"><code class="cpp comments">*/</code></div><div class="line number23 index22 alt2">&nbsp;</div><div class="line number24 index23 alt1"><code class="cpp preprocessor">#include&lt;stdio.h&gt;</code></div><div class="line number25 index24 alt2"><code class="cpp preprocessor">#include&lt;conio.h&gt;</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp comments">// Global array to hold main SUDOKU problem</code></div><div class="line number28 index27 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">A[9][9];</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">readProblem(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number31 index30 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">printProblem(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number32 index31 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">isProblemSolved(</code><code class="cpp keyword bold">void</code><code class="cpp plain">);</code></div><div class="line number33 index32 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">eliminatePossibility(</code><code class="cpp color1 bold">int</code><code class="cpp plain">,</code><code class="cpp color1 bold">int</code><code class="cpp plain">);</code></div><div class="line number34 index33 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">getStartingIndicesOfBlock(</code><code class="cpp color1 bold">int</code><code class="cpp plain">,</code><code class="cpp color1 bold">int</code><code class="cpp plain">,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*);</code></div><div class="line number35 index34 alt2">&nbsp;</div><div class="line number36 index35 alt1"><code class="cpp comments">// Main function</code></div><div class="line number37 index36 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div><div class="line number38 index37 alt1">&nbsp;</div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">counter=0,number=0;</code></div><div class="line number40 index39 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i=0,j=0,k=0,l=0,x=0,y=0;</code></div><div class="line number41 index40 alt2">&nbsp;</div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// First read the SUDOKU input problem into A[9][9]</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">readProblem();</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"----- Problem -----\n\n"</code><code class="cpp plain">);</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printProblem();</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Main loop of the program</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Keep running this loop, until the number of valid elements in array becomes 81</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// That is, until problem is solved</code></div><div class="line number50 index49 alt1">&nbsp;</div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">while</code><code class="cpp plain">(!isProblemSolved()) {</code></div><div class="line number52 index51 alt1">&nbsp;</div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Run this loop once for each of the numbers from 1 to 9</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Every time increment this "number" and if it is overflown, reinitialize it to 1</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// This "number" is like "key" or "seed" for this main loop</code></div><div class="line number56 index55 alt1">&nbsp;</div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">number++;</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(number&gt;9) {</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">number=1;</code></div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number61 index60 alt2">&nbsp;</div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Eliminate possibility of being number at some of the 0-places by assigning -1 to those places</code></div><div class="line number63 index62 alt2">&nbsp;</div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number65 index64 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j++) {</code></div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[i][j]==number) {</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">eliminatePossibility(i,j);</code></div><div class="line number68 index67 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number69 index68 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number70 index69 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number71 index70 alt2">&nbsp;</div><div class="line number72 index71 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// After eliminating possibilities,</code></div><div class="line number73 index72 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// if you find any 0-place,</code></div><div class="line number74 index73 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// then it means, there is a possibility of this "number" being at that place.</code></div><div class="line number75 index74 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Count such 0-places in rows,columns and blocks</code></div><div class="line number76 index75 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// If it is only 1, then such 0-place must be updated by this "number",</code></div><div class="line number77 index76 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// (because of no other possibility at that 0-place and wer'e 100% sure about that!)</code></div><div class="line number78 index77 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number79 index78 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Moreover, eliminate possibilities again after updation</code></div><div class="line number80 index79 alt1">&nbsp;</div><div class="line number81 index80 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// For all the rows</code></div><div class="line number82 index81 alt1">&nbsp;</div><div class="line number83 index82 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number84 index83 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">counter=0;</code></div><div class="line number85 index84 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j++) {</code></div><div class="line number86 index85 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[i][j]==0) {</code></div><div class="line number87 index86 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Save column index of this 0-place</code></div><div class="line number88 index87 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">k=j;</code></div><div class="line number89 index88 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">counter++;</code></div><div class="line number90 index89 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number91 index90 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number92 index91 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number93 index92 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(counter==1) {</code></div><div class="line number94 index93 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[i][k]=number;</code></div><div class="line number95 index94 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">eliminatePossibility(i,k);</code></div><div class="line number96 index95 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number97 index96 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number98 index97 alt1">&nbsp;</div><div class="line number99 index98 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// For all the columns</code></div><div class="line number100 index99 alt1">&nbsp;</div><div class="line number101 index100 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number102 index101 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">counter=0;</code></div><div class="line number103 index102 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j++) {</code></div><div class="line number104 index103 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[j][i]==0) {</code></div><div class="line number105 index104 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Save row index of this 0-place</code></div><div class="line number106 index105 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">k=j;</code></div><div class="line number107 index106 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">counter++;</code></div><div class="line number108 index107 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number109 index108 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number110 index109 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(counter==1) {</code></div><div class="line number111 index110 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[k][i]=number;</code></div><div class="line number112 index111 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">eliminatePossibility(k,i);</code></div><div class="line number113 index112 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number114 index113 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number115 index114 alt2">&nbsp;</div><div class="line number116 index115 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// For all the blocks</code></div><div class="line number117 index116 alt2">&nbsp;</div><div class="line number118 index117 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i+=3) {</code></div><div class="line number119 index118 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j+=3) {</code></div><div class="line number120 index119 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">counter=0;</code></div><div class="line number121 index120 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(k=i;k&lt;i+3;k++) {</code></div><div class="line number122 index121 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(l=j;l&lt;j+3;l++) {</code></div><div class="line number123 index122 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[k][l]==0) {</code></div><div class="line number124 index123 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Save row and column indices of this 0-place</code></div><div class="line number125 index124 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">x=k,y=l;</code></div><div class="line number126 index125 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">counter++;</code></div><div class="line number127 index126 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number128 index127 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number129 index128 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number130 index129 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(counter==1) {</code></div><div class="line number131 index130 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[x][y]=number;</code></div><div class="line number132 index131 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">eliminatePossibility(x,y);</code></div><div class="line number133 index132 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number134 index133 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number135 index134 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number136 index135 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number137 index136 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Main loop ends here</code></div><div class="line number138 index137 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Now, problem has been solved</code></div><div class="line number139 index138 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// So, printing the final solution</code></div><div class="line number140 index139 alt1">&nbsp;</div><div class="line number141 index140 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n---- Solution ----\n\n"</code><code class="cpp plain">);</code></div><div class="line number142 index141 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printProblem();</code></div><div class="line number143 index142 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getch();</code></div><div class="line number144 index143 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number145 index144 alt2"><code class="cpp plain">}</code></div><div class="line number146 index145 alt1">&nbsp;</div><div class="line number147 index146 alt2"><code class="cpp comments">// This function initializes problem array A[9][9] by reading SUDOKU elements from file</code></div><div class="line number148 index147 alt1">&nbsp;</div><div class="line number149 index148 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">readProblem(</code><code class="cpp keyword bold">void</code><code class="cpp plain">) {</code></div><div class="line number150 index149 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number151 index150 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*fp;</code></div><div class="line number152 index151 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">fp = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"problem.txt"</code><code class="cpp plain">,</code><code class="cpp string">"r"</code><code class="cpp plain">);</code></div><div class="line number153 index152 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number154 index153 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j++) {</code></div><div class="line number155 index154 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[i][j]=</code><code class="cpp functions bold">fgetc</code><code class="cpp plain">(fp)-48;</code></div><div class="line number156 index155 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number157 index156 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Skip reading '\n' into array A[9][9]</code></div><div class="line number158 index157 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">fgetc</code><code class="cpp plain">(fp);</code></div><div class="line number159 index158 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number160 index159 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">fclose</code><code class="cpp plain">(fp); </code></div><div class="line number161 index160 alt2"><code class="cpp plain">}</code></div><div class="line number162 index161 alt1">&nbsp;</div><div class="line number163 index162 alt2"><code class="cpp comments">// This function prints problem array A[9][9]</code></div><div class="line number164 index163 alt1">&nbsp;</div><div class="line number165 index164 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">printProblem(</code><code class="cpp keyword bold">void</code><code class="cpp plain">) {</code></div><div class="line number166 index165 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number167 index166 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number168 index167 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j++) {</code></div><div class="line number169 index168 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d "</code><code class="cpp plain">,A[i][j]);</code></div><div class="line number170 index169 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number171 index170 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></div><div class="line number172 index171 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number173 index172 alt2"><code class="cpp plain">}</code></div><div class="line number174 index173 alt1">&nbsp;</div><div class="line number175 index174 alt2"><code class="cpp comments">// This function returns 1(true), if number of valid elements(i.e. non-empty places) in A[9][9] is 81.</code></div><div class="line number176 index175 alt1"><code class="cpp comments">// Otherwise, returns 0(false)</code></div><div class="line number177 index176 alt2"><code class="cpp comments">// Also, note that whenever number of valid elements becomes 81,</code></div><div class="line number178 index177 alt1"><code class="cpp comments">// that means our SUDOKU problem has been solved completely.</code></div><div class="line number179 index178 alt2">&nbsp;</div><div class="line number180 index179 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">isProblemSolved(</code><code class="cpp keyword bold">void</code><code class="cpp plain">) {</code></div><div class="line number181 index180 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j,numberOfValidElements=0;</code></div><div class="line number182 index181 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number183 index182 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;9;j++) {</code></div><div class="line number184 index183 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[i][j]&gt;0) {</code></div><div class="line number185 index184 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">numberOfValidElements++;</code></div><div class="line number186 index185 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number187 index186 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[i][j]=0;</code></div><div class="line number188 index187 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number189 index188 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number190 index189 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number191 index190 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(numberOfValidElements&lt;81) {</code></div><div class="line number192 index191 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number193 index192 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number194 index193 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number195 index194 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number196 index195 alt1"><code class="cpp plain">}</code></div><div class="line number197 index196 alt2">&nbsp;</div><div class="line number198 index197 alt1"><code class="cpp comments">// Eliminate possibility of specific "number" being at some of the 0-places by assigning -1 to those places</code></div><div class="line number199 index198 alt2"><code class="cpp comments">// Arguments (row,column) represents indices of any arbitrary place in A[9][9]</code></div><div class="line number200 index199 alt1">&nbsp;</div><div class="line number201 index200 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">eliminatePossibility(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">column) {</code></div><div class="line number202 index201 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number203 index202 alt2">&nbsp;</div><div class="line number204 index203 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Eliminating possibility from all the rows corresponding to "column"</code></div><div class="line number205 index204 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number206 index205 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[i][column]==0) {</code></div><div class="line number207 index206 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[i][column]=-1;</code></div><div class="line number208 index207 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number209 index208 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number210 index209 alt1">&nbsp;</div><div class="line number211 index210 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Eliminating possibility from all the columns corresponding to "row"</code></div><div class="line number212 index211 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;9;i++) {</code></div><div class="line number213 index212 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[row][i]==0) {</code></div><div class="line number214 index213 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[row][i]=-1;</code></div><div class="line number215 index214 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number216 index215 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number217 index216 alt2">&nbsp;</div><div class="line number218 index217 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Eliminating possibility from all the places corresponding to "row" and "column"</code></div><div class="line number219 index218 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">getStartingIndicesOfBlock(row,column,&amp;row,&amp;column);</code></div><div class="line number220 index219 alt1">&nbsp;</div><div class="line number221 index220 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp comments">// Now, "row" and "column" contains the indices of the first element of the current block</code></div><div class="line number222 index221 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=row;i&lt;row+3;i++) {</code></div><div class="line number223 index222 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=column;j&lt;column+3;j++) {</code></div><div class="line number224 index223 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(A[i][j]==0) {</code></div><div class="line number225 index224 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">A[i][j]=-1;</code></div><div class="line number226 index225 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number227 index226 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number228 index227 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number229 index228 alt2"><code class="cpp plain">}</code></div><div class="line number230 index229 alt1">&nbsp;</div><div class="line number231 index230 alt2"><code class="cpp comments">// This function returns the indices of the first element of the 3x3 block</code></div><div class="line number232 index231 alt1"><code class="cpp comments">// Here, specific block is being identified by the provided indices (i,j) of A[9][9]</code></div><div class="line number233 index232 alt2"><code class="cpp comments">// Resultant indices are returned by the pointers (*rowIndex,*columnIndex) to the calling function</code></div><div class="line number234 index233 alt1">&nbsp;</div><div class="line number235 index234 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">getStartingIndicesOfBlock(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">j,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*rowIndex,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">*columnIndex) {</code></div><div class="line number236 index235 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(i&lt;3) {</code></div><div class="line number237 index236 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*rowIndex=0;</code></div><div class="line number238 index237 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code><code class="cpp plain">(i&lt;6) {</code></div><div class="line number239 index238 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*rowIndex=3;</code></div><div class="line number240 index239 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number241 index240 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*rowIndex=6;</code></div><div class="line number242 index241 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number243 index242 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(j&lt;3) {</code></div><div class="line number244 index243 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*columnIndex=0;</code></div><div class="line number245 index244 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp keyword bold">if</code><code class="cpp plain">(j&lt;6) {</code></div><div class="line number246 index245 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*columnIndex=3;</code></div><div class="line number247 index246 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">} </code><code class="cpp keyword bold">else</code> <code class="cpp plain">{</code></div><div class="line number248 index247 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">*columnIndex=6;</code></div><div class="line number249 index248 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number250 index249 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=18669#respond" onclick='return addComment.moveForm("div-comment-18669", "18669", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-16450">
				<div id="div-comment-16450" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">minhaz</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-16450">
			March 17, 2013 at 10:19 PM</a>		</div>

		<p>Don't get it, how the row and column being updated in SolveSudko function?</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=16450#respond" onclick='return addComment.moveForm("div-comment-16450", "16450", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-16452">
				<div id="div-comment-16452" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">minhaz</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-16452">
			March 17, 2013 at 10:32 PM</a>		</div>

		<p>Oops got it.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=16452#respond" onclick='return addComment.moveForm("div-comment-16452", "16452", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt depth-2 parent" id="comment-18122">
				<div id="div-comment-18122" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">rohit</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-18122">
			May 11, 2013 at 7:54 PM</a>		</div>

		<p>Can you please tell me how are Rows and Column getting updated </p>
<div><div id="highlighter_548049" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=18122#respond" onclick='return addComment.moveForm("div-comment-18122", "18122", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-18637">
				<div id="div-comment-18637" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">vignesh m</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-18637">
			May 25, 2013 at 4:47 PM</a>		</div>

		<p>we are doing pass by reference hence values are updated , check signature below</p>
<div><div id="highlighter_948453" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp color1 bold">bool</code> <code class="cpp plain">FindUnassignedLocation(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">grid[N][N], </code><code class="cpp color1 bold">int</code> <code class="cpp plain">&amp;row, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">&amp;col)</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=18637#respond" onclick='return addComment.moveForm("div-comment-18637", "18637", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1" id="comment-14965">
				<div id="div-comment-14965" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">proxhotdog</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-14965">
			February 2, 2013 at 8:50 AM</a>		</div>

		<p>I have ported this code in ruby and it said stack level too deep (SystemStackError)</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=14965#respond" onclick='return addComment.moveForm("div-comment-14965", "14965", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment even thread-odd thread-alt depth-1 parent" id="comment-11261">
				<div id="div-comment-11261" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">abc</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-11261">
			September 30, 2012 at 3:19 PM</a>		</div>

		<p>why row-row%3</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=11261#respond" onclick='return addComment.moveForm("div-comment-11261", "11261", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2 parent" id="comment-11262">
				<div id="div-comment-11262" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">abc</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-11262">
			September 30, 2012 at 3:21 PM</a>		</div>

		<p>Sorry understood!</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=11262#respond" onclick='return addComment.moveForm("div-comment-11262", "11262", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3 parent" id="comment-16636">
				<div id="div-comment-16636" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">mani</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-16636">
			March 24, 2013 at 2:02 PM</a>		</div>

		<p>I don't understand. can u please explain ?</p>
<div><div id="highlighter_415786" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=16636#respond" onclick='return addComment.moveForm("div-comment-16636", "16636", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-4" id="comment-18848">
				<div id="div-comment-18848" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">mahesh</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-18848">
			May 29, 2013 at 11:10 PM</a>		</div>

		<p>Incase the UNASSIGNED number is 5th row we need to check if the num fits in the 3*3 block. </p>
<p>5 - 5%3 = 5 - 2 =  3 (starting row of that 3*3 block)</p>
<p>take for example we are updating in 8th row </p>
<p>8 - 8%3  = 8 - 2 = 6 (starting row of that 3*3 block). Beautiful thinking .</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=18848#respond" onclick='return addComment.moveForm("div-comment-18848", "18848", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
		<li class="comment even thread-even depth-1 parent" id="comment-9664">
				<div id="div-comment-9664" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Venki</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9664">
			July 18, 2012 at 10:48 PM</a>		</div>

		<p>An interesting question would be "How can we assure that the given 
input is feasible?". The situation faced by Sudoku game designers while 
drafting Easy, Medium and Hard puzzles.</p>
<p>Any thoughts on how can we ensure minimum input which can lead to a solution? Or sufficiency of input to lead a valid solution.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9664#respond" onclick='return addComment.moveForm("div-comment-9664", "9664", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment odd alt depth-2 parent" id="comment-9687">
				<div id="div-comment-9687" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Aashish</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9687">
			July 19, 2012 at 9:54 PM</a>		</div>

		<p>@Venki,<br>
Bit vector can be used to ensure whether an input will<br>
lead to solution.<br>
9 bits can be used to represent any of the digits from 1 to 9[we are talking about 9x9 Sudoku,right!].<br>
To check whether a Cell is pre-filled &amp; thus can't be used for user 
input, it can be easily checked by ANDing the 9 bit vector with 
511[2^9-1].If the result of AND operation is zero[none of the bit of the
 bit vector is set], the cell is empty.</p>
<p>The below structure can be handy.</p>
<div><div id="highlighter_772205" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp keyword bold">struct</code> <code class="cpp plain">mask</code></div><div class="line number2 index1 alt1"><code class="cpp plain">{</code></div><div class="line number3 index2 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">bit:9;</code></div><div class="line number4 index3 alt1"><code class="cpp plain">};</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="cpp keyword bold">struct</code> <code class="cpp plain">mask m[9][9];</code></div></div></td></tr></tbody></table></div></div>
<p>A 2D bit vector of size NxN[9 here] is needed to represent each cell.<br>
The memory has thus reduced from 9x9x4 = 324 bytes[if bit vectors are not used] to<br>
9x9x9/8 = 92 bytes.</p>
<p>Let me know if we can do better.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9687#respond" onclick='return addComment.moveForm("div-comment-9687", "9687", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-9691">
				<div id="div-comment-9691" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Venki</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9691">
			July 19, 2012 at 11:34 PM</a>		</div>

		<p>Whether to represent the matrix as bit vector or boolean array, or 
int/char array, how does it matter? We will conserve space, but all are 
same.</p>
<p>My question is given a partially filled grid, how can we ensure that the user can successfully arrive at valid solution?</p>
<p>Putting in other words, generate all possible grid permutations. Now 
discard the invalid grids. From the remaining grids, take any grid. 
Gradually remove random elements one after another from this grid. How 
many such random deletions can be possible? Say, we left with N elements
 in the grid after 81-N deletions. Can we ensure that the user will be 
able to fill these deleted elements? What if we delete one more element,
 and left with N-1 elements on the grid. Now is it possible to fill it 
in?</p>
<p>There must be a criteria to design the puzzle. I am looking for more thoughts.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9691#respond" onclick='return addComment.moveForm("div-comment-9691", "9691", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1 parent" id="comment-9608">
				<div id="div-comment-9608" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Diksha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9608">
			July 15, 2012 at 7:33 PM</a>		</div>

		<div><div id="highlighter_123200" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div><div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;stdlib.h&gt;</code></div><div class="line number3 index2 alt2"><code class="cpp preprocessor">#define SIZE 9</code></div><div class="line number4 index3 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number5 index4 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">isValid(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">(*sudoku)[SIZE],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">col,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">weight)</code></div><div class="line number6 index5 alt1"><code class="cpp plain">{</code></div><div class="line number7 index6 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j,start_row,start_col;</code></div><div class="line number8 index7 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number9 index8 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;SIZE;i++)</code></div><div class="line number10 index9 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(sudoku[row][i]==weight)</code></div><div class="line number11 index10 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number12 index11 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number13 index12 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;SIZE;i++)</code></div><div class="line number14 index13 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(sudoku[i][col]==weight)</code></div><div class="line number15 index14 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number16 index15 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number17 index16 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">start_row=(row/3)*3;</code></div><div class="line number18 index17 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">start_col=(col/3)*3;</code></div><div class="line number19 index18 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=start_row;i&lt;start_row+3;i++)</code></div><div class="line number20 index19 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=start_col;j&lt;start_col+3;j++)</code></div><div class="line number21 index20 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(sudoku[i][j]==weight)</code></div><div class="line number22 index21 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number23 index22 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number24 index23 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div><div class="line number25 index24 alt2"><code class="cpp plain">}</code></div><div class="line number26 index25 alt1"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number27 index26 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">printSolution(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">(*sudoku)[SIZE])</code></div><div class="line number28 index27 alt1"><code class="cpp plain">{</code></div><div class="line number29 index28 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number30 index29 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"....................................\n"</code><code class="cpp plain">);</code></div><div class="line number31 index30 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=0;i&lt;SIZE;i++)</code></div><div class="line number32 index31 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number33 index32 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(j=0;j&lt;SIZE;j++)</code></div><div class="line number34 index33 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"%d "</code><code class="cpp plain">,sudoku[i][j]);</code></div><div class="line number35 index34 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"\n"</code><code class="cpp plain">);</code></div><div class="line number36 index35 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number37 index36 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"....................................\n"</code><code class="cpp plain">);</code></div><div class="line number38 index37 alt1"><code class="cpp plain">}</code></div><div class="line number39 index38 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number40 index39 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">solveSudoku(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">(*sudoku)[SIZE],</code><code class="cpp color1 bold">int</code> <code class="cpp plain">row,</code><code class="cpp color1 bold">int</code> <code class="cpp plain">col)</code></div><div class="line number41 index40 alt2"><code class="cpp plain">{</code></div><div class="line number42 index41 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i;</code></div><div class="line number43 index42 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(row==SIZE &amp;&amp; col==0)</code></div><div class="line number44 index43 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printSolution(sudoku);</code></div><div class="line number45 index44 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number46 index45 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number47 index46 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(sudoku[row][col])&nbsp;&nbsp;&nbsp; </code><code class="cpp comments">//encounters a pre-filled cell.</code></div><div class="line number48 index47 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number49 index48 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">solveSudoku(sudoku,row,col+1);</code></div><div class="line number50 index49 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number51 index50 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(col==SIZE-1)</code></div><div class="line number52 index51 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">solveSudoku(sudoku,row+1,0);</code></div><div class="line number53 index52 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number54 index53 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">else</code></div><div class="line number55 index54 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">for</code><code class="cpp plain">(i=1;i&lt;=SIZE;i++)</code></div><div class="line number56 index55 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">( isValid(sudoku,row,col,i) )</code></div><div class="line number57 index56 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{</code></div><div class="line number58 index57 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sudoku[row][col]=i;</code></div><div class="line number59 index58 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number60 index59 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">solveSudoku(sudoku,row,col+1);</code></div><div class="line number61 index60 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number62 index61 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">if</code><code class="cpp plain">(col==SIZE-1)</code></div><div class="line number63 index62 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">solveSudoku(sudoku,row+1,0);</code></div><div class="line number64 index63 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number65 index64 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">sudoku[row][col]=0;</code></div><div class="line number66 index65 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number67 index66 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">}</code></div><div class="line number68 index67 alt1"><code class="cpp plain">}</code></div><div class="line number69 index68 alt2"><code class="cpp spaces">&nbsp;</code>&nbsp;</div><div class="line number70 index69 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main()</code></div><div class="line number71 index70 alt2"><code class="cpp plain">{</code></div><div class="line number72 index71 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">sudoku[SIZE][SIZE]={{3, 0, 6, 5, 0, 8, 4, 0, 0},</code></div><div class="line number73 index72 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{5, 2, 0, 0, 0, 0, 0, 0, 0},</code></div><div class="line number74 index73 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 8, 7, 0, 0, 0, 0, 3, 1},</code></div><div class="line number75 index74 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 0, 3, 0, 1, 0, 0, 8, 0},</code></div><div class="line number76 index75 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{9, 0, 0, 8, 6, 3, 0, 0, 5},</code></div><div class="line number77 index76 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 5, 0, 0, 9, 0, 6, 0, 0},</code></div><div class="line number78 index77 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{1, 3, 0, 0, 0, 0, 2, 5, 0},</code></div><div class="line number79 index78 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 0, 0, 0, 0, 0, 0, 7, 4},</code></div><div class="line number80 index79 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">{0, 0, 5, 2, 0, 6, 3, 0, 0}};;</code></div><div class="line number81 index80 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i,j;</code></div><div class="line number82 index81 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number83 index82 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">printSolution(sudoku);&nbsp; </code><code class="cpp comments">//Display inputted sudoku from the file</code></div><div class="line number84 index83 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number85 index84 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp plain">solveSudoku(sudoku,0,0);</code></div><div class="line number86 index85 alt1"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number87 index86 alt2"><code class="cpp spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div><div class="line number88 index87 alt1"><code class="cpp plain">}</code></div></div></td></tr></tbody></table></div></div>
<p>See output here: http://ideone.com/8YZ4z</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9608#respond" onclick='return addComment.moveForm("div-comment-9608", "9608", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment byuser comment-author-subin even depth-2" id="comment-17604">
				<div id="div-comment-17604" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Subin</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-17604">
			April 24, 2013 at 10:21 AM</a>		</div>

		<p>Nice Code. Its working fine for me.<br>
only you have to handle col variable from going into array index out of 
bounds error which can be handled with one simple if case....</p>
<div><div id="highlighter_236740" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=17604#respond" onclick='return addComment.moveForm("div-comment-17604", "17604", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
		<li class="comment odd alt thread-even depth-1 parent" id="comment-9603">
				<div id="div-comment-9603" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">varun</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9603">
			July 15, 2012 at 4:00 PM</a>		</div>

		<p>What should be the complexity for this algo..</p>
<p>Let's say total empty columns are n then I think complexity should be
 9^n  because for each empty box maximum tries should be 9 (1...9).</p>
<p>What others think about complexity???</p>
<div><div id="highlighter_844573" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9603#respond" onclick='return addComment.moveForm("div-comment-9603", "9603", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-2" id="comment-9606">
				<div id="div-comment-9606" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">kartik</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9606">
			July 15, 2012 at 7:20 PM</a>		</div>

		<p>Yes, it should be 9^n in worst case.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9606#respond" onclick='return addComment.moveForm("div-comment-9606", "9606", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
		<li class="comment odd alt depth-2 parent" id="comment-9607">
				<div id="div-comment-9607" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Diksha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9607">
			July 15, 2012 at 7:31 PM</a>		</div>

		<p>Are you sure the time complexity is 9^n.<br>
AFAIT, each empty slot can be filled in 9 ways.<br>
So, the time complexity should be (no. of empty slots)^9.</p>
<p>Let me know if i am missing anything.</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9607#respond" onclick='return addComment.moveForm("div-comment-9607", "9607", "respond", "13779")'>Reply</a>		</div>
				</div>
		<ul class="children">
		<li class="comment even depth-3" id="comment-9609">
				<div id="div-comment-9609" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">Diksha</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9609">
			July 15, 2012 at 7:35 PM</a>		</div>

		<p>Sorry, i misunderstood, it would be<br>
9^(no. of empty slots)</p>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9609#respond" onclick='return addComment.moveForm("div-comment-9609", "9609", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
</ul>
</li>
</ul>
</li>
		<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-9592">
				<div id="div-comment-9592" class="comment-body">
				<div class="comment-author vcard">
				<cite class="fn">charan</cite> <span class="says">says:</span>		</div>

		<div class="comment-meta commentmetadata"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#comment-9592">
			July 14, 2012 at 11:30 PM</a>		</div>

		<p>Its very explanatory. thanks for sharing <img src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
<div><div id="highlighter_789268" class="syntaxhighlighter nogutter  cpp"><table border="0" cellpadding="0" cellspacing="0"><tbody><tr><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="cpp comments">/* Paste your code here (You may delete these lines if not writing code) */</code></div></div></td></tr></tbody></table></div></div>

		<div class="reply">
		<a class="comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/?replytocom=9592#respond" onclick='return addComment.moveForm("div-comment-9592", "9592", "respond", "13779")'>Reply</a>		</div>
				</div>
		</li>
				</ol>						
				
				<span class="left"></span>
				<span class="right"></span>
				<div class="clear"></div>
			</div>
				</div>
		
				
		<div class="form" id="respond">

			<h3 class="respond">Comment</h3>
			<div id="cancel-comment-reply"><a rel="nofollow" id="cancel-comment-reply-link" href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/#respond" style="display:none;">Click here to cancel reply.</a></div>

			
		    <form action="http://www.geeksforgeeks.org/wp-comments-post.php" method="post" id="commentform">
				
									
					<div>
						<label for="author">Name (<em>Required</em>)</label>	
						<input name="author" id="author" tabindex="1" type="text">			
				
						<label for="email">Email (<em>Required</em>)</label> 
						<input name="email" id="email" tabindex="2" type="text">
	
						<label for="url">Website URI</label>
						<input name="url" id="url" tabindex="3" type="text">
		<label for="comment"> <b>Your Comment (Writing code? please paste your code between sourcecode tags)</b></label>
						<textarea id="comment" name="comment" tabindex="4" rows="10" cols="50">


[sourcecode language="C"]
/* Paste your code here (You may delete these lines if not writing code) */
[/sourcecode]</textarea>
					</div>

				
				<div class="clear"></div>

			<!-- BEGIN: subscribe to comments reloaded --><p><label for="subscribe-reloaded"><input style="width:30px" name="subscribe-reloaded" id="subscribe-reloaded" value="yes" checked="checked" type="checkbox"> Notify me of followup comments via e-mail. You can also <a href="http://www.geeksforgeeks.org/comment-subscriptions?srp=13779&amp;sra=s">subscribe</a> without commenting.</label></p><!-- END: subscribe to comments reloaded -->				<div class="submit">
					<div></div>
					<div><input name="comment_post_ID" value="13779" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">
</div>
				</div>

				<div class="ajax">
					<div id="postStatus"></div>				
					<div id="commentStatus"></div>				
				<!--<div><input type="hidden" name="comment_post_ID" value="" /></div>-->
				</div>

				<div class="clear"></div>
				<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="dd2867ffd5" type="hidden"></p>                <script type="text/javascript">
                    var RecaptchaOptions = { theme : 'red', lang : 'en' , tabindex : 5 };
                </script><script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/challenge"></script><script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/recaptcha_1-4b27fabf_9cc6f81f_8eda0965_32d566a6_105bdf84.js"></script><div class=" recaptcha_nothad_incorrect_sol recaptcha_isnot_showing_audio" id="recaptcha_widget_div" style=""></div><script>Recaptcha.widget = Recaptcha.$("recaptcha_widget_div"); Recaptcha.challenge_callback();</script>

	<noscript>
  		<iframe src="http://www.google.com/recaptcha/api/noscript?k=6Ld-1LoSAAAAANFVCVn56wWBdJTPsADwnMKI6rMi" height="300" width="500" frameborder="0"></iframe><br/>
  		<textarea name="recaptcha_challenge_field" rows="3" cols="40"></textarea>
  		<input type="hidden" name="recaptcha_response_field" value="manual_challenge"/>
	</noscript>                        <div id="recaptcha-submit-btn-area">&nbsp;<input name="submit" id="submit" tabindex="6" value="Have Your Say" type="submit"></div>
                        <noscript>
                         <style type='text/css'>#submit {display:none;}</style>
                         <input name="submit" type="submit" id="submit-alt" tabindex="6" value="Submit Comment"/> 
                        </noscript>
			<input value="1370017715 107.197.172.155" name="bb2_screener_" type="hidden"></form>

		</div> <!-- end form -->
		
				    	  </div> <!-- end comments -->			</div>
	
					
			
			

		</div> <!-- end post -->	

<br><br>
	
				

</div> <!-- end content -->

<ul id="sidebar">
	<li id="text-19" class="widget widget_text">			<div class="textwidget"><div id="cse" style="width: 100%;"><div class="gsc-control-cse gsc-control-cse-en"><div dir="ltr" class="gsc-control-wrapper-cse"><form accept-charset="utf-8" class="gsc-search-box"><table class="gsc-search-box" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-input"><input style="outline: medium none; background: url(&quot;http://www.google.com/cse/intl/en/images/google_custom_search_watermark.gif&quot;) no-repeat scroll left center rgb(255, 255, 255);" spellcheck="false" dir="ltr" id="gsc-i-id1" title="search" name="search" class=" gsc-input" size="10" autocomplete="off" type="text"></td><td class="gsc-search-button"><input title="search" class="gsc-search-button" value="Search" type="button"></td><td class="gsc-clear-button"><div title="clear results" class="gsc-clear-button">&nbsp;</div></td></tr></tbody></table><table class="gsc-branding" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-branding-user-defined"></td><td class="gsc-branding-text"><div class="gsc-branding-text">powered by</div></td><td class="gsc-branding-img"><img class="gsc-branding-img" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/small-logo.png"></td></tr></tbody></table></form><div class="gsc-results-wrapper-nooverlay"><div class="gsc-tabsAreaInvisible"><div class="gsc-tabHeader gsc-inline-block gsc-tabhActive">Custom Search</div><span class="gs-spacer"> </span></div><div class="gsc-tabsAreaInvisible"></div><div class="gsc-above-wrapper-area-invisible"><table class="gsc-above-wrapper-area-container" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-result-info-container"><div class="gsc-result-info-invisible"></div></td></tr></tbody></table></div><div class="gsc-adBlockInvisible"></div><div class="gsc-wrapper"><div class="gsc-adBlockInvisible"></div><div class="gsc-resultsbox-invisible"><div class="gsc-resultsRoot gsc-tabData gsc-tabdActive"><table class="gsc-resultsHeader" cellpadding="0" cellspacing="0"><tbody><tr><td class="gsc-twiddleRegionCell"><div class="gsc-twiddle"><div class="gsc-title">Web</div></div><div class="gsc-stats"></div><div class="gsc-results-selector gsc-all-results-active"><div title="show one result" class="gsc-result-selector gsc-one-result">&nbsp;</div><div title="show more results" class="gsc-result-selector gsc-more-results">&nbsp;</div><div title="show all results" class="gsc-result-selector gsc-all-results">&nbsp;</div></div></td><td class="gsc-configLabelCell"></td></tr></tbody></table><div><div class="gsc-expansionArea"></div></div></div></div></div></div></div></div></div>
<script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/jsapi" type="text/javascript"></script>
<script type="text/javascript">
  google.load('search', '1', {language : 'en', style : google.loader.themes.GREENSKY});
  google.setOnLoadCallback(function() {
    var customSearchControl = new google.search.CustomSearchControl('010463773075615557214:qy5dkn-osd8');
    customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);
    customSearchControl.draw('cse');
  }, true);
</script><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/a_002" type="text/javascript"></script><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/defaulten.css" type="text/css" rel="stylesheet"><link href="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/greensky.css" type="text/css" rel="stylesheet"><script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/defaulten.js" type="text/javascript"></script>

<style type="text/css">
  .gsc-control-cse {
    font-family: "Trebuchet MS", sans-serif;
    border-color: #E1F3DA;
    background-color: #E1F3DA;
  }
  input.gsc-input {
    border-color: #94CC7A;
  }
  input.gsc-search-button {
    border-color: #94CC7A;
    background-color: #AADA92;
  }
  .gsc-tabHeader.gsc-tabhInactive {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-tabHeader.gsc-tabhActive {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gsc-tabsArea {
    border-color: #A9DA92;
  }
  .gsc-webResult.gsc-result {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-webResult.gsc-result:hover {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gs-webResult.gs-result a.gs-title:link,
  .gs-webResult.gs-result a.gs-title:link b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:visited,
  .gs-webResult.gs-result a.gs-title:visited b {
    color: #009900;
  }
  .gs-webResult.gs-result a.gs-title:hover,
  .gs-webResult.gs-result a.gs-title:hover b {
    color: #003300;
  }
  .gs-webResult.gs-result a.gs-title:active,
  .gs-webResult.gs-result a.gs-title:active b {
    color: #009900;
  }
  .gsc-cursor-page {
    color: #009900;
  }
  a.gsc-trailing-more-results:link {
    color: #009900;
  }
  .gs-webResult.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-webResult.gs-result .gs-visibleUrl {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    color: #33cc00;
  }
  .gs-webResult.gs-result .gs-visibleUrl-short {
    display: none;
  }
  .gs-webResult.gs-result .gs-visibleUrl-long {
    display: block;
  }
  .gsc-cursor-box {
    border-color: #A9DA92;
  }
  .gsc-results .gsc-cursor-page {
    border-color: #A9DA92;
    background-color: #FFFFFF;
  }
  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {
    border-color: #A9DA92;
    background-color: #A9DA92;
  }
  .gs-promotion.gs-result {
    border-color: #94CC7A;
    background-color: #CBE8B4;
  }
  .gs-promotion.gs-result a.gs-title:link {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:visited {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:hover {
    color: #0066CC;
  }
  .gs-promotion.gs-result a.gs-title:active {
    color: #0066CC;
  }
  .gs-promotion.gs-result .gs-snippet {
    color: #454545;
  }
  .gs-promotion.gs-result .gs-visibleUrl,
  .gs-promotion.gs-result .gs-visibleUrl-short {
    color: #815FA7;
  }
</style>    

</div>
		</li>
<li id="text-13" class="widget widget_text">			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/tag/interview-experience">Interview Experiences</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/advance-data-structures">Advanced Data Structures</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/pattern-searching">Pattern Searching</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide &amp; Conquer</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/graph">Graph</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/MathematicalAlgo">Mathematical Algorithms</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>
<li><a href="http://www.geeksforgeeks.org/tag/Java">Java</a></li>
</ul>
</div>
		</li>
<li id="text-9" class="widget widget_text">			<div class="textwidget"><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/likebox.htm" style="border:none; overflow:hidden; width:240px; height:200px;" allowtransparency="true" frameborder="0" scrolling="no"></iframe></div>
		</li>
<li id="text-18" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "ca-pub-9465609616171866";
/* Mediam Rectange */
google_ad_slot = "7922198189";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><ins id="aswift_1_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;" frameborder="0" height="250" scrolling="no" width="300"></iframe></ins></ins></div>
		</li>
<li id="text-14" class="widget widget_text"><h2 class="widgettitle">Popular Posts</h2>
			<div class="textwidget"><ul>
<li><a href="http://www.geeksforgeeks.org/archives/767">  All permutations of a given string </a></li>
<li><a href="http://www.geeksforgeeks.org/archives/14268"> Memory Layout of C Programs</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/840"> Understanding âexternâ keyword in C</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/2105">Median of two sorted arrays</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/6358"> Tree traversal without recursion and without stack! </a></li>
<li><a href="http://www.geeksforgeeks.org/archives/9705"> Structure Member Alignment, Padding and Data Packing</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/2405"> Intersection point of two Linked Lists</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/1029"> Lowest Common Ancestor in a BST.</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/3042"> Check if a binary tree is BST or not</a> </li>
<li><a href="http://www.geeksforgeeks.org/archives/17063"> Sorted Linked List to Balanced BST</a></li>
</ul></div>
		</li>
<li id="text-17" class="widget widget_text">			<div class="textwidget"><script type="text/javascript"><!--
google_ad_client = "ca-pub-9465609616171866";
/* Wide Skyscrapper Sidebar */
google_ad_slot = "8695472116";
google_ad_width = 160;
google_ad_height = 600;
//-->
</script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/show_ads.js">
</script><ins style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><ins id="aswift_2_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;" frameborder="0" height="600" scrolling="no" width="160"></iframe></ins></ins></div>
		</li>
<li id="text-3" class="widget widget_text">			<div class="textwidget"><!-- TWITTER BUTTON-->
<iframe data-twttr-rendered="true" title="Twitter Follow Button" style="width: 253px; height: 20px;" class="twitter-follow-button twitter-follow-button" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/follow_button.htm" allowtransparency="true" frameborder="0" scrolling="no"></iframe>
<script src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/widgets.js" type="text/javascript"></script>

         <!-- Place this tag in your head or just before your close body tag -->
         <script gapi_processed="true" type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/plusone.js"></script>
         <!-- Place this tag where you want the +1 button to render -->
         <div id="___plusone_1" style="text-indent: 0px; margin: 0px; padding: 0px; background: none repeat scroll 0% 0% transparent; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 106px; height: 24px;"><iframe title="+1" data-gapiattached="true" allowtransparency="true" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/fastbutton_002.htm" name="I0_1370542598991" id="I0_1370542598991" vspace="0" tabindex="0" style="position: static; top: 0px; width: 106px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 24px;" marginwidth="0" marginheight="0" hspace="0" frameborder="0" scrolling="no" width="100%"></iframe></div>

<!-- GOOGLE FEEDBURNER BUTTON-->
<a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml"><img src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/feed-icon32x32.png" alt="" style="border:0"></a><a href="http://feeds.feedburner.com/Geeksforgeeks" title="Subscribe to my feed" rel="alternate" type="application/rss+xml">Subscribe</a>

</div>
		</li>
<li id="recent-comments-2" class="widget widget_recent_comments"><h2 class="widgettitle">Recent Comments</h2>
<ul id="recentcomments"><li class="recentcomments">Balasubramanian on <a href="http://www.geeksforgeeks.org/expression-evaluation/#comment-18978">Expression Evaluation</a></li><li class="recentcomments">iceman_w on <a href="http://www.geeksforgeeks.org/given-an-array-of-of-size-n-finds-all-the-elements-that-appear-more-than-nk-times/#comment-18977">Given an array of of size n and a number k, finds all elements that appear more than n/k times</a></li><li class="recentcomments">alexchao on <a href="http://www.geeksforgeeks.org/sort-elements-by-frequency-set-2/#comment-18976">Sort elements by frequency | Set 2</a></li><li class="recentcomments">Nikhil Agrawal on <a href="http://www.geeksforgeeks.org/write-a-c-program-to-get-count-of-leaf-nodes-in-a-binary-tree/#comment-18973">Program to count leaf nodes in a binary tree</a></li><li class="recentcomments">Nikhil Agrawal on <a href="http://www.geeksforgeeks.org/write-a-c-program-to-get-count-of-leaf-nodes-in-a-binary-tree/#comment-18972">Program to count leaf nodes in a binary tree</a></li><li class="recentcomments">Nikhil Agrawal on <a href="http://www.geeksforgeeks.org/write-a-c-program-to-get-count-of-leaf-nodes-in-a-binary-tree/#comment-18970">Program to count leaf nodes in a binary tree</a></li><li class="recentcomments">Niks on <a href="http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/#comment-18969">Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)</a></li><li class="recentcomments">Niks on <a href="http://www.geeksforgeeks.org/dynamic-programming-set-10-0-1-knapsack-problem/#comment-18967">Dynamic Programming | Set 10 ( 0-1 Knapsack Problem)</a></li></ul></li>

</ul>	
				  
		<div class="clear"></div>

		<div id="footer">
		
		    <div class="xhtml">
                        @geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us</a>

		    </div>
		    
		    <div class="credits">
			  Powered by <a href="http://wordpress.org/">WordPress </a> &amp; <a href="http://mootools.net/" title="Mootools JavaScript Framework">MooTools</a>, customized by geeksforgeeks team </div>
			  
		   <div class="clear"></div>						                            
		   
		</div> <!--end footer-->  
        
		<!--[if !lte IE 8]><!--> 
<!--<![endif]--> 
                <script type="text/javascript">
                var sub = document.getElementById('submit');
                document.getElementById('recaptcha-submit-btn-area').appendChild (sub);
                document.getElementById('submit').tabIndex = 6;
                if ( typeof _recaptcha_wordpress_savedcomment != 'undefined') {
                        document.getElementById('comment').value = _recaptcha_wordpress_savedcomment;
                }
                document.getElementById('recaptcha_table').style.direction = 'ltr';
                </script><script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shCore.js"></script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/shBrushCpp.js"></script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.83c";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.83c";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.strings.expandSource = '+ expand source';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['gutter'] = false;
	SyntaxHighlighter.defaults['pad-line-numbers'] = true;
	SyntaxHighlighter.defaults['toolbar'] = false;
	SyntaxHighlighter.all();
</script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/social.js"></script>
<script type="text/javascript" src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/in.js"></script>
<!-- Facebook Comments for WordPress: http://3doordigital.com/wordpress/plugins/facebook-comments/ -->
<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=308017392649785";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>
				  
		</div> <!--end wrapper-->
        
        <div id="ajaxSpinner"></div> <!--For AJAX spinner holder-->
	




<div class=" fb_reset" id="fb-root"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/xd_arbiter.htm" style="border: medium none;" tab-index="-1" title="Facebook Cross Domain Communication Frame" aria-hidden="true" id="fb_xdm_frame_http" allowtransparency="true" name="fb_xdm_frame_http" frameborder="0" scrolling="no"></iframe><iframe src="Backtracking%20_%20Set%207%20%28Sudoku%29%20-%20GeeksforGeeks%20_%20GeeksforGeeks_files/xd_arbiter_002.htm" style="border: medium none;" tab-index="-1" title="Facebook Cross Domain Communication Frame" aria-hidden="true" id="fb_xdm_frame_https" allowtransparency="true" name="fb_xdm_frame_https" frameborder="0" scrolling="no"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div><table class="gstl_0 gssb_c" style="width: 215px; display: none; top: 171px; left: 702px; position: absolute;" cellpadding="0" cellspacing="0"><tbody><tr><td class="gssb_f"></td><td style="width: 100%;" class="gssb_e"></td></tr></tbody></table></body></html>
<!-- Dynamic page generated in 0.443 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2013-05-31 21:58:35 -->
<!-- super cache -->